$startmainflag$/* Copyright 2005-2008 Texthelp Systems Ltd
*/var aaa = "rwDontAlter";var baa = "rwTHcomp";var caa = "rwTHgen";var daa = "rwTHpgen";var eaa = "texthelpStopContinuous";var faa = "texthelpSkip";var gaa = false; var FAST_SPEED = 55;var MEDIUM_SPEED = 40;var DEFAULT_SPEED = MEDIUM_SPEED;var SLOW_SPEED = 25;var VERY_SLOW_SPEED = 15;var maa = "eba_language ENG_UK  ENGLISH UK ENG_US ENGLISH_US SPANISH SPANISH_US ESPANOL SPANISH_ES FRENCH FRENCH_CN";var ENG_UK = 0;var UK = 0; var ENGLISH = 0; var ENG_US = 1;var ENGLISH_US = 1;var SPANISH = 2;var SPANISH_US = 2;var ESPANOL = 3; var SPANISH_ES = 3;var FRENCH = 4;var FRENCH_CN = 5;var xaa = [ "ScanSoft Emily_Full_22kHz", "ScanSoft Jill_Full_22kHz", "ScanSoft Paulina_Full_22kHz", "ScanSoft Isabel_Full_22kHz", "ScanSoft Virginie_Full_22kHz", "ScanSoft Julie_Full_22kHz"]; var yaa = "eba_locale LOCALE_UK LOCALE_US ";var LOCALE_UK = "UK";var LOCALE_US = "US";var Bba = [ [ "Click To Speak Mode", "Select this then click anywhere in the book to start reading text", "Haz clic para el modo hablado"], [ "Speak The Current Selection", "Speak the current selection", "Leer en voz alta el texto seleccionado"], [ "Pause Speech", "Pause Speech", "Discurso de pausa"], [ "Stop Speech", "Stops speech playback", "Parar voz"], [ "Translate Word", "Double-click a word in the book and click this icon\n" + "to translate the word into Spanish", "Traducir palabra"], [ "Fact Finder", "Select some text in the book and click this icon to\n" + "perform a Google search", "Buscador de datos"], [ "Dictionary", "Double-click a word in the book and click this icon to\n" + "see dictionary definitions", "Diccionario"], [ "Highlight Cyan", "Make a selection in the book and click this icon to\n" + "create a blue highlight", "Realce azul verdoso"], [ "Highlight Magenta", "Make a selection in the book and click this icon to\n" + "create a pink highlight", "Realce morado"], [ "Highlight Yellow", "Make a selection in the book and click this icon to\n" + "create a yellow highlight", "Realce amarillo"], [ "Highlight Green", "Make a selection in the book and click this icon to\n" + "create a green highlight", "Realce verde"], [ "Remove Highlights", "Remove all your highlights from this page", "Borrar realce"], [ "Collect Highlights", "Collect all your highlights and display them\n" + "in a window, grouped by color", "Recopilar realces"], [ "Click here to copy the text to the clipboard", "Click here to copy the text to the clipboard", "Haz clic aqu" + String.fromCharCode(237) + " para copiar el texto al portapapeles"],];var Cba = 0;var Dba = Cba++;var Eba = Cba++;var Fba = Cba++; var Gba = Cba++;var Hba = Cba++;var Iba = Cba++;var Jba = Cba++;var Kba = Cba++;var Lba = Cba++;var Mba =Cba++;var Nba = Cba++;var Oba = Cba++;var Pba = Cba++;var Qba = Cba++;var clicktospeak_icon = 1;var play_icon = 2;var search_icons = 28;var translation_icon = 4;var factfinder_icon = 8;var dictionary_icon = 16;var language_icons = 224;var spelling_icon = 32;var homophone_icon = 64;var prediction_icon = 128;var highlight_icons = 3840;var highlightcyan_icon = 256;var highlightmagenta_icon = 512;var highlightyellow_icon = 1024;var highlightgreen_icon = 2048;var collect_icon = 4096;var submit_icon = 8192;var sticky_icon = 16384;var funplay_icon = 32768;var proncreate_icon = 65536;var pronCreate_icon = 65536;var pronedit_icon = 131072;var pronEdit_icon = 131072;var selectSpeed_icon = 262144;var selectspeed_icon = 262144;var pause_icon = 524288;var fullbrowsealoud_icons = 7967;var standardbrowsealoud_icons = 31;var minbrowsealoud_icons = 1;var lessonserver_icons = 12063;var lessonserverswa_icons = 12287;var no_bar = 0;var title_rw = 0;var title_ba = 1;var title_ebooks = 2;var title_th = 3;var title_portal = 4;var Rba = false;var Sba = false;var Tba = false;var Uba = false;var Vba = false;var Wba = false;var Xba = true;var Yba = true;var Zba = " ls_teacherFlag FAST_SPEED DEFAULT_SPEED MEDIUM_SPEED SLOW_SPEED VERY_SLOW_SPEED pause_icon";var aba = false;var eba_use_container;var eba_allow_alerts_flag = true; var eba_server_version;var eba_serverVersion; var eba_client_version;var eba_clientVersion; var eba_icons;var eba_no_display_icons; var eba_server;var eba_speech_server;var eba_speechServer; var eba_speech_server_backup;var eba_speechServerBackup; var eba_translate_server; var eba_dictionary_server; var eba_custom_dictionary_url; var eba_alt_dictionary_url; 
var eba_folder;var eba_client_folder;var eba_clientFolder; var eba_voice;var eba_title;var eba_hover_flag;var eba_login_name;var eba_login_password;var eba_loginName;var eba_loginPassword;var eba_language;var eba_voice_from_lang_flag; var eba_locale;var eba_speed_value;var eba_speedValue;var eba_speed_offset; var ls_teacherFlag = false;var eba_no_title;var eba_noTitleFlag;var eba_hidden_bar; var eba_initial_speech_on; var eba_continuous_reading; var eba_ignore_buttons; var eba_speechCacheGenerateFlag;var eba_speechCacheFlag;var eba_cache_live_fallover;var eba_autoCachePage;var eba_cacheResult = ""; var eba_cache_retry; var eba_cache_retry_timeout; var eba_override_x; var eba_override_y; var eba_cust_id;var eba_custId;var eba_book_id;var eba_bookId;var eba_page_id;var eba_pageId;var eba_annotate_confirm_delete_note; var eba_annotate_persist_notes; var eba_annotate_persist_highlights; var eba_annotate_note_editor_id; var eba_annotate_highlight_editor_id; var eba_annotate_storage_url; var eba_annotate_note_reader_id; var eba_annotate_highlight_reader_id; var eba_bubble_mode;var eba_bubble_freeze_on_shift_flag;var cba = false;var dba = true; var eba = "133"; var fba = "133"; var gba = fullbrowsealoud_icons;var hba = 0;var iba = "portal.texthelp.com"; 
var jba = "speechserver1.texthelp.com";var kba = null; var lba = null;var mba = null;var nba = "EmbeddedBrowsealoud";var oba = "/EmbeddedBrowsealoud/";var pba = "ScanSoft Jill_Full_22kHz";var qba = title_th;var rba = null; var sba = null; var tba = null; var uba = -1;var vba = "rwonline"; var wba = "rwonline";var xba = 0; var yba = false; var zba = null; var Aca = "US"; var Bca = MEDIUM_SPEED;var Cca = false;var Dca = false; var Eca = false;var Fca = false;var Gca = false;var Hca = false;var Ica = false;var Jca = null;var Kca = -1; var Lca = -1; var Mca = false; var Nca = false; var Oca = "*"; var Pca = "*"; var Qca = "*"; var Rca = "*"; var Sca = false; var Tca = false; var Uca = "portal.texthelp.com"; var Vca = ""; var Wca = true;var Xca = -1;var Yca = -1;var Zca = -1;var aca = -1;var bca = -1;var cca = false;var dca = false;var eca = false;var fca = true;var gca = null;var hca = false;var ica = false;function $rw_setIconsToLoad(p_nIcons){ var jca = false; if((p_nIcons & clicktospeak_icon) == clicktospeak_icon) { if(!hca) { Xca = Bfa('hover', Bba[Dba][xba]); } jca = true; } if((p_nIcons & play_icon) == play_icon) { if(!Gca && !Fca) { if(!hca) { qea('play', Bba[Eba][xba]); } jca = true; } } if((p_nIcons & pause_icon) == pause_icon) { qea('pause', Bba[Fba][xba], "gif"); } if(jca) { qea('stop', Bba[Gba][xba]); } var kca = false; if((p_nIcons & funplay_icon) == funplay_icon) { qea('funplay', Bba[Eba][xba]); kca = true; } if(kca) { qea('funstop', Bba[Gba][xba]); } if((p_nIcons & translation_icon) == translation_icon) { qea('trans', Bba[Hba][xba]); } if((p_nIcons & factfinder_icon) == factfinder_icon) { qea('ffinder', Bba[Iba][xba]); } if((p_nIcons & dictionary_icon) == dictionary_icon) { qea('dict', Bba[Jba][xba]); } if((p_nIcons & spelling_icon) == spelling_icon) { Zca = Bfa('spell', 'Spell Checker'); } if((p_nIcons & homophone_icon) == homophone_icon) { aca = Bfa('homophone', 'Homophone Checker'); } if((p_nIcons & prediction_icon) == prediction_icon) { bca = Bfa('pred', 'Prediction Checker'); } var lca = false; if((p_nIcons & highlightcyan_icon) == highlightcyan_icon) { qea('cyan', Bba[Kba][xba]); lca = true; } if((p_nIcons & highlightmagenta_icon) == highlightmagenta_icon) { qea('magenta', Bba[Lba][xba]); lca = true; } if((p_nIcons & highlightyellow_icon) == highlightyellow_icon) { qea('yellow', Bba[Mba][xba]); lca = true; } if((p_nIcons & highlightgreen_icon) == highlightgreen_icon) { qea('green', Bba[Nba][xba]); lca = true; } if(lca) { qea('clear', Bba[Oba][xba]); } if((p_nIcons & collect_icon) == collect_icon) { qea('collect', Bba[Pba][xba]); } if((p_nIcons & submit_icon) == submit_icon) { qea('submit', 'Submit'); } if((p_nIcons & sticky_icon) == sticky_icon) { Yca = Bfa('sticky', 'Sticky note', 'gif'); } if(rba != null && sba != null && tba != null) { if((p_nIcons & pronCreate_icon) == pronCreate_icon) { qea('pronCreate', 'Create pronunciation', 'gif'); } if((p_nIcons & pronEdit_icon ) == pronEdit_icon ) { qea('pronEdit', 'Edit pronunciation', 'gif'); } }}var mca = 0;function $rw_setVoice(p_strName){ if(typeof(p_strName) == "string") { if(p_strName != null && p_strName.length > 0) { eba_voice = p_strName; pba = p_strName; try { var oca = rw_getWebToSpeech(); oca.setVoiceName(pba); } catch(err) { } } }}function $rw_setVoiceForLanguage(p_strName, p_nLanguageCode){ if(typeof(p_nLanguageCode) == "string") { try { p_nLanguageCode = parseInt(p_nLanguageCode); } catch(err) { return; } } if(typeof(p_strName) == "string" && typeof(p_nLanguageCode) == "number") { if(p_strName != null && p_strName.length > 0 && p_nLanguageCode >= 0 && p_nLanguageCode < xaa.length) { xaa[p_nLanguageCode] = p_strName; } }}function $rw_setSpeedValue(p_nSpeedValue){ if(typeof(p_nSpeedValue) == "number") { if(p_nSpeedValue > -4 && p_nSpeedValue < 101) { eba_speedValue = p_nSpeedValue; eba_speed_value = p_nSpeedValue; Bca = p_nSpeedValue; try { var oca = rw_getWebToSpeech(); oca.setSpeedValue("" + Bca); } catch(err) { } } } else if(typeof(p_nSpeedValue) == "string") { var pca = p_nSpeedValue.toUpperCase(); if(pca == "VERY_SLOW_SPEED") { $rw_setSpeedValue(VERY_SLOW_SPEED); } else if(pca == "SLOW_SPEED") { $rw_setSpeedValue(SLOW_SPEED); } else if(pca == "MEDIUM_SPEED") { $rw_setSpeedValue(MEDIUM_SPEED); } else if(pca == "FAST_SPEED") { $rw_setSpeedValue(FAST_SPEED); } }}function $rw_setBarVisibility(p_bShow){ if(typeof(p_bShow) == "boolean") { var qca = document.getElementById("rwDrag"); if(p_bShow) { qca.style.visibility = "visible"; qca.style.display = "inline"; } else { qca.style.visibility = "hidden"; qca.style.display = "none"; } Dca = !p_bShow; qha(); }}function $rw_enableClickToSpeak(p_bEnable){ if(p_bEnable && !$g_bMouseSpeech) { $rw_event_hover(null, Xca); } else if(!p_bEnable && $g_bMouseSpeech) { $rw_event_hover(null, Xca); if(Xca > -1) { var Eta = Dea; Dea = 0; rw_mouseOffIcon("hover"); Dea = Eta; } }}function $rw_enableSpeachByBubbleMode(p_bState){ hca = p_bState; if(hca == false) { Gga(); Hga(); $rw_stopSpeech(); }}function $rw_enableContinuousReading(p_bState){ fca = p_bState; eba_continuous_reading = p_bState;}var sca = null;function $rw_stopSpeech(){ $rw_event_stop();}var tca = 200;function $rw_speakById(id){ var Uta = (new Date).getTime(); if((Uta - mca) < tca ) { return; } g_nNavDoubleClick = Uta; var target = Jda(id); if(target != null) { $rw_stopSpeech(); sca = target; rw_speakHoverTarget(target); }}function $rw_speakByIdFromFile(id, p_strUrl){ var Uta = (new Date).getTime(); if((Uta - mca) < tca ) { return; } g_nNavDoubleClick = Uta; var target = Jda(id); if(target != null) { $rw_stopSpeech(); sca = target; Jma(target, p_strUrl); }}function $rw_speakByIdHighlightOnly(id){ var Uta = (new Date).getTime(); if((Uta - mca) < tca ) { return; } g_nNavDoubleClick = Uta; var target = Jda(id); if(target != null) { $rw_stopSpeech(); sca = target; rw_speechHighlightOnly(target); }}function Jda(id){ var lBb = document.getElementById(id); if(lBb != null) { var yca = lBb.innerHTML; if(yca.length > 0) { var Ina = fna(lBb, true); if(Ina == null || Ina.nodeType != 3) { return; } var yxa = hna(lBb, true); if(yxa == null || yxa.nodeType != 3) { return; } var WBb = Jka(Ina, 0); var XBb = (yxa.nodeType == 3)? Jka(yxa, yxa.nodeValue.length) : Jka(yxa, 0); var wya = new Bka(document.body, WBb, XBb); var target = new THHoverTarget(null, null, wya); return target; } } return null;}function $rw_setSentenceFromSelection(){ var moa = $rw_getTHCaretRangeFromSelection(); if(moa == null) { return; } var eBb = rna(moa.eBb); var fBb = Boa(moa.fBb); if(eBb != null && fBb != null) { var Hda = new cja(eBb, fBb); var wya = vsa(Hda); if(wya != null) { sca = new THHoverTarget(null, null, wya); } }}function $rw_speakCurrentSentence(p_node, p_nOffset){ var Uta = (new Date).getTime(); var Lda = (Uta - mca); if(Lda < tca ) { return; } var qda = Rda(p_node, p_nOffset); if(qda != null) { if(qda.equals(sca)) { if(Lda < tca * 5) { return; } } $rw_stopSpeech(); sca = qda; rw_speakHoverTarget(qda); } mca = Uta;}function $rw_speakCurrentSentenceHighlightOnly(p_node, p_nOffset){ var Uta = (new Date).getTime(); if((Uta - mca) < tca ) { return; } mca = Uta; var qda = Rda(p_node, p_nOffset); if(qda != null) { $rw_stopSpeech(); sca = qda; rw_speechHighlightOnly(qda); }}function Rda(p_node, p_nOffset){ var wya; var qda; if(typeof(p_node) == "undefined" || p_node == null) { if(sca == null) { var moa = ioa(document.body); if(moa == null) { return null; } wya = vsa(moa); qda = new THHoverTarget(null, null, wya); } else { qda = sca; } } else { if(p_node instanceof cja) { wya = vsa(p_node); } else { var FCb; if(typeof(p_nOffset) == "undefined") { FCb = new THCaret(p_node, 0, true); } else { FCb = new THCaret(p_node, p_nOffset, true); } var eBb = rna(FCb); var fBb = Boa(FCb); if(eBb == null || fBb == null) { return null; } var moa = new cja(eBb, fBb); if(moa == null) { return null; } wya = vsa(moa); } qda = new THHoverTarget(null, null, wya); } return qda;}function $rw_speakNextSentence(){ var Uta = (new Date).getTime(); if((Uta - mca) < tca ) { return; } mca = Uta; if(sca == null) { $rw_speakCurrentSentence(); return; } var nda = sca.getCaretRange(); var Hma = toa(nda); if(Hma == null) { return; } var wya = vsa(Hma); var qda = new THHoverTarget(null, null, wya); $rw_stopSpeech(); sca = qda; rw_speakHoverTarget(qda);}function $rw_speakNextSentenceHighlightOnly(){ var Uta = (new Date).getTime(); if((Uta - mca) < tca ) { return; } mca = Uta; if(sca == null) { $rw_speakCurrentSentenceHighlightOnly(); return; } var nda = sca.getCaretRange(); var Hma = toa(nda); if(Hma == null) { return; } var wya = vsa(Hma); var qda = new THHoverTarget(null, null, wya); $rw_stopSpeech(); sca = qda; rw_speechHighlightOnly(qda);}function $rw_speakPreviousSentence(){ var Uta = (new Date).getTime(); if((Uta - mca) < tca ) { return; } mca = Uta; if(sca == null) { $rw_speakCurrentSentence(); return; } var nda = sca.getCaretRange(); var oda = Cpa(nda); if(oda == null) { return; } var wya = vsa(oda); var qda = new THHoverTarget(null, null, wya); $rw_stopSpeech(); sca = qda; rw_speakHoverTarget(qda);}function $rw_speakPreviousSentenceHighlightOnly(){ var Uta = (new Date).getTime(); if((Uta - mca) < tca ) { return; } mca = Uta; if(sca == null) { $rw_speakCurrentSentenceHighlightOnly(); return; } var nda = sca.getCaretRange(); var oda = Cpa(nda); if(oda == null) { return; } var wya = vsa(oda); var qda = new THHoverTarget(null, null, wya); $rw_stopSpeech(); sca = qda; rw_speechHighlightOnly(qda);}function $rw_getTHCaretRangeFromSelection(){ var sel = nra(); if(sel != null && sel.range instanceof Bka) { return ysa(sel.range); } return null;}function $rw_getNumberOfHighlights(){ if(typeof(sya) != "undefined") { return sya.length; } else { return 0; }}function $rw_getHighlightText(index){ if(typeof(sya) != "undefined" && index > -1 && index < sya.length) { if (Wea) { return sya[index].text; } else { return sya[index].toString(); } } return "";}function $rw_getHighlightColor(index){ if(typeof(tya) != "undefined" && index > -1 && index < tya.length) { if (Wea) { return tya[index]; } else { return tya[index]; } } return "";}function $rw_getHighlightColour(index){ return $rw_getHighlightColor(index);}var rda = false;function $rw_isPageLoaded(){ return (rda && sda);}function $rw_highlightOnlyWTSFailed(){}function $rw_log(p_txt){ Iva(p_txt);}Tba = true;Tba = true;/*Code designed and developed by Stuart McWilliams.*/var sda = false;var g_icons = new Array();var g_toggleIcons = new Array();var uda = 0;var vda = 0;var wda = 300;var xda = { x:0,y:0 };var yda = { x:0,y:0 };var zda = null;var Aea = false;var Bea = 5;var Cea = false;var Dea = 0;var g_strLastClicked = "";var Fea = 1.0;var Gea = 0.01;var Hea;if(qba == title_th){ Hea = 8;}else{ Hea = 4;}var Iea = 60;var Jea = [0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00];var Kea = [0.00,0.00,0.00,0.00,0.00,0.00,0.00,0.00];var Lea = [400, 300, 300, 300, 600, 250, 220, 660];var Mea = [40, 40, 40, 40, 40, 250, 40, 60];var Nea = [false, false, false, false, false, false, false, false];var $g_bMouseSpeech = false;var Oea = 0;var Pea = 1;var Qea = 2;var Rea = 3;var Sea = 4;var Tea = 5;var Uea = 6;var Vea = 7; var Wea = navigator.appName == "Microsoft Internet Explorer";var Xea = navigator.appVersion.indexOf("Chrome") > -1;var Yea = navigator.appVersion.indexOf("Safari") > -1;var Zea = !(Wea || Yea); var aea = "localhost";var $g_strFileLoc = ""; var bea = "";var g_speakableTextAreaTarget = null;var g_nSpeakableTextAreaTimerId = 0;var eea = 1;var fea = 0;var gea = false;var hea = false;var iea = null;var jea = 1;var kea = 2;var lea = 3;var mea = "";var nea = false;var oea = 1;var pea = false;function qea(p_strName, p_strAlt, p_strExt){ if(typeof(p_strExt) == "undefined") { p_strExt = "jpg"; } g_icons[uda] = new Array(6); g_icons[uda][0] = p_strName; g_icons[uda][1] = new Image(); g_icons[uda][1].name = p_strName; g_icons[uda][1].src = $g_strFileLoc + 'rwimgs/' + p_strName + '-flat.' + p_strExt; g_icons[uda][2] = new Image(); g_icons[uda][2].name = p_strName; g_icons[uda][2].src = $g_strFileLoc + 'rwimgs/' + p_strName + '-hover.' + p_strExt; g_icons[uda][3] = new Image(); g_icons[uda][3].name = p_strName; g_icons[uda][3].src = $g_strFileLoc + 'rwimgs/' + p_strName + '-toggle.' + p_strExt; g_icons[uda][4] = p_strAlt; g_icons[uda][5] = new Image(); g_icons[uda][5].src = $g_strFileLoc + 'rwimgs/' + p_strName + '-grey.' + p_strExt; uda++;}var rea = 1;var sea = 2;var tea = 3;var uea = 4;var vea = 1;var wea = 2;var xea = 3;var yea = 5;var zea = 6;var Afa = 7;function Bfa(name, alt, p_strExt){ if(typeof(p_strExt) == "undefined") { p_strExt = "jpg"; } var XEb = vda; g_toggleIcons[vda] = new Array(9); g_toggleIcons[vda][0] = name; g_toggleIcons[vda][1] = new Image(); g_toggleIcons[vda][1].name = name; g_toggleIcons[vda][1].src = $g_strFileLoc + 'rwimgs/' + name + 'off-flat.' + p_strExt; g_toggleIcons[vda][2] = new Image(); g_toggleIcons[vda][2].name = name; g_toggleIcons[vda][2].src = $g_strFileLoc + 'rwimgs/' + name + 'off-hover.' + p_strExt; g_toggleIcons[vda][3] = new Image(); g_toggleIcons[vda][3].name = name; g_toggleIcons[vda][3].src = $g_strFileLoc + 'rwimgs/' + name + 'off-toggle.' + p_strExt; g_toggleIcons[vda][4] = alt; g_toggleIcons[vda][5] = new Image(); g_toggleIcons[vda][5].name = name; g_toggleIcons[vda][5].src = $g_strFileLoc + 'rwimgs/' + name + 'off-grey.' + p_strExt; g_toggleIcons[vda][6] = new Image(); g_toggleIcons[vda][6].name = name; g_toggleIcons[vda][6].src = $g_strFileLoc + 'rwimgs/' + name + 'on-toggle.' + p_strExt; g_toggleIcons[vda][7] = new Image(); g_toggleIcons[vda][7].name = name; g_toggleIcons[vda][7].src = $g_strFileLoc + 'rwimgs/' + name + 'on-grey.' + p_strExt; g_toggleIcons[vda][8] = false; vda++; return XEb;}function Efa(p_strName){ var i=0; for(i=0; i<g_toggleIcons.length; i++) { if(g_toggleIcons[i][0] == p_strName) { return i; } } for(i=0; i<g_icons.length; i++) { if(g_icons[i][0] == p_strName) { return i; } } return -1;}function Ffa(i){ var ofa; ofa = ''; var Ofa = g_icons[i][1].src; var LDb = g_icons[i][0]; var pka = g_icons[i][4]; if(Yea) { if(LDb.equalsTH("submit")) { Hea += 53; ofa = '<img  ignore="1" name="' + LDb + '" class=rwIcon src="' + Ofa + '" width=53 height=32 '; } else { Hea += 33; ofa = '<img  ignore="1" name="' + LDb + '" class=rwIcon src="' + Ofa + '" width=33 height=32 '; } ofa += 'alt="' + pka + '"'; ofa += 'title="' + pka + '"'; ofa += 'id="thnodragicon"'; ofa += 'onclick="if($rw_blockClick(\'' + LDb + '\')){return true;}else{$rw_event_' + LDb + '(event);}"'; ofa += 'onMouseOver="rw_mouseOverIcon(\'' + LDb + '\')" '; ofa += 'onMouseOut="rw_mouseOffIcon(\'' + LDb + '\')" '; ofa += 'onMouseDown="rw_press(\'' + LDb + '\')"'; ofa += 'onMouseUp="rw_mouseOverIcon(\'' + LDb + '\')"'; ofa += ' />'; } else { var Rfa = 33; if(LDb.equalsTH("submit")) { Rfa = 53; } ofa += '<span ignore="1"'; ofa += 'onMouseOver="rw_mouseOverIcon(\'' + LDb + '\'); " ' + 'onMouseOut="rw_mouseOffIcon(\'' + LDb + '\'); " ' + 'onMouseDown="'+ 'rw_press(\'' + LDb + '\'); '+ 'g_strLastClicked=\'' + LDb + '\';" ' + 'onMouseUp="'+ 'rw_mouseOverIcon(\'' + LDb + '\'); ' + 'if(g_strLastClicked.equalsTH(\'' + LDb + '\'))'+ '{'+ 'if($rw_blockClick(\'' + LDb + '\'))'+ '{return true;}'+ 'else'+ '{'+ '$rw_event_' + LDb + '(event);'+ '}'+ '}" >'; ofa += Lfa(g_icons[i][1].src, LDb, "flat", pka, Rfa, true); ofa += Lfa(g_icons[i][2].src, LDb, "hover", pka, 0, false); ofa += Lfa(g_icons[i][3].src, LDb, "toggle", pka, 0, false); ofa += Lfa(g_icons[i][5].src, LDb, "mask", pka, 0, false); ofa += '</span>'; } return ofa;}function Lfa(p_strIcon, p_strName, p_strExt, p_strAlt, p_nWidth, p_bShow){ var ofa; ofa = ''; Hea += p_nWidth; ofa = '<img ignore="1" name="' + p_strName + p_strExt + '" class=rwIcon src="' + p_strIcon + '" width=' + p_nWidth + ' height=32 ' + 'style="width:' + p_nWidth + 'px;" ' + 'alt="' + p_strAlt + '" title="' + p_strAlt + '" id="thnodragicon" '; if(p_bShow) { ofa += 'style="visibility:visible; display:inline" '; } else { ofa += 'style="visibility:hidden; display:none" '; } ofa += '/>'; return ofa;}function Nfa(i){ var ofa; ofa = ''; var Ofa = g_toggleIcons[i][1].src; var LDb = g_toggleIcons[i][0]; var pka = g_toggleIcons[i][4]; if(LDb=="hover" && eba_initial_speech_on) { Ofa = g_toggleIcons[i][zea].src; g_toggleIcons[i][8] = true; } if(Yea) { Hea += 33; ofa = '<img  ignore="1" name="' + LDb + '" class=rwIcon src="' + Ofa + '" width=33 height=32 ' + 'style="visibility:visible; display:inline" ' + 'alt="' + pka + '" title="' + pka + '" id="thnodragicon" '; ofa += 'onMouseOver=' + '"if(g_toggleIcons[' + i + '][8] == false) ' + '{' + 'rw_mouseOverIcon(\'' + LDb + '\');' + '} " ' + 'onMouseOut=' + '"if(g_toggleIcons[' + i + '][8] == false) ' + '{'+ 'rw_mouseOffIcon(\'' + LDb + '\');'+ '} " ' + 'onMouseDown=' + '"if(g_toggleIcons[' + i + '][8] == false)'+ '{'+ 'rw_press(\'' + LDb + '\');'+ '} ' + 'g_strLastClicked=\'' + LDb+ '\';" ' + 'onMouseUp=' + '"if(g_strLastClicked.equalsTH(\'' + LDb + '\'))'+ '{'+ 'if(g_bSpeechModeFlag && ICONS_TO_DISABLE.indexOf(\'' + LDb + '\')> -1)'+ '{return true;}'+ 'else{$rw_event_' + LDb + '(event, ' + i + ');}'+ '}' + 'if(g_toggleIcons[' + i + '][8] == false)'+ '{' + 'rw_mouseOverIcon(\'' + LDb + '\');' + '}" '; ofa += '/>'; } else { var Rfa = 33; ofa += '<span ignore="1"'; ofa += 'onMouseOver=' + '"if(g_toggleIcons[' + i + '][8] == false) ' + '{' + 'rw_mouseOverIcon(\'' + LDb + '\');' + '} " ' + 'onMouseOut=' + '"if(g_toggleIcons[' + i + '][8] == false) ' + '{'+ 'rw_mouseOffIcon(\'' + LDb + '\');'+ '} " ' + 'onMouseDown=' + '"if(g_toggleIcons[' + i + '][8] == false)'+ '{'+ 'rw_press(\'' + LDb + '\');'+ '} ' + 'g_strLastClicked=\'' + LDb+ '\';" ' + 'onMouseUp=' + '"if(g_strLastClicked.equalsTH(\'' + LDb + '\'))'+ '{'+ 'if(g_bSpeechModeFlag && ICONS_TO_DISABLE.indexOf(\'' + LDb + '\')> -1)'+ '{return true;}'+ 'else{$rw_event_' + LDb + '(event, ' + i + ');}'+ '}' + 'if(g_toggleIcons[' + i + '][8] == false)'+ '{' + 'rw_mouseOverIcon(\'' + LDb + '\');' + '}" >'; ofa += Lfa(g_toggleIcons[i][1].src, LDb, "flat", pka, Rfa, true); ofa += Lfa(g_toggleIcons[i][2].src, LDb, "hover", pka, 0, false); ofa += Lfa(g_toggleIcons[i][3].src, LDb, "toggle", pka, 0, false); ofa += Lfa(g_toggleIcons[i][5].src, LDb, "mask", pka, 0, false); ofa += Lfa(g_toggleIcons[i][6].src, LDb, "toggleOn", pka, 0, false); ofa += Lfa(g_toggleIcons[i][7].src, LDb, "maskOn", pka, 0, false); ofa += '</span>'; } return ofa;}function Tfa(p_bShow){ var ofa = ""; Hea += 100; ofa += ' <select ignore="1" onchange="$rw_setSpeedValue(parseInt(this.value));" ' + 'style="vertical-align=top;margin-top:5px;margin-bottom:8px;border: 1px solid;color:#000000;background-color:#f1efe5">'; 
 if(Bca == -3 || Bca == SLOW_SPEED) { ofa += '  <option ignore="1" selected value="' + SLOW_SPEED+ '">'; } else { ofa += '  <option ignore="1" value="' + SLOW_SPEED+ '">'; } ofa += '   Slow'; ofa += '  </option>'; if(Bca == -2 || Bca == MEDIUM_SPEED) { ofa += '  <option ignore="1" selected value="' + MEDIUM_SPEED +'">'; } else { ofa += '  <option ignore="1" value="' + MEDIUM_SPEED +'">'; } ofa += '   Medium'; ofa += '  </option>'; if(Bca == -1 || Bca == FAST_SPEED) { ofa += '  <option ignore="1" selected value="' + FAST_SPEED + '">'; } else { ofa += '  <option ignore="1" value="' + FAST_SPEED + '">'; } ofa += '   Fast'; ofa += '  </option>'; ofa += ' </select>'; return ofa;}function Ufa(p_strName, p_strExt, p_bToggleIcon){ if(p_strExt != null) { if(p_strExt == "toggle") { Dea = 2; } var Vfa = document.images[p_strName + p_strExt].style; Vfa.visibility = "visible"; Vfa.display = "inline"; if(p_strName == "submit") { Vfa.width = "53px"; } else { Vfa.width = "33px"; } } if(p_strExt != "flat") { document.images[p_strName + "flat"].style.visibility = "hidden"; document.images[p_strName + "flat"].style.display = "none"; document.images[p_strName + "flat"].style.width = "0px"; } if(p_strExt != "hover") { document.images[p_strName + "hover"].style.visibility = "hidden"; document.images[p_strName + "hover"].style.display = "none"; document.images[p_strName + "hover"].style.width = "0px"; } if(p_strExt != "toggle") { document.images[p_strName + "toggle"].style.visibility = "hidden"; document.images[p_strName + "toggle"].style.display = "none"; document.images[p_strName + "toggle"].style.width = "0px"; } if(p_strExt != "mask") { document.images[p_strName + "mask"].style.visibility = "hidden"; document.images[p_strName + "mask"].style.display = "none"; document.images[p_strName + "mask"].style.width = "0px"; } if(p_bToggleIcon) { if(p_strExt != "toggleOn") { document.images[p_strName + "toggleOn"].style.visibility = "hidden"; document.images[p_strName + "toggleOn"].style.display = "none"; document.images[p_strName + "toggleOn"].style.width = "0px"; } if(p_strExt != "mask") { document.images[p_strName + "maskOn"].style.visibility = "hidden"; document.images[p_strName + "maskOn"].style.display = "none"; document.images[p_strName + "maskOn"].style.width = "0px"; } }}function $rw_barInit(){ var Iga = false; if(typeof(BYPASS_BROWSER_CHECK) != "undefined" && BYPASS_BROWSER_CHECK == "y") { Iga = true; } else { Iga = Kga(); } if(!Iga) { return; } Uga(); if(typeof(pktTitleId) != "undefined") { Wga(); } if(typeof(eba_annotate_storage_url) == "string" || typeof(eba_annotate_highlight_editor_id) == "string" || typeof(eba_annotate_note_editor_id) == "string" ) { Vga(); } if(xba == SPANISH) { pba = "ScanSoft Paulina_Full_22kHz"; } if(typeof(dtdType) != "undefined") { mea = dtdType; if(dtdType == "xtran") { nea = true; } } uba = parseInt(rba); if(uba >= 200 && uba < 300) { dca = true; if(vba == null) { vba = "scholastic"; wba = "scholastic"; } sba = "none"; var Xfa = document.getElementsByTagName("meta"); var IEb = Xfa.length; var i; for(i=0; i<IEb; i++ ) { var Zfa = Xfa[i]; if(Zfa.name != null) { if(Zfa.name.toLowerCase() == "assetid" && Zfa.content != null && Zfa.content.length > 0) { tba = Zfa.content; } else if(Zfa.name.toLowerCase() == "pcode" && Zfa.content != null && Zfa.content.length > 0) { sba = Zfa.content; } } } var afa = window.location.search; var Lva; var Mva; var dfa; Lva = afa.indexOf("id="); while(Lva > 0) { dfa = afa.charAt(Lva - 1); if(dfa == "?" || dfa == "&") { Mva = afa.indexOf("&", Lva + 3); if(Mva == -1) { tba = afa.substr(Lva + 3); } else { tba = afa.substring(Lva + 3, Mva); } Lva = -1; } else { Lva = afa.indexOf("id=", Lva + 1); } } Lva = afa.indexOf("product_id="); while(Lva > 0) { dfa = afa.charAt(Lva - 1); if(dfa == "?" || dfa == "&") { Mva = afa.indexOf("&", Lva + 11); if(Mva == -1) { sba = afa.substr(Lva + 11); } else { sba = afa.substring(Lva + 11, Mva); } Lva = -1; } else { Lva = afa.indexOf("product_id=", Lva + 1); } } } if(uba == 300) { sba = "index"; tba = "1"; var efa = document.location; if(efa != null) { var KEb = efa.pathname; if(KEb.length > 0) { var gfa = KEb.lastIndexOf("/"); if(gfa > -1) { KEb = KEb.substr(gfa + 1); gfa = KEb.indexOf(".html"); if(gfa > -1) { KEb = KEb.substring(0, gfa); sba = KEb; } } } } } var hfa = "http://" + iba + "/"; var ifa = "http://" + jba + "/"; var jfa; if(kba != null) { jfa = "http://" + kba + "/"; } else { jfa = null; } if(Wea) { var kfa = ega(); if(!kfa) { eca = true; if(Fca) { } else { Bwa("The embedded speech toolbar cannot be added due to invalid html tag markup in this page .\n" + "Try using FireFox or Safari to view this page or contact the page author to notify them of this error."); return; } } } var lfa; if(eba.length > 0) { lfa = nba + "/v" + eba; } else { lfa = nba; } if(lfa.length > 0) { $g_strFileLoc = hfa + lfa + "/"; } else { $g_strFileLoc = hfa; } bea = oba; try { var mfa = new String(document.location); if(mfa.substring(0,4) == "file") { $g_strFileLoc = ""; bea = ""; } } catch(ignore) { } if(qba == title_rw) { document.writeln("<link href=\"" + $g_strFileLoc + "rwMainRWBar.css\" type=\"text/css\" rel=\"stylesheet\">"); } if(qba == title_ba) { document.writeln("<link href=\"" + $g_strFileLoc + "rwMainBABar.css\" type=\"text/css\" rel=\"stylesheet\">"); } if(qba == title_ebooks) { document.writeln("<link href=\"" + $g_strFileLoc + "rwMainEbooksBar.css\" type=\"text/css\" rel=\"stylesheet\">"); } if(qba == title_th) { document.writeln("<link href=\"" + $g_strFileLoc + "rwMainTHBar.css\" type=\"text/css\" rel=\"stylesheet\">"); } if(qba == title_portal) { document.writeln("<link href=\"" + $g_strFileLoc + "rwMainPortalBar.css\" type=\"text/css\" rel=\"stylesheet\">"); } $rw_setIconsToLoad(gba); var nfa = ''; for (var i = 0; i < vda; i++) { nfa += Nfa(i); } for (var i = 0; i < uda; i++) { nfa += Ffa(i); } if((gba & selectSpeed_icon) == selectSpeed_icon) { nfa += Tfa(true); } if(uda > 0 && Hea< 110) { Hea = 110; } else if(uda == 0) { Hea = 0; } var ofa = ""; if(Hea > 0) { if(cba) { ofa = '<div id="rwDrag" style="position:relative" rwTHcomp="1" >'; } else { ofa = '<div id="rwDrag" rwTHcomp="1">'; } if(!aba) { ofa += ' <div id="rwMainOutline" class="rwToolbarOutline" style="width:' + Hea + 'px;'; if(Dca) { ofa += 'visibility:hidden;display:none;'; } ofa += '">'; if(qba == title_th) { if(Yea) { ofa += '  <div id="rwDragMe" class="rwToolbarCaption">' + '<a href="http://www.texthelp.com" target="new" >' + '<img border="0" ignore align="right" src="' + $g_strFileLoc + 'rwimgs/logo.gif" title="Click here to go to www.texthelp.com" ' + 'alt="Click here to go to www.texthelp.com" /></a>' + '</div>'; } else { ofa += '  <div id="rwDragMe" class="rwToolbarCaption">' + '<a href="http://www.texthelp.com" target="new" style="cursor:hand">' + '<img border="0" ignore align="right" src="' + $g_strFileLoc + 'rwimgs/logo.gif" title="Click here to go to www.texthelp.com" ' + 'alt="Click here to go to www.texthelp.com" /></a>' + '</div>'; } } else { ofa += '  <div id="rwDragMe" class="rwToolbarCaption" ></div>'; } } else { ofa += ' <div id="rwMainNoOutline" style="width:' + Hea + 'px; visible:hidden;display:none;">'; } ofa += '  <div class="rwToolbarBar">'; if(qba != title_th) { ofa += '</div>'; } ofa += nfa; if(!aba) { ofa += '\n</div></div>'; if(qba == title_th) { ofa += '</div>'; } } else { ofa += '\n</div></div>'; } } else { ofa = '<div id="rwDrag" rwTHcomp="1" visibility="hidden">'; ofa += '\n</div>'; } var pfa; if(vba != null && wba != null) { pfa = '&userName=' + vba + '&userPassword=' + wba; } else { pfa = ""; } if(Mca) { pfa += "&customerName=pkt"; } ofa += '<object classid="clsid:d27cdb6e-ae6d-11cf-96b8-444553540000" '; ofa += 'codebase="http://fpdownload.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=8,0,0,0" '; ofa += 'width="1" height="1" id="WebToSpeech" align="middle">'; ofa += '  <param name="allowScriptAccess" value="sameDomain" />'; ofa += '  <param name="movie" value="' + bea + 'WebToSpeech' + fba + '.swf" />'; ofa += '  <param name="quality" value="high" />'; ofa += '  <param name="bgcolor" value="#ffffff" />'; ofa += '  <param name="flashVars" value="lessonServerLoc=' + hfa + '&speechServerLoc=' + ifa + '&speedValue=' + Bca + pfa; if(lba != null) { ofa += '&translateServerLoc=' + lba; } if(mba != null) { ofa += '&dictionaryServerLoc=' + mba; } if(Fca || Gca ) { ofa += '&cacheMode=true'; if(Hca) { ofa += '&cacheLiveFallover=true'; } } if(jfa != null) { ofa += '&speechServerBackupLoc=' + jfa; } if(rba != null && sba != null && tba != null) { ofa += '&custID=' + rba; ofa += '&bookID=' + sba; ofa += '&pageID=' + tba; } if(Kca > -1) { ofa += '&cacheCount=' + Kca; } if(Lca > -1) { ofa += '&cacheTimeDelay=' + Lca; } ofa += '&locale=' + Aca + ''; ofa += '&speechName=' + pba + '"/>'; ofa += '  <embed src="' + bea + 'WebToSpeech' + fba + '.swf" quality="high" bgcolor="#ffffff" width="1" height="1"'; ofa += '   name="WebToSpeech" align="middle" allowScriptAccess="sameDomain"'; ofa += '   type="application/x-shockwave-flash" pluginspage="http://www.macromedia.com/go/getflashplayer"'; ofa += '   flashVars="lessonServerLoc=' + hfa + '&speechServerLoc=' + ifa + '&speedValue=' + Bca + pfa; if(lba != null) { ofa += '&translateServerLoc=http://' + lba + "/"; } if(mba != null) { ofa += '&dictionaryServerLoc=http://' + mba + "/"; } if(jfa != null) { ofa += '&speechServerBackupLoc=' + jfa; } if(Fca || Gca ) { ofa += '&cacheMode=true'; if(Hca) { ofa += '&cacheLiveFallover=true';} } if(rba != null && sba != null && tba != null) { ofa += '&custID=' + rba; ofa += '&bookID=' + sba; ofa += '&pageID=' + tba; } if(Kca > -1) { ofa += '&cacheRetry=' + Kca; } if(Lca > -1) { ofa += '&cacheRetryTimeout=' + Lca; } ofa += '&locale=' + Aca + ''; ofa += '&speechName=' + pba + '">'; ofa += '  </embed>'; ofa += '</object>'; document.writeln(ofa); lha(window, 'scroll', qha); lha(window, 'resize', qha); lha(window, 'scroll', tha); lha(window, 'resize', tha); lha(window, 'load', Pja); lha(window, 'beforeunload', Xja); lha(document, 'click', tia); lha(document, 'mouseout', Jja); lha(document, 'mouseup', Hja); lha(document, 'mousemove', Eja); lha(document, 'mouseover', uia); lha(document, 'mousedown', ria); lha(document, 'dragstart', sia); lha(document, 'keyup', qia); gba = gba | hba; if((gba & dictionary_icon) == dictionary_icon || (gba & factfinder_icon) == factfinder_icon || (gba & translation_icon) == translation_icon) { document.writeln("<script type=\"text/javascript\" src=\"" + $g_strFileLoc + "obfSearch.js\" ></script>"); } if((gba & highlightcyan_icon) == highlightcyan_icon || (gba & highlightgreen_icon) == highlightgreen_icon || (gba & highlightmagenta_icon) == highlightmagenta_icon || (gba & highlightyellow_icon) == highlightyellow_icon || (gba & collect_icon) == collect_icon || Nca) { document.writeln("<script type=\"text/javascript\" src=\"" + $g_strFileLoc + "obfSS.js\" ></script>"); } if((gba & sticky_icon) == sticky_icon || Nca) { document.writeln("<script type=\"text/javascript\" src=\"" + $g_strFileLoc + "obfSticky.js\" ></script>"); } if((gba & pronCreate_icon) == pronCreate_icon || (gba & pronEdit_icon) == pronEdit_icon) { document.writeln("<script type=\"text/javascript\" src=\"" + $g_strFileLoc + "obfPron.js\" ></script>"); } if(!Wea) { var qfa = document.getElementsByTagName('input'); for (var i = 0; i < qfa.length; i++) { var rfa = qfa.item(i); var Rxa = rfa.getAttribute("type"); if(Rxa != null && Rxa == "text") { lha(rfa, "mouseup", kha); } } } if(hca) { var tfa = document.createElement("div"); tfa.id = xfa; tfa.style.position = "absolute"; tfa.style.display = "none"; if(Wea) { tfa.style.cursor = "hand"; } else { tfa.style.cursor = "pointer"; } lha(tfa, 'click', Dga); var ufa = document.createElement("img"); ufa.setAttribute("src", $g_strFileLoc + "rwimgs/start_speak_popup.gif"); tfa.appendChild(ufa); document.body.appendChild(tfa); var vfa = document.createElement("div"); vfa.id = yfa; vfa.style.position = "absolute"; vfa.style.display = "none"; if(Wea) { vfa.style.cursor = "hand"; } else { vfa.style.cursor = "pointer"; } lha(vfa, 'click', Ega); var wfa = document.createElement("img"); wfa.setAttribute("src", $g_strFileLoc + "rwimgs/stop_speak_popup.gif"); vfa.appendChild(wfa); document.body.appendChild(vfa); } }var xfa = "startbubble";var yfa = "stopbubble";var zfa = null;var Aga;var Bga;function Cga(x, y, p_hoverTarget){ if(hca) { x = x - 32; if(x<0) { x = 0; } y = y - 18; if(y<0) { y = 0; } var scrollLeft = rw_getScreenOffsetLeft(); var scrollTop = rw_getScreenOffsetTop(); Aga = x + scrollLeft; Bga = y + scrollTop; document.getElementById(xfa).style.display="inline"; document.getElementById(xfa).style.left = Aga + 'px'; document.getElementById(xfa).style.top = Bga + 'px'; zfa = p_hoverTarget; }}function Dga(){ if(zfa != null) { $rw_event_stop(); Fga(Aga, Bga); rw_speakHoverTarget(zfa); }}function Ega(){ $rw_event_stop();}function Fga(x, y){ if(hca) { document.getElementById(yfa).style.display="inline"; document.getElementById(yfa).style.left = x + 'px'; document.getElementById(yfa).style.top = y + 'px'; }}function Gga(){ if(hca) { document.getElementById(xfa).style.display="none"; }}function Hga(){ if(hca) { document.getElementById(yfa).style.display="none"; }}function Kga(){ var Iga = false; var Jga = navigator.userAgent; if(Jga.indexOf("MSIE 6") > -1) { Iga = true; } else if(Jga.indexOf("MSIE 7") > -1) { Iga = true; } else if(Jga.indexOf("Safari") > -1) { Iga = true; var Gla = navigator.appVersion; var Hla = Gla.lastIndexOf("/"); Gla = Gla.substring(Hla + 1); try { var Ila = parseFloat(Gla); if(Ila < 300 ) { Bwa("You are using an older version of Safari that is not " + "support by the embedded bar in this page.  " + "The bar may not work at all or work erratically, " + "it is recommended that you upgrade to the latest version of Safari."); } } catch(err) { } } else if(Jga.indexOf("Firefox") > -1) { Iga = true; var Gha = Jga.indexOf("Firefox") + 8; if(Gha < Jga.length) { var eka = Jga.substr(Gha); var Tja = eka.substr(0, eka.indexOf(".")); try { var Rga = parseInt(Tja); if(Rga < 2) { if(Rga == 1) { eka = eka.substr(Tja.length + 1); var Uja = eka.substr(0, eka.indexOf(".")); Rga = parseInt(Uja); } else { Rga = 0; } if(Rga < 5) { Bwa("You are using an older version of Firefox that is not " + "support by the embedded bar in this page.  " + "The bar may not work at all or work erratically, " + "it is recommended that you upgrade to the latest version of Firefox."); } } } catch(err){} } } else { var Tga = navigator.platform; if(Tga.indexOf("mac") > -1) { Bwa("The browser you are using is not supported by the embedded bar that should be displayed in this page.  " + "To view this page with the bar displayed please use Firefox (version 2.0.0.1 or later)."); } else { Bwa("The browser you are using is not supported by the embedded bar that should be displayed in this page.  " + "To view this page with the bar displayed please use either Firefox (version 2.0.0.1 or later) " + "or Internet Explorer (version 6 or 7)."); } } return Iga;}function Uga(){ if(typeof(eba_use_container) == "boolean") { cba = eba_use_container; } if(typeof(eba_allow_alerts_flag) == "boolean") { dba = eba_allow_alerts_flag; } if(typeof(eba_no_title) == "boolean") { aba = eba_no_title; qba = 0; } if(typeof(eba_noTitleFlag) == "boolean") { aba = eba_noTitleFlag; qba = 0; } if(typeof(eba_hidden_bar) == "boolean") { Dca = eba_hidden_bar; } if(typeof(eba_continuous_reading) == "boolean") { fca = eba_continuous_reading; } if(typeof(eba_ignore_buttons) == "boolean") { Eca = eba_ignore_buttons; } if(typeof(eba_speechCacheGenerateFlag) == "boolean") { Fca = eba_speechCacheGenerateFlag; } if(typeof(eba_speechCacheFlag) == "boolean") { Gca = eba_speechCacheFlag; } if(typeof(eba_cache_live_fallover) == "boolean") { Hca = eba_cache_live_fallover; } if(typeof(eba_autoCachePage) == "boolean") { Ica = eba_autoCachePage; } if(typeof(eba_voice_from_lang_flag) == "boolean") { yba = eba_voice_from_lang_flag; } if(typeof(eba_initial_speech_on) == "boolean") { if(eba_initial_speech_on) { $g_bMouseSpeech = true; Lia(true); } } if(typeof(eba_bubble_mode) == "boolean") { hca = eba_bubble_mode; } if(typeof(eba_bubble_freeze_on_shift_flag) == "boolean") { ica = eba_bubble_freeze_on_shift_flag; } if(typeof(eba_hover_flag) == "boolean") { Xba = !eba_hover_flag; } if(typeof(eba_icons) == "number") { gba = eba_icons; } if(typeof(eba_no_display_icons) == "number") { hba = eba_no_display_icons; } if(typeof(eba_title) == "number") { qba = eba_title; } if(typeof(eba_language) == "number") { xba = eba_language; if(xba == 3) { xba = 2; } else if(xba > 3 || xba < 0) { xba = 0; } if(yba) { if(eba_language >= 0 && eba_language < xaa.length) { pba = xaa[eba_language]; } } } if(typeof(eba_speed_value) == "number") { Bca = eba_speed_value; } if(typeof(eba_speedValue) == "number") { Bca = eba_speedValue; } if(typeof(eba_speed_offset) == "number") { Bca += eba_speed_offset; } if(typeof(eba_cache_retry) == "number") { Kca = eba_cache_retry; } if(typeof(eba_cache_retry_timeout) == "number") { Lca = eba_cache_retry_timeout; } if(typeof(eba_server_version) == "string") { eba = eba_server_version; } if(typeof(eba_serverVersion) == "string") { eba = eba_serverVersion; } if(typeof(eba_client_version) == "string") { fba = eba_client_version; } if(typeof(eba_clientVersion) == "string") { fba = eba_clientVersion; } if(typeof(eba_server) == "string") { iba = eba_server; } if(typeof(eba_speech_server) == "string") { jba = eba_speech_server; } if(typeof(eba_speechServer) == "string") { jba = eba_speechServer; } if(typeof(eba_speech_server_backup) == "string") { kba = eba_speech_server_backup; } if(typeof(eba_speechServerBackup) == "string") { kba = eba_speechServerBackup; } if(typeof(eba_translate_server) == "string") { lba = eba_translate_server; } if(typeof(eba_dictionary_server) == "string") { mba = eba_dictionary_server; } if(typeof(eba_folder) == "string") { nba = eba_folder; } if(typeof(eba_client_folder) == "string") { oba = eba_client_folder; } if(typeof(eba_clientFolder) == "string") { oba = eba_clientFolder; } if(typeof(eba_voice) == "string") { pba = eba_voice; } if(typeof(eba_custId) == "string") { rba = eba_custId; } if(typeof(eba_cust_id) == "string") { rba = eba_cust_id; } if(typeof(eba_bookId) == "string") { sba = eba_bookId; } if(typeof(eba_book_id) == "string") { sba = eba_book_id; } if(typeof(eba_pageId) == "string") { tba = eba_pageId; } if(typeof(eba_page_id) == "string") { tba = eba_page_id; } if(typeof(eba_loginName) == "string") { vba = eba_loginName; } if(typeof(eba_login_name) == "string") { vba = eba_login_name; } if((typeof(eba_loginPassword) == "string") || (typeof(eba_login_password) == "string")) { if(typeof(eba_loginPassword) == "string") { wba = eba_loginPassword; } if(typeof(eba_login_password) == "string") { wba = eba_login_password; } } else { wba = vba; } if(typeof(eba_locale) == "string") { Aca = eba_locale; }}function Vga(){ if(sba == null) { Bwa("Persistent annotations is enabled but no book id was provided, " + "this feature will not work in this page."); return; } if(tba == null) { Bwa("Persistent annotations is enabled but no page id was provided, " + "this feature will not work in this page."); return; } Nca = true; if(typeof(eba_annotate_note_editor_id) == "string") { Oca = eba_annotate_note_editor_id; } if(typeof(eba_annotate_highlight_editor_id) == "string") { Pca = eba_annotate_highlight_editor_id; } if(typeof(eba_annotate_note_reader_id) == "string") { Qca = eba_annotate_note_reader_id; } if(typeof(eba_annotate_highlight_reader_id) == "string") { Rca = eba_annotate_highlight_reader_id; } if(typeof(eba_annotate_persist_notes) == "boolean" && Oca != "*") { Sca = eba_annotate_persist_notes; } if(typeof(eba_annotate_persist_highlights) == "boolean" && Pca != "*") { Tca = eba_annotate_persist_highlights; } if(typeof(eba_annotate_storage_url) == "string") { Uca = eba_annotate_storage_url; if(typeof(eba_server) == "undefined") { iba = Uca; } } else { Uca = iba; } if(typeof(eba_annotate_confirm_delete_note) == 'boolean') { Wca = eba_annotate_confirm_delete_note; } if(Sca) { gba += sticky_icon; }}function Wga(){ Mca = true; Nca = true; if(typeof(pktIsTeacher) == "boolean") { Sca = pktIsTeacher; } if(typeof(pktTitleId) == "string") { sba = pktTitleId; } if(typeof(pktPageId) == "string") { tba = pktPageId; } if(typeof(pktStudentId) == "string") { if(!Sca) { Tca = true; } Pca = pktStudentId; Qca = pktStudentId; } if(typeof(pktTeacherId) == "string") { Oca = pktTeacherId; Rca = pktTeacherId; } if(typeof(pktStorageUrl) == "string") { Uca = pktStorageUrl; if(typeof(eba_server) == "undefined") { iba = Uca; } } else { Uca = iba; } if(typeof(pktSpeechServerUrl) == "string") { jba = pktSpeechServerUrl; } if(typeof(pktVoice) == "string") { pba = pktVoice; } if(typeof(pktCustCode) == 'string') { Vca = pktCustCode; } if(typeof(pktConfirmOnDelete) == 'boolean') { Wca = pktConfirmOnDelete; } if(Sca) { gba += sticky_icon; }}function ega(){ if (top.window.frames.length > 0) { var i = 0; var IEb = top.window.frames.length; for (i = 0; i < IEb; i++) { var jwa = top.window.frames[i]; var qga = jwa.document; var b = fga(qga.body); if(!b) { return false; } } } if(document.body != null) { return fga(document.body); } else { return true; }}function fga(p_body){ if(p_body.firstChild != null) { var Nsa = p_body.firstChild; var bod = Nsa.ownerDocument.body; try { while(Nsa != null && Nsa != bod) { Nsa = ona(Nsa); } } catch(er) { return false; } } return true;}var bga = 0;var cga = false;var dga = null;function rw_getWebToSpeech(){ if(dga != null) { return dga; } else { var flash = null; try { if(Yea) { flash = window.document.WebToSpeech; } else { if (window.document.WebToSpeech) { flash = window.document.WebToSpeech; } else { flash = window.WebToSpeech; } } if(flash != null) { flash.getVersion(); dga = flash; } } catch(err) { dga = null; } return flash; }}function $rw_versionCheck(){ try { if(typeof(eba_no_flash) == "boolean" && eba_no_flash == true) { sda = true; } else { var flash = rw_getWebToSpeech(); var nga = flash.getVersion(); var kga = parseFloat(nga); if(kga < 1.05 || kga == NaN) { sda = false; } else { sda = true; } } } catch(err) { sda = false; bga++; if(bga < 50) { setTimeout("$rw_versionCheck();", 100); } else { if(dga == null && !cga) { if(Fca) { } else { Bwa("A necessary flash component failed to load.  This page will not work as intended.\n" + "Could not load file from: http://" + document.location.hostname + bea + 'WebToSpeech' + fba + '.swf'); } cga = true; } } }}var lga = -1;function $rw_getFlashVersion(){ if(lga < 0) { try { var flash = rw_getWebToSpeech(); var nga = flash.getVersion(); lga = parseInt(nga); } catch(err) { lga = 1; } } return lga;}function $rw_pageSetup(){ $rw_tagSentences(); if (top.window.frames.length > 0) { var i = 0; var IEb = top.window.frames.length; for (i = 0; i < IEb; i++) { var jwa = top.window.frames[i]; var qga = jwa.document; lha(qga, 'mouseout', Jja); lha(qga, 'mouseup', Hja); lha(qga, 'click', tia); lha(qga, 'mousemove', Eja); lha(qga, 'mouseover', uia); lha(qga, 'mousedown', ria); lha(qga, 'dragstart', sia); lha(qga, 'keyup', qia); } } iea = document.getElementById('SWA1'); if(iea != null) { lha(iea, 'mouseup', oha); } Oia(gea); if (document.all) { var oo = document.all['rwDrag']; if (oo == null) { return; } gia = document.all['rwDrag'].style; } else { gia = document.getElementById('rwDrag').style; } gia.display = "inline"; $rw_versionCheck(); } var rga = "[\\x21\\x2E\\x3F\\x3A]";var sga = /[\n\r\t ]{2,}/g;function $rw_tagSentences(){ try { var yAb = 0; gaa = true; var uga = false; if(document && document.body) { var vga = false; if(uba >= 200 && uba < 300) { vga = true; } dca = vga; var wxa = document.body; while(wxa != null) { if(wxa.nodeType == 3) { if(wxa.parentNode.tagName.toLowerCase() == "textarea") { wxa = Xna(wxa, false, null); continue; } var txt = wxa.nodeValue; var xga = txt.trimTH(); var Vha = xga.length > 0; if(!Vha) { if(Nca) { if(uga) { wxa.nodeValue = " "; uga = false; wxa = Xna(wxa, false, null); } else { var tmp = wxa; wxa = Xna(wxa, false, null); tmp.parentNode.removeChild(tmp); } } else { wxa = Xna(wxa, false, null); } } else { if(Nca) { if(xga.length < txt.length) { var Eza = false; xga = txt.trimStartTH(); if((txt.length - xga.length) > 0) { if(uga) { txt = " " + xga; } else { txt = xga; } Eza = true; } xga = txt.trimEndTH(); if((txt.length - xga.length) > 1) { txt = xga + " "; uga = false; Eza = true; } xga = txt.replace(sga, " "); if(xga.length < txt.length) { txt = xga; Eza = true; } if(Eza) { wxa.nodeValue = txt; } } } var dEb; dEb = txt.search(rga); var Bha = (wxa.parentNode.getAttribute("texthelpSkip") != null); var Cha = wxa; if(dEb > -1 && dEb < (txt.length - 1)) { var Dha = true; while(true) { var Mma = eha(txt, dEb); if(Mma) { break; } else { var Fha = txt.substring(dEb + 1); var Gha = Fha.search(rga); if(Gha > -1) { dEb = dEb + 1 + Gha; } else { Dha =false; break; } } } if(Dha) { var Ypa = txt.substring(0, dEb + 1); var Zpa = txt.substring(dEb + 1); var span = document.createElement("span"); span.setAttribute(daa, "1"); var cpa = document.createTextNode(Ypa); var dpa = document.createTextNode(Zpa); var par = wxa.parentNode; par.insertBefore(dpa, wxa); par.insertBefore(span, dpa); span.appendChild(cpa); par.removeChild(wxa); wxa = dpa; Cha = cpa; } else { if(wxa.previousSibling != null || wxa.nextSibling != null || Bha) { var span = document.createElement("span"); span.setAttribute(daa, "1"); var cpa = document.createTextNode(txt); var par = wxa.parentNode; par.insertBefore(span, wxa); span.appendChild(cpa); par.removeChild(wxa); wxa = cpa; } Cha = wxa; wxa = Xna(wxa, false, null); } } else { if(wxa.previousSibling != null || wxa.nextSibling != null || Bha) { var span = document.createElement("span"); span.setAttribute(daa, "1"); var cpa = document.createTextNode(txt); var par = wxa.parentNode; par.insertBefore(span, wxa); span.appendChild(cpa); par.removeChild(wxa); wxa = cpa; } Cha = wxa; wxa = Xna(wxa, false, null); } if(Nca) { var Qha = Cha.nodeValue; var Rha = Cha.nodeValue.length; if(Rha > 0 && Qha.charCodeAt(Rha - 1) == 32) { uga = false; } else { uga = true; } } } } else if(wxa.nodeType == 1) { if(Nca) { if(!gpa(wxa)) { if(mpa(wxa)) { uga = false; } } else if(wxa.tagName.toLowerCase() == "img") { uga = true; } } if(vga) { if(wxa.tagName.toLowerCase() == "img") { var ypa = wxa.getAttribute("title"); wxa.setAttribute("msg", ypa); } } var Zha = wxa.getAttribute(baa); var aha = wxa.getAttribute(aaa); if(wxa.tagName.toLowerCase() == "pre" || (Zha != null && Zha.length > 0) || (aha != null && aha.length > 0)) { wxa = ena(wxa, false, null); } else { wxa = Xna(wxa, false, null); } } else { wxa = Xna(wxa, false, null); } } if(Nca) { wxa = document.body; while(wxa != null) { if(wxa.nodeType==3) { var Vha = wxa.nodeValue.trimTH().length > 0; if(Vha) { var Wha = wxa.parentNode; var Xha = Wha.getAttribute("id"); if(Xha == null || Xha.length == 0) { Wha.id = "rwTHnoteMarker" + oea; ++oea; } } wxa = Xna(wxa, false, null); } else if(wxa.nodeType == 1) { if(KDb(wxa)) { var Yha = wxa.getAttribute("id"); if(Yha == null || Yha.length == 0) { wxa.id = "rwTHnoteMarker" + oea; ++oea; } } var Zha = wxa.getAttribute(baa); var aha = wxa.getAttribute(aaa); if( wxa.tagName.toLowerCase() == "pre" || (Zha != null && Zha.length > 0) || (aha != null && aha.length > 0)) { wxa = ena(wxa, false, null); } else { wxa = Xna(wxa, false, null); } } else { wxa = Xna(wxa, false, null); } } } } } catch(exception) { Iva(exception); } gaa = false; cca = true;}function eha(p_txt, p_nPos){ var bFS = true; var IEb = p_txt.length; if(IEb > p_nPos + 1) { var cha = p_txt.charCodeAt(p_nPos + 1); if(Qva(cha)) { bFS = false; } } if(bFS) { if(p_nPos > 1) { var dha = p_txt.substring(p_nPos - 2, p_nPos); if(dha.charAt(0) == ' ' && dha.charCodeAt(1) > 63 && dha.charCodeAt(1) < 91) { bFS = false; } else if(dha.charAt(0) == '.' && Qva(dha.charCodeAt(1))) { bFS = false; } else { if(dha == "Dr" || dha == "Mr" || dha == "Ms" || dha == "Av" || dha == "St" || dha == "eg") { bFS = false; } else if(p_nPos > 2) { var fha = p_txt.substring(p_nPos - 3, p_nPos); if(fha == "Mrs" || fha == "etc" || fha == "i.e" || fha == "P.O" || fha == "PhD" ) { bFS = false; } else if(p_nPos > 3) { var gha = p_txt.substring(p_nPos - 4, p_nPos); if(gha == "Ph.D") { bFS = false; } } } } } } if(bFS && typeof(allowedAbbr) == "object" && typeof(allowedAbbr.length) == "number") { var hha = allowedAbbr.length; var i; var iha; for(i=0; i< hha; i++) { iha = allowedAbbr[i]; if(typeof(iha) == "string") { if(p_nPos - iha.length > -1) { if(p_txt.substring(p_nPos - iha.length, p_nPos) == iha) { bFS = false; break; } } } } } return bFS;}var jha = null;function kha(event){ jha = event.currentTarget;}function lha(obj, eventType, func){ if (obj.addEventListener) { obj.addEventListener(eventType, func, false); return true; } else if (obj.attachEvent) { return obj.attachEvent("on" + eventType, func); } else { return false; }}var nc = 0;function oha(){ if(!gea) { var flash = Dta(eea); flash.gotFocus(); Oia(true); } hea = true;}var nha = false;function qha(){ if(Vba) { var i=0; var nW = ((window.innerWidth)?window.innerWidth:document.documentElement.offsetWidth) - 50; var pha = nW+"px"; for(i=1; i<11; i++) { var Wya = document.getElementById("placeholderSWA" + i); if(Wya != null) { Wya.style.width = pha; } } } var gia; if (document.all) { var oo = document.all['rwDrag']; if (oo == null) { return; } gia = document.all['rwDrag'].style; } else { gia = document.getElementById('rwDrag').style; } if (gia == null) { return; } if(!cba) { var x; var y; if(typeof(eba_override_x) != 'undefined' && typeof(eba_override_y) != 'undefined' ) { x = eba_override_x; y = eba_override_y; } else { var wd = rw_getDisplayWidth(); var ht = rw_getDisplayHeight(); if(aba) { Fea = 1; Gea = 0; Bea = 0; } x = wd * Fea; y = ht * Gea; if ((x + Hea + Bea) > rw_getDisplayWidthAdjusted()) { x = rw_getDisplayWidthAdjusted() - Hea - Bea; } if (x < Bea) { x = Bea; } if ((y + Iea + Bea) > rw_getDisplayHeightAdjusted()) { y = rw_getDisplayHeightAdjusted() - Iea - Bea; } if (y < Bea) { y = Bea; } x = rw_getScreenOffsetLeft() + x; y = rw_getScreenOffsetTop() + y; if(aba) { y = 0; } } gia.left = x + 'px'; gia.top = y + 'px'; } if(Dca) { return; } gia.visibility = 'visible'; gia.display = "inline"; if(!nha) { var tmp = document.getElementById("rwMainOutline"); if(tmp != null) { tmp.style.visibility = 'visible'; tmp.style.display = "block"; } tmp = document.getElementById("rwMainNoOutline"); if(tmp != null) { tmp.style.visibility = 'visible'; tmp.style.display = "block"; } }}function tha(){ xha(0); xha(1); xha(2); xha(3); xha(4); xha(5); xha(6); xha(7);}function xha(p_nType){ var uha; var gia; var LDb; switch(p_nType) { case 0: LDb = "rwDisplay"; break; case 1: LDb = "rwTrans"; break; case 2: LDb = "rwFF"; break; case 3: LDb = "rwDict"; break; case 4: LDb = "rwCollect"; break; case 5: LDb = "rwSticky"; break; case 6: LDb = "rwPronCreate"; break; case 7: LDb = "rwPronEdit"; break; default: LDb = "rwDisplay"; } if (document.all) { uha = document.all[LDb]; } else { uha = document.getElementById(LDb); } if(typeof(uha) == 'undefined' || uha == null) { return; } gia = uha.style; if (gia == null) { return; } if(Nea[p_nType]) { gia.display = "block"; if(gia.visibility == 'visible') { var eua = hia(LDb); if(eua != null) { var zha = parseInt(eua.offsetHeight); if(!isNaN(zha)) { Mea[p_nType] = zha - 4; } } } var width = rw_getDocumentDisplayWidth(); var height = rw_getDocumentDisplayHeight(); var x = width * Jea[p_nType]; var y = height * Kea[p_nType]; if ((x + Lea[p_nType] + Bea) > rw_getDocumentDisplayWidthAdjusted()) { x = rw_getDocumentDisplayWidthAdjusted() - Lea[p_nType] - Bea; } if (x < Bea) { x = Bea; } if ((y + Mea[p_nType] + Bea) > rw_getDocumentDisplayHeightAdjusted()) { y = rw_getDocumentDisplayHeightAdjusted() - Mea[p_nType] - Bea; } if (y < Bea) { y = Bea; } x = rw_getScreenOffsetLeft() + x; y = rw_getScreenOffsetTop() + y; gia.left = x + 'px'; gia.top = y + 'px'; gia.visibility = 'visible'; } else { if(Zea) { gia.display = "none"; } gia.visibility = 'hidden'; }}function Aia(x, y){ Fea = x / rw_getDocumentDisplayWidth(); Gea = y / rw_getDocumentDisplayHeight(); }function Bia(p_nType, x, y){ Jea[p_nType] = x / rw_getDocumentDisplayWidth(); Kea[p_nType] = y / rw_getDocumentDisplayHeight();}function Cia(ev){ if (ev.pageX) { if(nea) { return {x:(ev.pageX - document.documentElement.scrollLeft), y:(ev.pageY - document.documentElement.scrollTop)}; } else { return {x:(ev.pageX - document.body.scrollLeft), y:(ev.pageY - document.body.scrollTop)}; } } else { return {x:ev.clientX, y:ev.clientY}; }}function Eia(p_element){ var left = 0; var top = 0; if(p_element.nodeType == 3) { p_element = p_element.parentNode; } while (p_element.offsetParent) { left += p_element.offsetLeft + (p_element.currentStyle ? (parseInt(p_element.currentStyle.borderLeftWidth)).NaN0():0); top += p_element.offsetTop + (p_element.currentStyle ? (parseInt(p_element.currentStyle.borderTopWidth)).NaN0():0); p_element = p_element.offsetParent; } left += p_element.offsetLeft + (p_element.currentStyle ? (parseInt(p_element.currentStyle.borderLeftWidth)).NaN0():0); top += p_element.offsetTop + (p_element.currentStyle ? (parseInt(p_element.currentStyle.borderTopWidth)).NaN0():0); left -= rw_getScreenOffsetLeft(); top -= rw_getScreenOffsetTop(); return {x:left, y:top};}var Fia = false; var g_bSpeechModeFlag = false; function $rw_isSpeaking(){ return Fia;}var ICONS_TO_DISABLE = "funplay play cyan magenta yellow green clear collect trans ffinder dict ";var Iia = "cyan magenta yellow green clear collect";var Jia = "spell homophone pred";function Lia(p_bState){ if($g_bMouseSpeech && Xba) { p_bState = true; } if(g_bSpeechModeFlag == p_bState) { return; } try { for (var i = 0; i < uda; i++) { var LDb = g_icons[i][0]; if (ICONS_TO_DISABLE.indexOf(LDb) > -1) { if (p_bState) { if(Yea) { document.images[g_icons[i][0]].src = g_icons[i][5].src; } else { Ufa(g_icons[i][0], "mask", false); } } else { if(Yea) { document.images[g_icons[i][0]].src = g_icons[i][1].src; } else { Ufa(g_icons[i][0], "flat", false); } } } } g_bSpeechModeFlag = p_bState; } catch(err) { }}function Mia(p_bState){ Fia = p_bState;}function Oia(p_bState){ gea = p_bState; try { for (var i = 0; i < uda; i++) { var LDb = g_icons[i][0]; if (Iia.indexOf(LDb) > -1) { if (p_bState) { if(Yea) { document.images[g_icons[i][0]].src = g_icons[i][5].src; } else { Ufa(g_icons[i][0], "mask", false); } } else { if(Yea) { document.images[g_icons[i][0]].src = g_icons[i][1].src; } else { Ufa(g_icons[i][0], "flat", false); } } } } for (var i = 0; i < vda; i++) { var LDb = g_toggleIcons[i][0]; if (Jia.indexOf(LDb) > -1) { if(p_bState) { var flash = Dta(eea); if(flash != null) { var nia = flash.getSpelling(); var oia = flash.getHomophone(); var pia = flash.getPrediction(); if(LDb == "spell") { g_toggleIcons[i][8] = nia; if(nia) { if(Yea) { document.images[g_toggleIcons[i][0]].src = g_toggleIcons[i][zea].src; } else { Ufa(g_toggleIcons[i][0], "toggleOn", true); } } else { if(Yea) { document.images[g_toggleIcons[i][0]].src = g_toggleIcons[i][vea].src; } else { Ufa(g_toggleIcons[i][0], "flat", true); } } } else if(LDb == "homophone") { g_toggleIcons[i][8] = oia; if(oia) { if(Yea) { document.images[g_toggleIcons[i][0]].src = g_toggleIcons[i][zea].src; } else { Ufa(g_toggleIcons[i][0], "toggleOn", true); } } else { if(Yea) { document.images[g_toggleIcons[i][0]].src = g_toggleIcons[i][vea].src; } else { Ufa(g_toggleIcons[i][0], "flat", true); } } } else if(LDb == "pred") { g_toggleIcons[i][8] = pia; if(pia) { if(Yea) { document.images[g_toggleIcons[i][0]].src = g_toggleIcons[i][zea].src; } else { Ufa(g_toggleIcons[i][0], "toggleOn", true); } } else { if(Yea) { document.images[g_toggleIcons[i][0]].src = g_toggleIcons[i][vea].src; } else { Ufa(g_toggleIcons[i][0], "flat", true); } } } else { if(Yea) { document.images[g_toggleIcons[i][0]].src = g_toggleIcons[i][vea].src; } else { Ufa(g_toggleIcons[i][0], "flat", true); } } } else { if(Yea) { document.images[g_toggleIcons[i][0]].src = g_toggleIcons[i][vea].src; } else { Ufa(g_toggleIcons[i][0], "flat", true); } } } else { if(Yea) { document.images[g_toggleIcons[i][0]].src = g_toggleIcons[i][yea].src; } else { Ufa(g_toggleIcons[i][0], "mask", true); } } } } } catch(err){}}function $rw_divOver(p_nType){ var LDb; switch(p_nType) { case Oea: LDb = "displayImg"; break; case Pea: LDb = "transImg"; break; case Qea: LDb = "FFImg"; break; case Rea: LDb = "dictImg"; break; case Sea: LDb = "collectImg"; break; case Uea: LDb = "pronCreateImg"; break; case Vea: LDb = "pronEditImg"; break; default: LDb = "displayImg"; } if (document.images[LDb] != null) { document.images[LDb].src = $g_strFileLoc + "rwimgs/thepressedx.bmp"; }}function $rw_divOut(p_nType){ var LDb; switch(p_nType) { case Oea: LDb = "displayImg"; break; case Pea: LDb = "transImg"; break; case Qea: LDb = "FFImg"; break; case Rea: LDb = "dictImg"; break; case Sea: LDb = "collectImg"; break; case Uea: LDb = "pronCreateImg"; break; case Vea: LDb = "pronEditImg"; break; default: LDb = "displayImg"; } if (document.images[LDb] != null) { document.images[LDb].src = $g_strFileLoc + "rwimgs/thex.bmp"; }}function $rw_divPress(p_nType){ $rw_event_stop(); bia(false, p_nType);}function Yia(p_nType, p_strText){ var gia; var LDb; switch(p_nType) { case Oea: LDb = "rwpopupdisplay"; break; case Pea: LDb = "rwpopuptrans"; break; case Qea: LDb = "rwpopupff"; break; case Rea: LDb = "rwpopupdict"; break; case Sea: LDb = "rwpopupcollect"; break; case Uea: LDb = "rwpopupproncreate"; break; case Vea: LDb = "rwpopuppronedit"; break; default: LDb = "rwpopupdisplay"; } if (document.all) { var oo = document.all[LDb]; if (oo == null) { return; } gia = document.all[LDb]; } else { gia = document.getElementById(LDb); } if (gia == null) { return; } gia.innerHTML = p_strText;}function bia(p_bShow, p_nType){ var gia; Nea[p_nType] = p_bShow; var LDb; switch(p_nType) { case Oea: LDb = "rwDisplay"; break; case Pea: LDb = "rwTrans"; break; case Qea: LDb = "rwFF"; break; case Rea: LDb = "rwDict"; break; case Sea: LDb = "rwCollect"; break; case Tea: LDb = "rwSticky"; break; case Uea: LDb = "rwPronCreate"; break; case Vea: LDb = "rwPronEdit"; break; default: LDb = "rwDisplay"; } var eua = hia(LDb); if(eua != null) { gia = eua.style; if (gia == null) { return; } if(p_bShow) { eia(); gia.visibility = 'visible'; gia.display = 'block'; gia.zIndex = 501; } else { gia.visibility = 'hidden'; if(Zea) { gia.display = "none"; } Yia(p_nType, ""); } } tha();}function eia(){ var LDb; LDb = "rwDisplay"; var eua = hia(LDb); var gia; if(eua != null && eua.style) { gia = eua.style; gia.zIndex = 500; } LDb = "rwTrans"; eua = hia(LDb); if(eua != null && eua.style) { gia = eua.style; gia.zIndex = 500; } LDb = "rwFF"; eua = hia(LDb); if(eua != null && eua.style) { gia = eua.style; gia.zIndex = 500; } LDb = "rwDict"; eua = hia(LDb); if(eua != null && eua.style) { gia = eua.style; gia.zIndex = 500; } LDb = "rwCollect"; eua = hia(LDb); if(eua != null && eua.style) { gia = eua.style; gia.zIndex = 500; } LDb = "rwSticky"; eua = hia(LDb); if(eua != null && eua.style) { gia = eua.style; gia.zIndex = 500; }}function hia(p_strName){ if (document.all) { return document.all[p_strName]; } else { return document.getElementById(p_strName); }}function $speechFinishedInFlash(){ Lia(false); Mia(false);}function $flashHasFocus(p_bHasFocus, p_strId){ if(1==1) {return;} eea = parseInt(p_strId); if(p_bHasFocus) { var flash = Dta(eea); if(flash != null) { var nia = flash.getSpelling(); var oia = flash.getHomophone(); var pia = flash.getPrediction(); g_toggleIcons[Zca][8] = nia; if(nia) { if(Yea) { document.images[g_toggleIcons[Zca][0]].src = g_toggleIcons[i][zea].src; } else { Ufa(g_toggleIcons[Zca][0], "toggleOn", true); } } else { if(Yea) { document.images[g_toggleIcons[Zca][0]].src = g_toggleIcons[i][vea].src; } else { Ufa(g_toggleIcons[Zca][0], "flat", true); } } g_toggleIcons[aca][8] = oia; if(oia) { if(Yea) { document.images[g_toggleIcons[aca][0]].src = g_toggleIcons[i][zea].src; } else { Ufa(g_toggleIcons[aca][0], "toggleOn", true); } } else { if(Yea) { document.images[g_toggleIcons[aca][0]].src = g_toggleIcons[i][vea].src; } else { Ufa(g_toggleIcons[aca][0], "flat", true); } } g_toggleIcons[bca][8] = pia; if(pia) { if(Yea) { document.images[g_toggleIcons[bca][0]].src = g_toggleIcons[i][zea].src; } else { Ufa(g_toggleIcons[bca][0], "toggleOn", true); } } else { if(Yea) { document.images[g_toggleIcons[bca][0]].src = g_toggleIcons[i][vea].src; } else { Ufa(g_toggleIcons[bca][0], "flat", true); } } } } else { var flash = Dta(eea); if(flash != null) { var nia = flash.getSpelling(); var oia = flash.getHomophone(); var pia = flash.getPrediction(); g_toggleIcons[Zca][8] = nia; g_toggleIcons[aca][8] = oia; g_toggleIcons[bca][8] = pia; } }}Number.prototype.NaN0 = function(){ return isNaN(this)?0:this;};function qia(event){}function ria(event){ var target = event.target || event.srcElement; if(target.id == 'rwDragMe' || target.id == 'rwDragMeDisplay' || target.id == 'rwDragMeTrans' || target.id == 'rwDragMeFF' || target.id == 'rwDragMeDict' || target.id == 'rwDragMeCollect' || target.id == 'rwDragMeStickyNoteTop' || target.id == 'rwDragMeStickyNoteBot' || target.id == 'rwDragMePronCreate' || target.id == 'rwDragMePronEdit') { zda = target; Aea = true; if (zda.setCapture) {  zda.setCapture(true); } yda = Eia(zda); if(target.id == 'rwDragMeStickyNoteBot') { yda.y -= target.offsetTop; } xda = Cia(event); return false; }}function sia(event){ var target = event.target || event.srcElement; if (target.tagName == "IMG" && target.id == "thnodragicon") { Kja(event); return false; }}function tia(event){ if(fea > 0) { --fea; } if (event != null) { if (!Aea) { if($g_bMouseSpeech && Xba) { Xla(event); } if(pea) { tCb(event); } } }}function uia(event){ if (event != null) { if (!Aea) { if(Yea) { if($g_bMouseSpeech && !Xba) { Xla(event); } else if(hca) { Mla(event); } } } }}function Eja(event){ if (event == null) { return true; } if (zda == null) { if($g_bMouseSpeech && (Zea || Wea) && !Xba) { Xla(event); } else if(hca) { Mla(event); } Aea = false; return true; } var Jsa = Cia(event); if (Jsa.x < 0 || Jsa.y < 0 || Jsa.x > rw_getDocumentDisplayWidth() || Jsa.y > rw_getDocumentDisplayHeight()) { Kja(event); return false; } var wia; var xia; var yia = false; var zia = 1.0; if(Wea && !nea) { var a1 = document.body.offsetWidth; var a2 = document.documentElement.offsetWidth; zia = (a1 / a2); if(zia > 1.05 || zia < 99.5) { yia = true; } } if(yia) { var Cja = (zia * xda.x) - (yda.x); var Dja = (zia * xda.y) - (yda.y); wia = (((zia * Jsa.x) - Cja)) / zia; xia = (((zia * Jsa.y) - Dja)) / zia; } else { var Cja = xda.x - (yda.x); var Dja = xda.y - (yda.y); wia = (Jsa.x - Cja); xia = (Jsa.y - Dja); } if(zda.id == 'rwDragMe') { Aia(wia, xia); if ((wia + Hea + Bea) > rw_getDocumentDisplayWidthAdjusted()) { wia = rw_getDocumentDisplayWidthAdjusted() - Hea - Bea; Fea = 1.0; } if (wia < Bea) { wia = Bea; Fea = 0.0; } if ((xia + Iea + Bea) > rw_getDocumentDisplayHeightAdjusted()) { xia = rw_getDisplayHeightAdjusted() - Iea - Bea; Gea = 1.0; } if (xia < Bea) { xia = Bea; Gea = 0.0; } qha(); Kja(event); } else if(zda.id == 'rwDragMeTrans' || zda.id == 'rwDragMeFF' || zda.id == 'rwDragMeDict' || zda.id == 'rwDragMeDisplay' || zda.id == 'rwDragMeCollect' || zda.id == 'rwDragMeStickyNoteTop' || zda.id == 'rwDragMeStickyNoteBot' || zda.id == 'rwDragMePronCreate' || zda.id == 'rwDragMePronEdit') { var Fja; if(zda.id == 'rwDragMeDisplay') { Fja = Oea; } else if(zda.id == 'rwDragMeTrans') { Fja = Pea; } else if(zda.id == 'rwDragMeFF') { Fja = Qea; } else if(zda.id == 'rwDragMeDict') { Fja = Rea; } else if(zda.id == 'rwDragMeStickyNoteTop') { Fja = Tea; } else if(zda.id == 'rwDragMeStickyNoteBot') { Fja = Tea; } else if(zda.id == 'rwDragMePronCreate') { Fja = Uea; } else if(zda.id == 'rwDragMePronEdit') { Fja = Vea; } else { Fja = Sea; } Bia(Fja, wia, xia); if ((wia + Lea[Fja] + Bea) > rw_getDocumentDisplayWidthAdjusted()) { wia = rw_getDocumentDisplayWidthAdjusted() - Lea[Fja] - Bea; Jea[Fja] = 1.0; } if (wia < Bea) { wia = Bea; Jea[Fja] = 0.0; } if ((xia + Mea[Fja] + Bea) > rw_getDocumentDisplayHeightAdjusted()) { xia = rw_getDocumentDisplayHeightAdjusted() - Mea[Fja] - Bea; Kea[Fja] = 1.0; } if (xia < Bea) { xia = Bea; Kea[Fja] = 0.0; } xha(Fja); Kja(event); } return false;}function Hja(event){ if(iea != null) { if(hea) { hea = false; return; } else { if(gea) { var flash = Dta(eea); if(typeof(flash) != "undefined" && flash != null) { try { flash.lostFocus(); } catch(err) { } } Oia(false); } } } if (!Aea) { return true; } if (zda.releaseCapture) { zda.releaseCapture(); } zda = null; Aea = false; Kja(event); return false;}function Jja(event){ if (Aea) { if (!Wea && !Yea) { var Jsa = Cia(event); if (Jsa.x < 5 || Jsa.y < 5 || Jsa.x > (rw_getDocumentDisplayWidth() - 5) || Jsa.y > (rw_getDocumentDisplayHeight() - 5)) { Hja(event); Kja(event); return; } } Eja(event); Kja(event); } else { if(!Xba) { zka = null; } }}function Kja(event){ if (event == null) { return; } if (event.cancelBubble) { event.cancelBubble = true; } else if (event.stopPropagation) { event.stopPropagation(); } if (event.returnValue) { event.returnValue = false; } else if (event.preventDefault) { event.preventDefault(true); }}function rw_mouseOverIcon(p_strName){ if(Dea > 0) { --Dea; return; } if (Aea) { return; } if($rw_blockClick(p_strName)) { return; } for (var i = 0; i < uda; i++) { if (p_strName == g_icons[i][0]) { if(Yea) { document.images[g_icons[i][0]].src = g_icons[i][2].src; } else { Ufa(g_icons[i][0], "hover", false); } } } for (var i = 0; i < vda; i++) { if (p_strName == g_toggleIcons[i][0]) { if(Yea) { document.images[g_toggleIcons[i][0]].src = g_toggleIcons[i][2].src; } else { Ufa(g_toggleIcons[i][0], "hover", true); } } }}function rw_mouseOffIcon(p_strName){ if(Dea > 0) { --Dea; return; } if(Aea) { return; } if($rw_blockClick(p_strName)) { return; } for (var i = 0; i < uda; i++) { if (p_strName == g_icons[i][0]) { if(Yea) { document.images[g_icons[i][0]].src = g_icons[i][1].src; } else { Ufa(g_icons[i][0], "flat", false); } } } for (var i = 0; i < vda; i++) { if (p_strName == g_toggleIcons[i][0]) { if(Yea) { document.images[g_toggleIcons[i][0]].src = g_toggleIcons[i][1].src; } else { Ufa(g_toggleIcons[i][0], "flat", true); } } }}function rw_press(p_strName){ if(Dea > 0) { --Dea; return; } if (Aea) { return; } if($rw_blockClick(p_strName)) { return; } for (var i = 0; i < uda; i++) { if (p_strName == g_icons[i][0]) { if(Yea) { document.images[g_icons[i][0]].src = g_icons[i][3].src; } else { Ufa(g_icons[i][0], "toggle", false); } } } for (var i = 0; i < vda; i++) { if (p_strName == g_toggleIcons[i][0]) { if(Yea) { document.images[g_toggleIcons[i][0]].src = g_toggleIcons[i][3].src; } else { Ufa(g_toggleIcons[i][0], "toggle", true); } } }}function $rw_blockClick(p_strName){ if (g_bSpeechModeFlag && ICONS_TO_DISABLE.indexOf(p_strName) > -1) { return true; } if(gea && Iia.indexOf(p_strName) > -1) { return true; } if(!gea && Jia.indexOf(p_strName) > -1) { return true; } return false;}function Pja(event){ var Oja = Yua("rwebooks-x"); var Qja = Yua("rwebooks-y"); if ((Oja != null) && (Qja != null)) { Fea = parseFloat(Oja); Gea = parseFloat(Qja); } var Rja = false; var IEb = Jea.length; var Tja; var Uja; for(var i=0; i<IEb; i++) { Tja = Yua("rwebooks-div" + i +"x"); if(Tja != null) { Jea[i] = parseFloat(Tja); } Uja = Yua("rwebooks-div" + i +"y"); if(Uja != null) { Kea[i] = parseFloat(Uja); } if(i == Tea) { if(Tja == null && Uja == null) { Rja = true; } } } if(Rja) { Jea[Tea] = 0.45; Kea[Tea] = 0.35; } qha(); tha(); $rw_pageSetup(); if(Nca) { if(Pca != "*" && typeof(LCb) != "undefined") { LCb(); } else { if(Oca != "*" && typeof(NEb) != "undefined") { NEb(); } } } if(Wea) { var Vja = document.createTextNode(" "); var Wja = document.body.appendChild(Vja); } if(Fca && Ica) { $rw_cachePage(null, null); } rda = true;}function Xja(event){ window.onunload=null; if(typeof(nDb) != 'undefined' && Nca && typeof(qCb) != 'undefined' && qCb > -1) { VDb(qCb); } if(!Cea && Vba && !ls_teacherFlag) { event.returnValue = "Your data will be lost if you click OK!"; } bua("rwebooks-x", Fea, 20, "/", window.location.host); bua("rwebooks-y", Gea, 20, "/", window.location.host); var IEb = Jea.length; for(var i=0; i<IEb; i++) { bua("rwebooks-div" + i +"x", Jea[i], 20, "/", window.location.host); bua("rwebooks-div" + i +"y", Kea[i], 20, "/", window.location.host); } if(!Cea && Vba && !ls_teacherFlag) { return "Your data will be lost if you click OK!"; } else { }} var Zja = -10; 
function THCaret(p_node, p_nOffset, p_bForwardBias){ this.node = p_node; this.offset = p_nOffset; this.forwardBias = p_bForwardBias; if(ema(this.node)) { this.offset = Zja; }};THCaret.prototype.isSpecialCase = function(){ return (this.offset == Zja);};THCaret.prototype.check = function(){ var Mma = true; with (this) { if(node == null || node.parentNode == null) { Mma = false; } else { if( node.nodeType != 3) { if(node.nodeType == 1 && this.offset == Zja) { } else { Mma = false; } } else if(this.offset < 0 || this.offset >node.nodeValue.length) { Mma = false; } } } return Mma;};THCaret.prototype.toString = function(){ var txt = "THCaret "; if(this.node != null) { if(this.node.nodeType == 3) { txt += this.node.nodeValue + " " + this.node.parentNode.tagName + " "; } else if(this.node.nodeType == 1) { txt += this.node.tagName + " "; } } txt += this.offset; return txt;};function cja(p_leftCaret, p_rightCaret){ this.eBb = p_leftCaret; this.fBb = p_rightCaret;}function THDomRefPt(p_strPath, p_nOffset){ this.path = p_strPath; this.offset = p_nOffset;};THDomRefPt.prototype.isSpecialCase = function(){ return (this.offset == Zja);};THDomRefPt.prototype.toString = function(){ return "THDomRefPt " + this.path + " " + this.offset;};var eja = -1;var fja = 0;var gja = 1;var hja = 2;var ija = 3;var jja = 4;var kja = 5;var lja = 6;var mja = 7;var nja = 8;function oja(p_startNode, p_nStartOffset, p_endNode, p_nEndOffset){ this.body = p_startNode.ownerDocument.body; this.FCb = new THCaret(p_startNode, p_nStartOffset, true); this.GCb = new THCaret(p_endNode, p_nEndOffset, false); this.WBb = Jka(p_startNode, p_nStartOffset); this.XBb = Jka(p_endNode, p_nEndOffset);};oja.prototype.refresh = function(){ with (this) { if(FCb.check() == false || GCb.check() == false) { var ECb = Mra(this.body, this.WBb.path, this.WBb.offset, this.XBb.path, this.XBb.offset); var FCb = ECb.eBb; var GCb = ECb.fBb; if(FCb == null && GCb == null) { FCb = new THCaret(document.body, 0, true); GCb = new THCaret(document.body, 0, false); } else if(FCb == null || GCb == null) { if(FCb == null) { FCb = new THCaret(GCb.node, GCb.offset, true); } else { GCb = new THCaret(FCb.node, FCb.offset, false); } } } }};oja.prototype.toString = function(){ with (this) { refresh(); var range = Gva(); range.setStart(FCb.node, FCb.offset); range.setEnd(GCb.node, GCb.offset); return range.toString(); }};oja.prototype.getStartAsRange = function(){ var range = Gva(); range.setStart(this.FCb.node, this.FCb.offset); range.setEnd(this.FCb.node, this.FCb.offset); return range;};oja.prototype.getEndAsRange = function(){ var range = Gva(); range.setStart(this.GCb.node, this.GCb.offset); range.setEnd(this.GCb.node, this.GCb.offset); return range;};oja.prototype.equals = function(p_target){ return (this.WBb.path == p_target.WBb.path && this.WBb.offset == p_target.WBb.offset && this.XBb.path == p_target.XBb.path && this.XBb.offset == p_target.XBb.offset);};oja.prototype.compareRange = function(p_target){ if(this.equals(p_target)) { return fja; } this.refresh(); p_target.refresh(); var sja = this.getStartAsRange(); var tja = this.getEndAsRange(); var uja = p_target.getStartAsRange(); var vja = p_target.getEndAsRange(); var wja = sja.compareBoundaryPoints("START_TO_START", uja); var xja = sja.compareBoundaryPoints("START_TO_START", vja); var yja = tja.compareBoundaryPoints("START_TO_START", uja); var zja = tja.compareBoundaryPoints("START_TO_START", vja); var eAb = eja; if(xja > -1) { eAb = gja; } else if(yja < 1) { eAb = hja; } else if(wja == -1) { if(zja == -1) { eAb = lja; } else { eAb = ija; } } else if(wja == 0) { if(zja == -1) { eAb = mja; } else if(zja == 0) { eAb = fja; } else { eAb = ija; } } else { if(zja == -1) { eAb = jja; } else if(zja == 0) { eAb = nja; } else { eAb = kja; } } return eAb;};function Bka(p_body, p_startRefPt, p_endRefPt){ this.body = p_body; this.WBb = p_startRefPt; this.XBb = p_endRefPt;}; 
Bka.prototype.equals = function(p_target){ return (this.WBb.path == p_target.WBb.path && this.WBb.offset == p_target.WBb.offset && this.XBb.path == p_target.XBb.path && this.XBb.offset == p_target.XBb.offset);};Bka.prototype.toString = function(){ with (this) { if(Wea) { var range = getAsRange(); if(range != null) { return getAsRange().text; } else { return ""; } } else { var range = getAsRange(); if(range != null) { return getAsRange().toString(); } else { return ""; } } }};Bka.prototype.getAsRange = function(){ with (this) { var range = null; if(Wea) { range = rw_getAsTextRange(this.body, this.WBb.path, this.WBb.offset, this.XBb.path, this.XBb.offset); } else { range = Gva(); var ECb = Mra(this.body, this.WBb.path, this.WBb.offset, this.XBb.path, this.XBb.offset); var FCb = ECb.eBb; var GCb = ECb.fBb; if(FCb != null && GCb != null) { range.setStart(FCb.node, FCb.offset); range.setEnd(GCb.node, GCb.offset); } else { range = null; Iva("Failed to get the start or end caret."); } } return range; }}; 
function Jka(p_node, p_nOffset){ try { if(p_node == null) { return null; } if(p_node.nodeType == 1) { var AEb = nma(p_node); if(AEb != null) { return new THDomRefPt(kqa(AEb), p_nOffset); } var XEb = 0; var dDb = p_node; var Rxa = dDb.getAttribute("rwstate"); var Pka = dDb.getAttribute(caa); while(dDb.tagName.toLowerCase() == "font" || (Rxa != null && Rxa.length > 0) || Pka!= null ) { XEb += Vka(dDb); dDb = dDb.parentNode; Rxa = dDb.getAttribute("rwstate"); Pka = dDb.getAttribute(caa); } if(p_nOffset == -1) { XEb = -1; } return new THDomRefPt(kqa(dDb), XEb + p_nOffset); } else if(p_node.nodeType == 3) { var AEb = nma(p_node); if(AEb != null) { return new THDomRefPt(kqa(AEb), p_nOffset); } if(p_node.nodeValue.trimTH().length == 0) { p_nOffset = 0; } var XEb = Vka(p_node); var dDb = p_node.parentNode; var Rxa = dDb.getAttribute("rwstate"); var Pka = dDb.getAttribute(caa); while(dDb.tagName.toLowerCase() == "font" || (Rxa != null && Rxa.length > 0) || Pka!= null ) { XEb += Vka(dDb); dDb = dDb.parentNode; Rxa = dDb.getAttribute("rwstate"); Pka = dDb.getAttribute(caa); } if(p_nOffset == -1) { XEb = -1; } return new THDomRefPt(kqa(dDb), XEb + p_nOffset); } else { return null; } } catch(ignore) { return null; }};function Vka(p_node){ if(p_node == null) { return 0; } var XEb = 0; var wva = p_node.previousSibling; if(wva != null) { XEb = Wka(wva); } return XEb;};function Wka(p_node){ var XEb = 0; var wva = p_node; var qua; while(wva != null) { if(wva.nodeType ==3) { qua = wva.nodeValue; XEb += qua.length; } else if(wva.nodeType == 1) { if(!jpa(wva)) { if(ema(wva)) { XEb += 1; } else if(wva.tagName.toLowerCase() != "textarea") { XEb += Wka(wva.lastChild); } else { XEb += 1; } } } wva = wva.previousSibling; } return XEb;};function THHoverTarget(p_body, p_strPath, p_thRange){ this.body = p_body; this.path = p_strPath; this.range = p_thRange; this.Dua = null; this.isRange = function() { return this.range != null; }; this.getCaretRange = function() { var ECb; if(this.isRange()) { ECb = Mra(this.range.body, this.range.WBb.path, this.range.WBb.offset, this.range.XBb.path, this.range.XBb.offset); } else { var caret = Jra(this.body, this.path, -1, true); ECb = new cja(caret, caret); } return ECb; }; 
 this.getTextPreparedForSpeech = function() { var txt; if(this.isRange()) { this.Dua = new Array(); var aka = Rma(this.range.body, this.range.WBb, this.range.XBb, this.Dua); Eya(aka.voice); if(aka.ECb != null) { var bka = aka.ECb; this.range = vsa(bka); } txt = aka.txt; } else { var caret = Jra(this.body, this.path, -1, true); if(caret != null && caret.node != null) { var dka = fka(caret.node); if(dka.trimTH().length == 0) { return ""; } else { if(yba) { Eya(rxa(caret.node)); } txt = xka + "0" + yka + fka(caret.node) + xka + "1" + yka; } } else { txt = ""; } } if(yba && txt.length > 0) { var eka; if(zba!= null) { eka = zba; } else { zba = pba; } if(zba == "ScanSoft Emily_Full_22kHz" || zba == "ScanSoft Daniel_Full_22kHz" || zba == "ScanSoft Jill_Full_22kHz" || zba == "ScanSoft Tom_Full_22kHz" || zba == "VW Kate" || zba == "VW Paul") { txt = "<volume level=\"75\"/>" + txt; } } return txt; }; function fka(p_node) { var txt = ""; try { if(p_node.nodeType == 1) { if(p_node.getAttribute("ignore") == null) { var tagName = p_node.tagName.toLowerCase(); if(tagName == "input") { var Iwa = p_node.getAttribute("type"); if(Iwa != null) { Iwa = Iwa.toLowerCase(); if(Iwa.length == 0 || Iwa == "text") { txt = p_node.value; } else if(Iwa == "password") { txt = ""; } else if(Iwa == "image") { var pka = p_node.getAttribute("alt"); if(pka != null && pka.length > 0) { txt = pka; } else { txt = ""; } } else if(Iwa == "button" || Iwa == "submit" || Iwa == "reset") { txt = p_node.getAttribute("value"); } } else { txt = p_node.value; } } else if(tagName == "select") { var Lwa = p_node.selectedIndex; var Mwa = ""; var IEb = p_node.options.length; for( var yAb = 0; yAb < IEb; yAb++) { Mwa += p_node.options[yAb].text + " "; } if(IEb > 0) { if(Lwa > -1) { txt = p_node.options[Lwa].text + " selected from the list " + Mwa; } else { txt = "No selection from list " + Mwa; } } } else if(tagName == "textarea" || tagName == "option") { txt = p_node.value; } else if(tagName == "img") { var mka = p_node.getAttribute("title"); if(mka != null && mka.length > 0) { txt = mka; } else { var pka = p_node.getAttribute("alt"); if(pka != null && pka.length > 0) { txt = pka; } else { var qka = p_node.getAttribute("msg"); if(qka != null && qka.length > 0) { txt = qka; } } } } else { var pka = p_node.getAttribute("alt"); if(pka != null && pka.length > 0) { txt = pka; } else { var qka = p_node.getAttribute("msg"); if(qka != null && qka.length > 0) { txt = qka; } } } } } } catch(ignore) { txt = ""; } return txt; }; this.highlightRange = function() { try { if(this.range != null) { var ECb = Mra(this.range.body, this.range.WBb.path, this.range.WBb.offset, this.range.XBb.path, this.range.XBb.offset); var eBb = ECb.eBb; var fBb = ECb.fBb; if(eBb != null && fBb != null) { rw_setSpeechRangeImpl(eBb.node, eBb.offset, fBb.node, fBb.offset, "sp"); } else { } } } catch(err) { Iva("err THHoverTargetClass:highlightRange: " + err.message); } }; this.unhighlightRange = function() { try { if(this.range != null) { var ECb = Mra(this.range.body, this.range.WBb.path, this.range.WBb.offset, this.range.XBb.path, this.range.XBb.offset); var eBb = ECb.eBb; var fBb = ECb.fBb; if(eBb != null && fBb != null) { rw_removeSpeechHighlight(twa(eBb, fBb), false); } else { } } } catch(err) { Iva("failed to do unhighlightRange:"+err.message); } }; this.equals = function(p_hoverTarget) { if(p_hoverTarget == null) { return false; } if(this.isRange() != p_hoverTarget.isRange()) { return false; } if(this.isRange()) { return this.range.equals(p_hoverTarget.range); } else { return this.path.equalsTH(p_hoverTarget.path); } }; this.toString = function() { var txt = "THHoverTarget "; if(this.path != null) { txt+= "path=" + this.path; } else if(this.range != null) { txt+= this.range.toString(); } return txt; };};var xka = '<bookmark mark="';var yka = '"/>';var zka = null; var g_lastTarget = null; var Bla = 0;var Cla = 0;var Dla = false;var Ela = false;var Fla = false;if(Yea){ var Gla = navigator.appVersion; var Hla = Gla.lastIndexOf("/"); Gla = Gla.substring(Hla + 1); try { var Ila = parseFloat(Gla); if(Ila < 300 || (Ila > 400 && Ila < 416)) { Dla = true; } else if(Ila > 500) { Fla = true; } else { Ela = true; } } catch(err) { Fla = true; }}function tmp(str){ var el = document.getElementById("asd"); el.innerText = str;};function Mla(evt){ if(ica && evt.shiftKey) { return; } var Vla = ala(evt); if(Vla != null) { if(Vla.node.nodeType == 1) { var ADb = Vla.node; var LDb = ADb.tagName.toLowerCase(); if(LDb == "img") { ADb = ADb.parentNode; LDb = ADb.tagName.toLowerCase(); } if(LDb == "div") { if(ADb.id == xfa || ADb.id == yfa) { return; } } } var fla = mla(Vla); if(fla != null) { var moa = fla.getCaretRange(); if(Awa(moa)) { var start = moa.eBb.node; if(fla.isRange()) { var end = moa.fBb.node; start = Mpa(start); end = Qpa(end); var WBb = Jka(start, 0); var XBb; if(end.nodeType == 1) { XBb = Jka(end, 0); } else { XBb = Jka(end, end.nodeValue.length); } fla.range = new Bka(document.body, WBb, XBb); } var pos = Eia(start); var scrollLeft = rw_getScreenOffsetLeft(); var scrollTop = rw_getScreenOffsetTop(); Cga(pos.x, pos.y, fla); } else { } } }}var Sla = 0;var Tla = 0; 
function Xla(evt){ try { var d = new Date(); var YFb = d.getTime(); if(YFb < (Tla + 800)) { return; } g_bInMouseHoverFlag = true; var Vla = ala(evt); if(Vla != null) { var fla = mla(Vla); if(fla != null) { try { if(fla.equals(zka)) { return; } if(fla.equals(g_lastTarget)) { if((YFb - Sla) < 1000) { return; } Sla = YFb; } zka = fla; sla(zka); }catch(err){Iva("err " + err.message);} } else { zka = null; } } } catch(err) { Iva("mousehover error:" + err.message); }};function ala(p_evt){ var dqa = null; var eqa = 0; if(Wea) { dqa = p_evt.srcElement; if(dqa.nodeType == 1 && dqa.tagName.toLowerCase() == "textarea") { } else { var YEb = rw_getTargetNodeAsCaretIE(p_evt); if(YEb != null) { dqa = YEb.node; eqa = YEb.offset; } } } else if(Yea) { dqa = p_evt.target; if(dqa != null) { if(Fla) { if(dqa.firstChild != null && dqa.firstChild.nodeType == 3 && dqa.tagName.toLowerCase() != "textarea") { var hqa = dqa.firstChild.nodeValue; if(hqa.trimTH().length > 0) { dqa = dqa.firstChild; } } } else if(Ela) { if(p_evt.fromElement != null) { if(dqa.nodeType == 1 && dqa.tagName.toLowerCase() != "textarea") { if(p_evt.fromElement.nodeType == 3) { dqa = p_evt.fromElement; } } } else { if(dqa.firstChild != null && dqa.firstChild.nodeType == 3 && dqa.tagName.toLowerCase() != "textarea") { var hqa = dqa.firstChild.nodeValue; if(hqa.trimTH().length > 0) { dqa = dqa.firstChild; } } } } } } else { if(p_evt.explicitOriginalTarget.nodeValue != null) { if(p_evt.target.tagName.toLowerCase() == "textarea") { dqa = p_evt.target; } else { dqa = p_evt.explicitOriginalTarget; } } else { dqa = p_evt.target; } } if(dqa == null) { return null; } return new THCaret(dqa, eqa, true);}function mla(p_targetCaret){ var dqa = p_targetCaret.node; var fla = null; if(Gca || Fca) { var bod = Hva(dqa); var gBb = dqa; if(gBb.nodeType == 3) { gBb = gBb.parentNode; } while(gBb != null && gBb != bod) { if(gBb.getAttribute(baa) != null) { return fla; } gBb = gBb.parentNode; } } if(dqa != null && dqa.parentNode != null && dqa.parentNode.getAttribute) { var Fwa; var ila; var jla; var kla; var lla; if(dqa.nodeType == 1) { Fwa = dqa.tagName; if(Eca && Fwa.toUpperCase() == "INPUT" ) { var lDb = dqa.getAttribute("type"); if(lDb != null && lDb == "button") { return fla; } } ila = dqa.getAttribute("started"); jla = dqa.getAttribute("ignore"); kla = dqa.getAttribute("sp"); lla = dqa.getAttribute("csp"); if(lla != null || jla != null || kla != null || ila != null) { return fla; } } var ola = dqa.parentNode; ila = ola.getAttribute("started"); jla = ola.getAttribute("ignore"); kla = ola.getAttribute("sp"); lla = ola.getAttribute("csp"); if(lla != null || jla != null || kla != null || ila != null) { fla = null; } else { if(dqa.nodeType == 3) { var YEb = p_targetCaret; try { var eBb; var fBb; if(!Wea && YEb.node.nodeValue.length > 0) { YEb.offset = 0; eBb = rna(YEb); YEb.offset = YEb.node.nodeValue.length - 1; fBb = Boa(YEb); } else { eBb = rna(YEb); fBb = Boa(YEb); } if(eBb != null && fBb != null) { var range = new Bka(Hva(ola), Jka(eBb.node, eBb.offset), Jka(fBb.node, fBb.offset)); fla = new THHoverTarget(null, null, range); } } catch(err){Iva(err.message);} } else if(dqa.nodeType == 1) { fla = new THHoverTarget(Hva(dqa), kqa(dqa), null); } else { fla = null; } } } return fla;}function sla(p_hoverTarget){ if(Xba) { $rw_event_stop_limited(); Bla = setTimeout("rw_doHoverStep2()", 500); } else { Bla = setTimeout("rw_doHoverStep1()", 500); }};function rw_doHoverStep1(){ if($g_bMouseSpeech) { Bla = 0; if (zka != null) { if(!Xba) { var txt; if(zka instanceof String) { txt = zka.toString(); } else { if(zka.isRange()) { if(Awa(zka.getCaretRange())) { txt = " "; } else { txt = null; } } else { txt = zka.getTextPreparedForSpeech(); } } if(txt == null || txt.length == 0) { return; } } $rw_event_stop_limited(); Cla = setTimeout("rw_doHoverStep2()", 1000); } }};var ula = false;function rw_doHoverStep2(){ try { ula = true; if($g_bMouseSpeech) { Bla = 0; if (zka != null) { if(g_lastTarget!= null) { Cla = setTimeout("rw_doHoverStep2()", 500); } else { var d = new Date(); Tla = d.getTime(); rw_speakHoverTarget(zka); zka = null; } } } } catch(ignore) { } ula = false;};var wla = new Array();var xla = (new Date).getTime();var yla = 0;var zla = 500;function Ama(){ if((new Date).getTime() - xla < zla) { return true; } return false;}function rw_targetQueueTimer(){ if(Ama()) { yla = setTimeout("rw_targetQueueTimer();", 100); } else { yla = 0; if(wla.length > 1) { var Iwa = wla[wla.length - 2]; var target = wla[wla.length - 1]; wla.length = 0; if(Iwa == "rw_speakHoverTarget") { rw_speakHoverTarget(target); } else if(Iwa == "rw_speechHighlightOnly") { rw_speechHighlightOnly(target); } else { Jma(target, Iwa); } } }}function rw_speakHoverTarget(p_target){ try { if(p_target == null) { return; } if(Ama()) { wla.push("rw_speakHoverTarget"); wla.push(p_target); if(yla == 0) { yla = setTimeout("rw_targetQueueTimer();", 100); } return; } xla = (new Date).getTime(); if(g_lastTarget != null) { g_lastTarget.unhighlightRange(); } if(p_target instanceof String) { g_lastTarget = null; Lta(p_target.toString()); } else { g_lastTarget = p_target; var txt = p_target.getTextPreparedForSpeech(); if(txt != null && txt.length > 0) { p_target.highlightRange(); Lta(txt); if(fca) { var wya = p_target.range; var ECb; var bod; if(wya != null) { bod = wya.body; ECb = Mra(bod, wya.WBb.path, wya.WBb.offset, wya.XBb.path, wya.XBb.offset); } else if(p_target.body != null && p_target.path != null) { bod = p_target.body; var Gma = new THCaret(tqa(bod, p_target.path), 0, true); ECb = new cja(Gma, Gma); } else { return; } var Hma = toa(ECb); if(Hma == null) { return; } while(!Awa(Hma)) { Hma = toa(Hma); if(Hma == null) { return; } } if(Oma(ECb.eBb.node, Hma.fBb.node)) { return; } var Ima = new Bka(bod, Jka(Hma.eBb.node, Hma.eBb.offset), Jka(Hma.fBb.node, Hma.fBb.offset)); gca= new THHoverTarget(null, null, Ima); uta.push("setTimeout(\"$rw_readNextTarget();\", 50);"); } } } } catch(err) { Iva("rw_speakHoverTarget error:"+err.message); }}function Jma(p_target, p_strUrl){ if(p_target == null || p_strUrl == null) { return; } if(Ama()) { wla.push(p_strUrl); wla.push(p_target); if(yla == 0) { yla = setTimeout("rw_targetQueueTimer();", 100); } return; } xla = (new Date).getTime(); if(g_lastTarget != null) { g_lastTarget.unhighlightRange(); } if(p_target instanceof String) { g_lastTarget = null; try { var flash = rw_getWebToSpeech(); if(flash != null) { Lia(true); flash.startSpeechFromFile(p_target, p_strUrl); } } catch(err) { Iva("Caught error " + err); } } else { g_lastTarget = p_target; var txt = p_target.getTextPreparedForSpeech(); if(txt != null && txt.length > 0) { p_target.highlightRange(); Rta(txt, p_strUrl); } }}function rw_speechHighlightOnly(p_target){ if(p_target == null) { return; } if(Ama()) { wla.push("rw_speechHighlightOnly"); wla.push(p_target); if(yla == 0) { yla = setTimeout("rw_targetQueueTimer();", 100); } return; } xla = (new Date).getTime(); if(g_lastTarget != null) { g_lastTarget.unhighlightRange(); } if(p_target instanceof String) { g_lastTarget = null; } else { g_lastTarget = p_target; var txt = p_target.getTextPreparedForSpeech(); if(txt != null && txt.length > 0) { p_target.highlightRange(); Tta(txt); } }}function $rw_readNextTarget(){ if(gca != null) { zka = gca; gca = null; rw_doHoverStep2(); }}function Oma(p_startNode, p_endNode){ if(p_startNode == null || p_endNode == null || p_startNode == p_endNode) { return false; } var Mma; var xva=p_startNode; while(xva != null && xva != p_endNode) { if(xva.nodeType == 1) { if(xva.getAttribute("texthelpStopContinuous") != null) { return true; } } Mma = !jpa(xva); if (xva.firstChild != null && Mma) { xva = xva.firstChild; } else if(xva.nextSibling != null) { xva = xva.nextSibling; } else { while (xva != null && xva.nextSibling == null) { xva = xva.parentNode; if(xva.nodeType == 1) { if(xva.getAttribute("texthelpStopContinuous") != null) { return true; } } if(p_endNode == xva) { return false; } } if (xva != null && p_endNode != xva) { xva = xva.nextSibling; } } } return false;}function Qma(p_range, p_strWord){ this.range = p_range; this.word = p_strWord; };function Rma(p_body, p_domRefLeft, p_domRefRight, p_wordNodes){ try { if(p_domRefLeft == null || p_domRefRight == null) { return new qxa(); } var ECb = Mra(p_body, p_domRefLeft.path, p_domRefLeft.offset, p_domRefRight.path, p_domRefRight.offset); return ama(ECb, p_wordNodes); } catch(err) { Iva("err rw_getTextOverRangeToSpeak:" + "|"+ err.message); return new qxa(); }};function ama(p_thCaretRange, p_wordNodes){ var Sma = new qxa(); try { if(p_thCaretRange == null) { return Sma; } var eBb = p_thCaretRange.eBb; var fBb = p_thCaretRange.fBb; if(eBb == null) { return Sma; } if(fBb == null) { return Sma; } if(eBb.node != null) { var AEb = nma(eBb.node); if(AEb != null) { eBb.node = AEb; eBb.offset = 0; } } if(fBb.node != null && fBb.node.nodeType == 3) { var AEb = nma(fBb.node); if(AEb != null) { if(fBb.node.nodeType == 3) { fBb.offset = fBb.node.nodeValue.length; } fBb.node = AEb; } } var Xma = false; if(!yba) { var gBb = eBb.node; var BEb; while(gBb != null) { if(gBb.nodeType == 1) { BEb = gBb.getAttribute("id"); if(BEb != null && BEb.length > 0) { if(BEb == "rwpopuptrans") { Xma = true; } break; } } gBb = gBb.parentNode; } } if(yba || Xma) { var bma = rxa(eBb.node); if(bma != null) { Sma.voice = bma; } var cma = zxa(eBb.node, fBb.node, bma); if(cma != null) { Sma.ECb = new cja(p_thCaretRange.eBb, cma); fBb = cma; } } rw_getTextOverRangeToSpeakImpl(eBb, fBb, p_wordNodes); var txt = ""; var IEb = p_wordNodes.length; if(IEb > 0) { var i = 0; for(i=0; i<IEb; i++) { txt += xka + i + yka + p_wordNodes[i].word; } txt += xka + IEb + yka; } Sma.txt = txt; return Sma; } catch(err) { Iva("err rw_getTextOverRangeToSpeak:" + "|"+ err.message); return Sma; }};function ema(p_node){ if(p_node == null) { return false; } if(p_node.nodeType == 1) { var tagName = p_node.tagName.toLowerCase(); if(tagName == "span") { var Rxa = p_node.getAttribute("pron"); if(Rxa != null) { return true; } Rxa = p_node.getAttribute("chunk"); if(Rxa != null) { return true; } } else if(tagName == "acronym" || tagName == "abbr") { var Rxa = p_node.getAttribute("title"); if(Rxa != null) { return true; } } else if(tagName == "chunk") { return true; } else if(tagName == "img") { var Rxa = p_node.getAttribute("msg"); if(Rxa != null) { return true; } } else if(p_node.getAttribute("ignore") != null) { return true; } } return false;};function ima(p_node){ if(p_node.nodeType == 1) { var tagName = p_node.tagName.toLowerCase(); if(tagName == "span") { var Rxa = p_node.getAttribute("pron"); if(Rxa != null) { return true; } } else if(tagName == "acronym" || tagName == "abbr") { var Rxa = p_node.getAttribute("title"); if(Rxa != null) { return true; } } } return false;};function nma(p_node){ if(p_node != null) { var bod = Hva(p_node); var gBb = p_node; while(gBb != null && gBb != bod) { if(ema(gBb)) { return gBb; } gBb = gBb.parentNode; } } else { return null; }};var mma = 500;function pma(p_storedText){ var Cna = p_storedText.length; if(Cna > 1 && p_storedText.substr(Cna - 2, 2) == ". ") { return p_storedText; } else if(Cna > 0 && p_storedText.substr(Cna - 1, 1) == ".") { return p_storedText + " "; } else { var txt = p_storedText.trimEndTH(); var c = txt.charCodeAt(txt.length - 1); if(Ova(c) || c > 127) { return p_storedText + ". "; } else { return p_storedText; } }}function rma(p_strWord){ var sEb = ""; var IEb = p_strWord.length; var i = 0; var yEb; for(i=0; i<IEb; i++) { yEb = p_strWord.charCodeAt(i); if(yEb > 127) { sEb += p_strWord.charAt(i); } else { switch(yEb) { case 35: case 40: case 41: case 91: case 93: case 95: case 123: case 124: case 125: sEb += " "; break; case 96: sEb += "'"; break; case 38: sEb += "&amp;"; break; case 34: sEb += "&quot;"; break; case 60: sEb += "&lt;"; break; case 62: sEb += "&gt;"; break; default: sEb += p_strWord.charAt(i); } } } return sEb;}function rw_getTextOverRangeToSpeakImpl(p_leftCaret, p_rightCaret, p_wordNodes){ try { var wva = p_leftCaret.node; var xva = p_rightCaret.node; var bod = Hva(wva); var xna = p_leftCaret.offset; var Doa = p_rightCaret.offset; var yma = ""; var wxa = wva; var Bna = null; var Cna = 0; var Dna = true; var yAb = 0; var bsa = Jka(wxa, xna); var csa = null; while(wxa != null) { if(yAb > mma) { if(Fca) { throw "Full selection will not be spoken due to its length."; } else { Bwa("Full selection will not be spoken due to its length."); } return; } if(ema(wxa)) { if(yma.length > 0) { if(tva(yma)) { p_wordNodes[yAb++] = new Qma(new Bka(bod, bsa, csa), rma(yma)); } yma = ""; } var Kna = upa(wxa); if(Kna.length > 0 && tva(Kna)) { if(ima(wxa)) { var Ina = fna(wxa, false); var yxa = hna(wxa, false); if(Ina != null && Ina.nodeType == 3 && yxa != null && yxa.nodeType ==3) { bsa = Jka(Ina, 0); csa = Jka(yxa, yxa.nodeValue.length); } p_wordNodes[yAb++] = new Qma(new Bka(bod, bsa, csa), rma(Kna)); } else { bsa = Jka(wxa, -1); p_wordNodes[yAb++] = new Qma(new Bka(bod, bsa, bsa), rma(Kna)); } yma = ""; } bsa = null; csa = null; wxa = ena(wxa, false, xva); } else if(wxa.nodeType == 1) { if(Dna) { Bna = ana(wxa, true, xva); } else { Bna = Xna(wxa, true, xva); } if(Bna == null) { if(yma.length > 0) { if(tva(yma)) { p_wordNodes[yAb++] = new Qma(new Bka(bod, bsa, csa), rma(pma(yma))); } yma = ""; bsa = null; csa = null; } if(Dna) { wxa = ana(wxa, false, xva); } else { wxa = Xna(wxa, false, xva); } } else { wxa = Bna; } } else if(wxa.nodeType == 3) { var Kna = upa(wxa); if(Kna == null) { Kna = ""; } var XEb = 0; if(xva == wxa && Doa > -1) { Kna = Kna.substring(0, Doa); } if(wva == wxa && xna > 0) { Kna = Kna.substring(xna); XEb = xna; } if(Kna.length == 0 && yma.length == 0) { bsa = null; } else { if(bsa == null || yma.length == 0) { bsa = Jka(wxa, XEb); } var dEb = Sna(Kna); while(dEb > -1) { if(dEb == 0) { if(yma.length > 0) { if(tva(yma)) { if(csa == null) { csa = Jka(wxa, XEb); } var wya = new Bka(bod, bsa, csa); p_wordNodes[yAb++] = new Qma(wya, rma(yma)); } yma = ""; ++XEb; Kna = Kna.substr(1); } else { Kna = Kna.substr(1); ++XEb; } } else { var Ona = yma + Kna.substring(0, dEb + 1); if(tva(Ona)) { csa = Jka(wxa, dEb + XEb); var wya = new Bka(bod, bsa, csa); p_wordNodes[yAb++] = new Qma(wya, rma(Ona)); if(yAb > mma) { if(Fca) { throw "Full selection will not be spoken due to its length."; } else { Bwa("Full selection will not be spoken due to its length."); } return; } } yma = ""; XEb += dEb + 1; Kna= Kna.substring(dEb + 1); } bsa = Jka(wxa, XEb); csa = null; dEb = Sna(Kna); } if(Kna.length > 0) { yma += Kna; csa = Jka(wxa, Kna.length + XEb); if(csa == null) { yma = ""; } } if(wxa == xva) { if(yma.length > 0) { var wya = new Bka(bod, bsa, csa); if(tva(yma)) { p_wordNodes[yAb++] = new Qma(wya, rma(yma)); } } return; } } Bna = Xna(wxa, true, xva); if(Bna == null) { if(yma.length > 0) { if(tva(yma)) { p_wordNodes[yAb++] = new Qma(new Bka(bod, bsa, csa), rma(pma(yma))); } yma = ""; bsa = null; csa = null; } wxa = Xna(wxa, false, xva); } else { wxa = Bna; } } else { Bna = Xna(wxa, true, xva); if(Bna == null) { if(yma.length > 0) { if(tva(yma)) { p_wordNodes[yAb++] = new Qma(new Bka(bod, bsa, csa), rma(pma(yma))); } yma = ""; bsa = null; csa = null; } wxa = Xna(wxa, false, xva); } else { wxa = Bna; } } Dna = false; } } catch(err) { Iva("err rw_getTextOverRangeToSpeakImpl:"+ err.message); }};function Sna(p_txt){ if(p_txt == null || p_txt.length == 0) { return -1; } var dEb = p_txt.search("\\s"); return dEb;};function Una(p_node, p_bGoByStyle, p_endNode){ if(p_node == null || p_node == p_endNode) { return null; } var wva = p_node; if (wva.previousSibling != null) { wva = wva.previousSibling; if(p_bGoByStyle) { if(!gpa(wva)) { return null; } } if(p_endNode == wva) { if(jpa(p_endNode)) { return null; } else { return p_endNode; } } if(wva != null && jpa(wva)) { wva = Una(wva, p_bGoByStyle, p_endNode); } else { while(wva != null && wva.lastChild != null) { wva = wva.lastChild; if(p_bGoByStyle) { if(gpa(wva) == false) { wva = null; } } if(p_endNode == wva) { if(jpa(p_endNode)) { wva = null; } break; } else if(wva != null && jpa(wva)) { wva = Una(wva, p_bGoByStyle, p_endNode); break; } } } } else { wva = wva.parentNode; if(p_bGoByStyle) { if(!gpa(wva)) { wva = null; } } } return wva;};function Xna(p_node, p_bGoByStyle, p_endNode){ if(p_node == null || p_node == p_endNode) { return null; } var kna = jpa(p_node); var xva = p_node; if (xva.firstChild != null && !kna) { xva = xva.firstChild; } else if(xva.nextSibling != null) { xva = xva.nextSibling; } else { while (xva != null && xva.nextSibling == null) { xva = xva.parentNode; if(p_bGoByStyle) { if(gpa(xva) == false) { xva = null; } } if(p_endNode == xva) { break; } } if (xva != null && p_endNode != xva) { xva = xva.nextSibling; } } if(xva != null) { if(p_bGoByStyle) { if(gpa(xva) == false) { xva = null; } } } if(xva != null && jpa(xva)) { if(xva != p_endNode) { xva = Xna(xva, p_bGoByStyle, p_endNode); } else { xva = null; } } return xva;};function ana(p_node, p_bGoByStyle, p_endNode){ if(p_node == null) { return null; } var kna = jpa(p_node); var xva = p_node; if (xva.firstChild != null && !kna) { xva = xva.firstChild; } else if(xva.nextSibling != null) { if(p_node == p_endNode) { xva = null; } else { xva = xva.nextSibling; } } else { if(p_node == p_endNode) { xva = null; } else { while (xva != null && xva.nextSibling == null) { xva = xva.parentNode; if(p_bGoByStyle) { if(gpa(xva) == false) { xva = null; } } if(p_endNode == xva) { break; } } if (xva != null && p_endNode != xva) { xva = xva.nextSibling; } } } if(xva != null) { if(p_bGoByStyle) { if(gpa(xva) == false) { xva = null; } } } if(xva != null && jpa(xva)) { if(xva != p_endNode) { xva = Xna(xva, p_bGoByStyle, p_endNode); } else { xva = null; } } return xva;};function cna(p_node, p_bGoByStyle, p_endNode){ if(p_node == null || p_node == p_endNode) { return null; } var wva = p_node; if (wva.previousSibling != null) { wva = wva.previousSibling; if(p_bGoByStyle) { if(!gpa(wva)) { wva = null; } } if(wva != null && jpa(wva)) { if(p_endNode == wva) { wva = null; } else { wva = cna(wva, p_bGoByStyle, p_endNode); } } } else { wva = wva.parentNode; if(p_bGoByStyle) { if(!gpa(wva)) { wva = null; } } } return wva;};function ena(p_node, p_bGoByStyle, p_endNode){ if(p_node == null || p_node == p_endNode) { return null; } var xva = p_node; if(xva.nextSibling != null) { xva = xva.nextSibling; } else { while (xva != null && xva.nextSibling == null) { xva = xva.parentNode; if(p_bGoByStyle) { if(gpa(xva) == false) { xva = null; } } if(p_endNode == xva) { break; } } if (xva != null && xva != p_endNode) { xva = xva.nextSibling; } } if(xva != null) { if(p_bGoByStyle) { if(gpa(xva) == false) { xva = null; } } } if(xva != null && jpa(xva)) { if(xva == p_endNode) { xva = null; } else { xva = ena(xva, p_bGoByStyle, p_endNode); } } return xva;};function fna(p_node, p_bAllowImg){ if(p_node == null) { return null; } if(p_node.firstChild == null || jpa(p_node)) { return p_node; } if(p_node.nodeType == 1 && p_node.tagName.toLowerCase() == "textarea") { return p_node; } var gBb = p_node.firstChild; if(gBb.nodeType == 3) { return gBb; } else if(p_bAllowImg && gBb.tagName.toLowerCase() == "img" && gBb.getAttribute("msg") != null && gBb.getAttribute("msg").length > 0) { return gBb; } else { if(p_bAllowImg) { return Voa(gBb, false, p_node); } else { return boa(gBb, false, p_node, true); } }}function hna(p_node, p_bAllowImg){ if(p_node == null) { return null; } if(p_node.lastChild == null || jpa(p_node)) { return p_node; } if(p_node.nodeType == 1 && p_node.tagName.toLowerCase() == "textarea") { return p_node; } var gBb = p_node.lastChild; while(gBb != null) { if(gBb.nodeType == 3) { return gBb; } else if(p_bAllowImg && gBb.tagName.toLowerCase() == "img" && gBb.getAttribute("msg") != null && gBb.getAttribute("msg").length > 0) { return gBb; } else if(jpa(gBb) || gBb.lastChild == null) { var JDb; if(p_bAllowImg) { JDb = Moa(gBb, false, p_node); } else { JDb = Soa(gBb, false, p_node, true); } return JDb; } else { gBb = gBb.lastChild; } } return p_node;}function ona(Nsa){ var kna = jpa(Nsa); var xva = Nsa; if (xva.firstChild != null && !kna) { xva = xva.firstChild; } else if(xva.nextSibling != null) { var wxa = xva; xva = xva.nextSibling; var gBb = xva; var bod = gBb.ownerDocument.body; while(gBb != null && gBb != bod) { if(gBb == wxa) { throw "DOM Error"; } gBb = gBb.parentNode; } } else { while (xva != null && xva.nextSibling == null) { xva = xva.parentNode; } if (xva != null) { var wxa = xva; xva = xva.nextSibling; var gBb = xva; var bod = gBb.ownerDocument.body; while(gBb != null && gBb != bod) { if(gBb == wxa) { throw "DOM Error"; } gBb = gBb.parentNode; } } } if(xva != null && jpa(xva)) { xva = ona(xva); } return xva;};function rna(p_thCaret, p_endNode){ if(typeof(p_endNode) == "undefined") { p_endNode = null; } if(p_thCaret == null || p_thCaret.node == null) { return null; } var node = p_thCaret.node; var XEb = p_thCaret.offset; if(p_thCaret.forwardBias) { if(node.nodeType == 3 && XEb == node.nodeValue.length) { node = Voa(node, true, p_endNode); XEb = 0; if(node == null) { node = p_thCaret.node; XEb = p_thCaret.offset; } } } else { if(XEb > 0) { --XEb; } else { node = Moa(node, true, p_endNode); if(node == null) { return p_thCaret; } if(node.nodeType == 3) { XEb = node.nodeValue.length - 1; } else { XEb = 0; } } } if(node.nodeType == 3) { var tna = node.nodeValue.charAt(XEb); if(tna == '.' || tna == '!' || tna == '?' || tna == ':') { if(XEb > 0) { --XEb; } else { node = Moa(node, true, p_endNode); if(node == null) { return p_thCaret; } if(node.nodeType == 3) { XEb = node.nodeValue.length - 1; } else { XEb = 0; } } } } var Eoa = node; var Foa = XEb; var wva = node; var xna = XEb; var ppa = false; var Hoa = ' '; while(!ppa) { if(wva.nodeType == 3) { var txt = wva.nodeValue; if(txt.length > 0) { if(xna == -1) { xna = txt.length; } txt = txt.replace(/[\x21\x3f\x3a]/g, "."); var dEb = txt.lastIndexOf(".", xna); while(dEb > -1) { if(eha(txt, dEb)) { if(dEb < txt.length - 1) { Eoa = wva; Foa = dEb + 1; ppa = true; break; } else { if(!Qva(Hoa)) { ppa = true; break; } } } if(dEb == 0) { dEb = -1; } else { dEb = txt.lastIndexOf(".", dEb - 1); } } if(ppa) { break; } if(txt.trimTH().length > 0) { Eoa = wva; Foa = 0; } Hoa = txt.charAt(0); } } else { if(ema(wva) && wva.getAttribute("ignore") == null) { Eoa = wva; Foa = 0; } } wva = Una(wva, true, p_endNode); xna = -1; if(wva == null) { ppa = true; break; } if(wva.nodeType == 3 && nma(wva) != null) { wva = nma(wva); wva = Una(wva, true, p_endNode); } } if(Eoa.nodeType == 3) { var txt = Eoa.nodeValue; if(Foa < txt.length) { while(Foa < txt.length) { if(jva(txt.charAt(Foa))) { if(Eoa == p_thCaret.node && Foa >= p_thCaret.offset) { break; } else { ++Foa; } } else { break; } } } } return new THCaret(Eoa, Foa, true);}function Boa(p_thCaret, p_endNode){ if(typeof(p_endNode) == "undefined") { p_endNode = null; } if(p_thCaret == null || p_thCaret.node == null) { return null; } var xva = p_thCaret.node; var Doa = p_thCaret.offset; var Eoa = xva; var Foa = Doa; var ppa = false; var Hoa = ' '; while(!ppa) { if(xva.nodeType == 3) { var txt = xva.nodeValue; if(txt.length > 0) { if(Hoa == '.') { var Ioa = txt.charAt(Doa); if(!Qva(Ioa)) { ppa = true; break; } } txt = txt.replace(/[\x21\x3f\x3a]/g, "."); var dEb = txt.indexOf(".", Doa); while(dEb > -1) { if(eha(txt, dEb)) { if(dEb < txt.length - 1) { Eoa = xva; Foa = dEb + 1; ppa = true; } break; } Doa = dEb + 1; dEb = txt.indexOf(".", Doa); } if(ppa) { break; } if(txt.trimTH().length > 0) { Eoa = xva; Foa = txt.length; } Hoa = txt.charAt(txt.length -1); } xva = Xna(xva, true, p_endNode); } else { if(ema(xva) && xva.getAttribute("ignore") == null) { Eoa = xva; Foa = 0; xva = ena(xva, true, p_endNode); } else { xva = Xna(xva, true, p_endNode); } } Doa = 0; if(xva == null) { ppa = true; break; } } if(Eoa.nodeType == 3) { var txt = Eoa.nodeValue; if(Foa > 0 && Foa <= txt.length) { while(Foa > 0) { if(jva(txt.charAt(Foa - 1))) { if(Eoa == p_thCaret.node && Foa <= p_thCaret.offset) { break; } else { --Foa; } } else { break; } } } } return new THCaret(Eoa, Foa, false);}function Moa(p_node, p_bGoByStyle, p_endNode){ var wva = p_node; var Era = false; while (wva != null && wva != p_endNode) { wva = Una(wva, p_bGoByStyle, p_endNode); if(wva != null) { if (wva.nodeType == 3 && wva.parentNode.tagName.toLowerCase() != "textarea") { Era = true; } else if(wva.nodeType == 1 && wva.tagName.toLowerCase() == "img") { var ypa = wva.getAttribute("msg"); if (ypa != null && ypa.length > 0) { Era = true; } } if(Era) { return wva; } } } return null;}function Qoa(p_node, p_bGoByStyle, p_endNode){ var wva = p_node; while(wva != null && wva != p_endNode) { wva = Moa(wva, p_bGoByStyle, p_endNode); if(wva != null) { var Yoa = (wva.nodeType == 3)? wva.nodeValue.trimTH() : wva.getAttribute("msg").trimTH(); if(tva(Yoa)) { return wva; } } } return null;}function Soa(p_node, p_bGoByStyle, p_endNode, p_bIncludeBlanks){ var wva = (p_bIncludeBlanks)? Moa(p_node, p_bGoByStyle, p_endNode) : Qoa(p_node, p_bGoByStyle, p_endNode); while(wva != null && wva.nodeType != 3 && wva != p_endNode) { wva = (p_bIncludeBlanks)? Moa(wva, p_bGoByStyle, p_endNode) : Qoa(wva, p_bGoByStyle, p_endNode); } return wva;}function Voa(p_node, p_bGoByStyle, p_endNode){ var xva = p_node; var Era = false; while (xva != null && xva != p_endNode) { xva = Xna(xva, p_bGoByStyle, p_endNode); if(xva != null) { if (xva.nodeType == 3 && xva.parentNode.tagName.toLowerCase() != "textarea") { Era = true; } else if(xva.nodeType == 1 && xva.tagName.toLowerCase() == "img") { var ypa = xva.getAttribute("msg"); if (ypa != null && ypa.length > 0) { Era = true; } } if(Era) { return xva; } } } return null;}function Zoa(p_node, p_bGoByStyle, p_endNode){ var xva = p_node; while(xva != null && xva != p_endNode) { xva = Voa(xva, p_bGoByStyle, p_endNode); if(xva != null) { var Yoa = (xva.nodeType == 3)? xva.nodeValue.trimTH() : xva.getAttribute("msg").trimTH(); if(tva(Yoa)) { return xva; } } } return null;}function boa(p_node, p_bGoByStyle, p_endNode, p_bIncludeBlanks){ var xva = (p_bIncludeBlanks)? Voa(p_node, p_bGoByStyle, p_endNode) : Zoa(p_node, p_bGoByStyle, p_endNode); while(xva != null && xva.nodeType != 3 && xva != p_endNode) { xva = (p_bIncludeBlanks)? Voa(xva, p_bGoByStyle, p_endNode) : Zoa(xva, p_bGoByStyle, p_endNode); } return xva;}function ioa(p_body){ var zoa = fna(p_body, true); var eBb = new THCaret(zoa, 0, true); var fBb = Boa(eBb, p_body); eBb = rna(fBb, p_body); if(eBb == null || fBb == null) { return null; } var moa = new cja(eBb, fBb); var noa = false; while(!noa) { noa = Awa(moa); if(!noa) { var ooa = toa(moa, p_body); if(ooa == null || (fBb.node == ooa.fBb.node && fBb.offset == ooa.fBb.offset) || (eBb.node == ooa.eBb.node && eBb.offset == ooa.eBb.offset)) { break; } else { moa = ooa; } } } return moa;}function poa(p_body){ var zoa = hna(p_body, true); var fBb; if(zoa.nodeType == 3) { fBb = new THCaret(zoa, zoa.nodeValue.length, false); } else { fBb = new THCaret(zoa, -1, false); } var eBb = rna(fBb, p_body); fBb = Boa(eBb, p_body); if(eBb == null || fBb == null) { return null; } var moa = new cja(eBb, fBb); var noa = false; while(!noa) { noa = Awa(moa); if(!noa) { var ooa = Cpa(moa, p_body); if(ooa == null || (fBb.node == ooa.fBb.node && fBb.offset == ooa.fBb.offset) || (eBb.node == ooa.eBb.node && eBb.offset == ooa.eBb.offset)) { break; } else { moa = ooa; } } } return moa;}function soa(p_thCaret){ var fBb = Boa(p_thCaret); var eBb = rna(fBb); if(eBb == null || fBb == null) { return null; } return new cja(eBb, fBb);}function toa(p_caretRange, p_endNode){ if(typeof(p_endNode) == "undefined") { p_endNode = null; } var wxa = p_caretRange.fBb.node; var Epa = p_caretRange.fBb.offset; var fBb; var eBb; while(wxa != null) { if(wxa.nodeType == 3 && Epa < wxa.nodeValue.length) { fBb = Boa( new THCaret(wxa, Epa, false), p_endNode); if(fBb == null) { return null; } if(fBb.node == wxa && fBb.offset == Epa) { var zoa = Zoa(wxa, false, p_endNode); if(zoa == null) { return null; } fBb = Boa(new THCaret(zoa, 0, false), p_endNode); } } else { var zoa = Zoa(wxa, false, p_endNode); if(zoa == null) { return null; } fBb = Boa(new THCaret(zoa, 0, false), p_endNode); } eBb = rna(fBb, p_endNode); if(eBb == null) { return null; } if(p_caretRange.eBb.node != eBb.node || p_caretRange.eBb.offset != eBb.offset) { return new cja(eBb, fBb); } wxa = fBb.node; if(wxa.nodeType == 3) { var qua = wxa.nodeValue.replace(/[\x21\x3f\x3a]/g, "."); var Ipa = qua.indexOf(".", fBb.offset + 1); if(Ipa == -1) { Epa = qua.length; } else { Epa = Ipa; } } } return null;}function Cpa(p_caretRange, p_endNode){ if(typeof(p_endNode) == "undefined") { p_endNode = null; } var wxa = p_caretRange.eBb.node; var Epa = p_caretRange.eBb.offset; var eBb; var fBb; while(wxa != null) { if(wxa.nodeType == 3) { var qua = wxa.nodeValue.replace(/[\x21\x3f\x3a]/g, "."); var Ipa; if(Epa > 0) { Ipa = qua.lastIndexOf(".", Epa); } else if(Epa == 0) { Ipa = -1; } else { Ipa = qua.lastIndexOf("."); } while(Ipa > -1) { Epa = Ipa; fBb = Boa(new THCaret(wxa, Epa, true), p_endNode); if(fBb == null) { return null; } if(fBb.node != p_caretRange.fBb.node || fBb.offset != p_caretRange.fBb.offset) { eBb = rna(fBb, p_endNode); if(eBb == null) { return null; } return new cja(eBb, fBb); } if(Ipa == 0) { Ipa = -1; } else { Ipa = qua.lastIndexOf(".", Ipa - 1); } } } Epa = -1; gBb = Soa(wxa, true, p_endNode, false); if(gBb != null) { wxa = gBb; } else { wxa = Qoa(wxa, false, p_endNode); if(wxa != null) { if(wxa.nodeType == 3) { fBb = Boa(new THCaret(wxa, wxa.nodeValue.length, false), p_endNode); } else { fBb = Boa(new THCaret(wxa, 0, false), p_endNode); } if(fBb == null) { return null; } if(fBb.node != p_caretRange.fBb.node || fBb.offset != p_caretRange.fBb.offset) { eBb = rna(fBb, p_endNode); if(eBb == null) { return null; } return new cja(eBb, fBb); } } } } return null;}function Mpa(p_node){ var Npa; var Opa = p_node; var JDb = Una(p_node, true, null); while(JDb != null) { Npa = false; if(JDb.nodeType == 1) { if(ema(JDb)) { if(JDb.getAttribute("ignore") != null) { Npa = true; } } else { Npa = true; } } else if(JDb.nodeType == 3) { if(JDb.nodeValue.trimTH().length == 0) { Npa = true; } } if(!Npa) { Opa = JDb; } JDb = Una(JDb, true, null); } return Opa;}function Qpa(p_node){ var Npa; var Opa = p_node; var Psa = Xna(p_node, true, null); while(Psa != null) { Npa = false; if(Psa.nodeType == 1) { if(ema(Psa)) { if(Psa.getAttribute("ignore") != null) { Npa = true; } } else { Npa = true; } } else if(Psa.nodeType == 3) { if(Psa.nodeValue.trimTH().length == 0) { Npa = true; } } if(!Npa) { Opa = Psa; } Psa = Xna(Psa, true, null); } return Opa;}function Upa(p_node, p_nPos){ if(p_node == null || p_node.nodeType != 3 || p_node.parentNode == null) { return p_node; } var Rpa = 0; var dDb = p_node.parentNode; var Tpa = dDb.parentNode; if(Tpa != null && dDb.tagName.toLowerCase() == "span" && Tpa.tagName.toLowerCase() == "span" && dDb.getAttribute(caa) != null && (Tpa.getAttribute(caa) != null || Tpa.getAttribute(daa) != null) ) { Rpa = 2; } else if(dDb.tagName.toLowerCase() == "span" && (dDb.getAttribute(caa) != null || dDb.getAttribute(daa) != null) ) { Rpa = 1; } if( p_node.nodeValue.length == 0 || p_nPos <= 0 || p_nPos >= p_node.nodeValue.length ) { if(Rpa == 0) { var span = document.createElement("span"); span.setAttribute(caa, "1"); var apa = document.createElement("span"); apa.setAttribute(caa, "1"); dDb.insertBefore(span, p_node); span.appendChild(apa); apa.appendChild(p_node); } else if(Rpa == 1) { var span = document.createElement("span"); span.setAttribute(caa, "1"); dDb.insertBefore(span, p_node); span.appendChild(p_node); } return p_node; } var txt = p_node.nodeValue; var Ypa = txt.substring(0, p_nPos); var Zpa = txt.substring(p_nPos); var apa = document.createElement("span"); var bpa = document.createElement("span"); var cpa = document.createTextNode(Ypa); var dpa = document.createTextNode(Zpa); apa.appendChild(cpa); bpa.appendChild(dpa); apa.setAttribute(caa, "1"); bpa.setAttribute(caa, "1"); if(Rpa == 2) { Tpa.insertBefore(bpa, dDb); Tpa.insertBefore(apa, bpa); Tpa.removeChild(dDb); } else if(Rpa == 1) { dDb.insertBefore(apa, p_node); dDb.insertBefore(bpa, p_node); dDb.removeChild(p_node); } else { var span = document.createElement("span"); span.setAttribute(caa, "1"); span.appendChild(apa); span.appendChild(bpa); dDb.insertBefore(span, p_node); dDb.removeChild(p_node); } return dpa;}function gpa(p_node){ if (p_node.nodeType != 1) { if (p_node.nodeType == 3) { return true; } else { return false; } } var LDb = p_node.tagName.toLowerCase().trimTH(); if (LDb == "font") { var lDb = p_node.getAttribute("started"); if (lDb != null && lDb == "1") { return false; } } if(LDb == "span" && p_node.getAttribute("texthelpSkip") != null) { return false; } if (LDb == "em" || LDb == "strong" || LDb == "b" || LDb == "i" || LDb == "u" || LDb == "tt" || LDb == "font" || LDb == "kbd" || LDb == "dfn" || LDb == "cite" || LDb == "sup" || LDb == "sub" || LDb == "a" || LDb == "embed" || LDb == "span" || LDb == "small" || LDb == "nobr" || LDb == "wbr" || LDb == "acronym" || LDb == "abbr" || LDb == "code" || LDb == "s" || LDb == "chunk" || LDb == "th" || LDb == "th:pron" || LDb == "img" || LDb == "/th:pron" || LDb == "w" || LDb == "/w" || LDb == "lic" || LDb == "/lic") { return true; } return false;};function jpa(p_node){ if (p_node == null) { return true; } if (p_node.nodeType != 1) { return p_node.nodeType != 3; } var Rxa = p_node.getAttribute("ignore"); if(Rxa != null) { return true; } Rxa = p_node.getAttribute(faa); if(Rxa != null && !gaa) { return true; } var LDb = p_node.tagName.toLowerCase(); return LDb == "link" || LDb == "area" || LDb == "script" || LDb == "noscript" || LDb == "annotation" || LDb == "style" || LDb == "!--" || LDb == "title";};function mpa(Nsa){ if (Nsa.nodeType != 1) { return false; } var LDb = Nsa.tagName.toLowerCase().trimTH(); if (LDb == "p" || LDb == "br" || LDb == "head" || LDb == "body" || LDb == "hr" || LDb == "div" || LDb == "h1" || LDb == "h2" || LDb == "h3" || LDb == "h4" || LDb == "h5" || LDb == "h6" || LDb == "blockquote" || LDb == "table" || LDb == "tbody" || LDb == "tr" || LDb == "td" || LDb == "th" ) { return true; } return false;};function npa(p_node){ var txt = ""; if(p_node.nodeType == 3) { if(jpa(p_node.parentNode) == false && p_node.parentNode.tagName.toLowerCase() != "textarea") { txt = p_node.nodeValue; } } else if(p_node.nodeType == 1) { if(p_node.getAttribute("ignore") != null) { txt = ""; ppa = true; } else { var Fwa = p_node.tagName.toLowerCase(); var ppa = false; if(Fwa == "img") { var ypa = p_node.getAttribute("msg"); if (ypa != null && ypa.trimTH().length > 0) { txt = " " + ypa.trimTH() + " "; } ppa = true; } else if(Fwa == "span") { var ypa = p_node.getAttribute("pron"); if (ypa != null && ypa.trimTH().length > 0) { txt = ypa.trimTH(); ppa = true; } } else if(Fwa == "acronym" || Fwa == "abbr") { var ypa = p_node.getAttribute("pron"); if (ypa != null && ypa.trimTH().length > 0) { txt = ypa.trimTH(); } else { ypa = p_node.getAttribute("title"); if (ypa != null && ypa.trimTH().length > 0) { txt = ypa.trimTH(); ppa = true; } } } } if(ppa == false) { var Dwa = p_node.firstChild; while (Dwa != null) { txt += npa(Dwa); Dwa = Dwa.nextSibling; } } } return txt;}function upa(p_node){ var txt = ""; if(p_node.nodeType == 3) { if(jpa(p_node.parentNode) == false && p_node.parentNode.tagName.toLowerCase() != "textarea") { txt = p_node.nodeValue; } } else if(p_node.nodeType == 1) { if(p_node.getAttribute("ignore") != null) { txt = ""; } else { var Fwa = p_node.tagName.toLowerCase(); if(Fwa == "img") { var ypa = p_node.getAttribute("msg"); if (ypa != null && ypa.trimTH().length > 0) { txt = " " + ypa.trimTH() + " "; } } else if(Fwa == "span") { var ypa = p_node.getAttribute("pron"); if (ypa != null && ypa.trimTH().length > 0) { txt = ypa.trimTH(); } } else if(Fwa == "acronym" || Fwa == "abbr") { var ypa = p_node.getAttribute("pron"); if (ypa != null && ypa.trimTH().length > 0) { txt = ypa.trimTH(); } else { ypa = p_node.getAttribute("title"); if (ypa != null && ypa.trimTH().length > 0) { txt = ypa.trimTH(); } } } } } return txt;}function rw_getTextOverRange(p_body, p_domRefLeft, p_domRefRight){ try { if(p_domRefLeft == null || p_domRefRight == null) { return ""; } var ECb = Mra(p_body, p_domRefLeft.path, p_domRefLeft.offset, p_domRefRight.path, p_domRefRight.offset); return rw_getTextOverCaretRange(ECb); } catch(err){Iva("err rw_getTextOverRange:" + "|"+ err.message);return "";}}function rw_getTextOverCaretRange(p_thCaretRange){ try { if(p_thCaretRange == null || p_thCaretRange.eBb == null || p_thCaretRange.fBb == null) { return ""; } var eBb = p_thCaretRange.eBb; var fBb = p_thCaretRange.fBb; var wva = eBb.node; var xva = fBb.node; var wxa = wva; var txt = ""; while(wxa != null) { var tmp = upa(wxa); if(tmp != null && tmp != "") { if(wxa == xva && fBb.offset > -1) { tmp = tmp.substring(0, fBb.offset); } if(wxa == wva && eBb.offset > -1) { tmp = tmp.substring(eBb.offset); } txt += tmp; } wxa = Voa(wxa, false, xva); } return txt.trimTH(); } catch(err){Iva("err rw_getTextOverCaretRange:" + "|"+ err.message);return "";}}function Hqa(p_thCaretRange){ try { if(p_thCaretRange == null || p_thCaretRange.eBb == null || p_thCaretRange.fBb == null) { return ""; } var eBb = p_thCaretRange.eBb; var fBb = p_thCaretRange.fBb; var wva = eBb.node; var xva = fBb.node; var yva = false; var wxa = wva; var txt = ""; while(wxa != null) { yva = ema(wxa); if(yva || wxa.nodeType == 3) { var tmp = upa(wxa); if(tmp != null && tmp != "") { if(wxa == xva && fBb.offset > -1) { tmp = tmp.substring(0, fBb.offset); } if(wxa == wva && eBb.offset > -1) { tmp = tmp.substring(eBb.offset); } txt += tmp; } } if(yva) { wxa = ena(wxa, false, xva); } else { wxa = Xna(wxa, false, xva); } } return txt.trimTH(); } catch(err){Iva("err rw_getTextOverCaretRange:" + "|"+ err.message);return "";}}function Rqa(Nsa){ var Ewa = null; var Fwa = Nsa.tagName.toLowerCase(); var uDb = kqa(Nsa); if (Fwa == "input") { var Iwa = Nsa.getAttribute("type"); if (Iwa != null) { Iwa = Iwa.toLowerCase(); } var Pwa = ""; if (Iwa == null || Iwa.equalsTH("") || Iwa.equalsTH("text")) { Pwa = Nsa.value; } else if (Iwa.equalsTH("password")) { Pwa = "Masked password field"; } else if (Iwa.equalsTH("image")) { Pwa = ""; } else if (Iwa.equalsTH("button") || Iwa.equalsTH("submit") || Iwa.equalsTH("reset")) { Pwa = Nsa.getAttribute("value"); } if (Pwa.equalsTH("") == false) { Ewa = "form:" + uDb + ";" + Pwa; } } else if (Fwa == "select") { var Pwa = ""; var Lwa = Nsa.selectedIndex; var Mwa = ""; for (var yAb = 0; yAb < Nsa.options.length; yAb++) { Mwa += Nsa.options[yAb].text + " "; } if (Mwa.equalsTH("") == false) { if (Lwa > -1) { Pwa = Nsa.options[Lwa].text; Pwa += " selected from the list " + Mwa; } else { Pwa = "No selection from the list " + Mwa; } Ewa = "form" + uDb + ";" + Pwa; } } else if (Fwa == "textarea") { var Pwa = Nsa.value; Ewa = "form" + uDb + ";" + Pwa; } else if (Fwa == "option") { var Pwa = Nsa.value; Ewa = "form" + uDb + ";" + Pwa; } return Ewa;}function bqa(evt){ var dqa; if(Wea) { dqa = evt.srcElement; } else if(Yea) { dqa = evt.target; } else { dqa = evt.target; } return dqa;}function fqa(evt){ var YEb = null; var dqa; var eqa = 0; if(Wea) { dqa = evt.srcElement; if(dqa.nodeType == 1 && dqa.tagName.toLowerCase() == "textarea") { } else { YEb = rw_getTargetNodeAsCaretIE(evt); if(YEb != null) { if(YEb.node == null || YEb.node.parentNode == null || YEb.node.parentNode != dqa) { YEb = null; return null; } } } } else if(Yea) { dqa = evt.target; if(dqa != null) { if(Fla) { if(dqa.firstChild != null && dqa.firstChild.nodeType == 3 && dqa.tagName.toLowerCase() != "textarea") { var hqa = dqa.firstChild.nodeValue; if(hqa.trimTH().length > 0) { dqa = dqa.firstChild; } } } else if(Ela) { if(evt.fromElement != null && dqa.nodeType == 1 && dqa.tagName.toLowerCase() != "textarea") { if(evt.fromElement.nodeType == 3) { dqa = evt.fromElement; } } else { if(dqa.nodeType == 1 && dqa.firstChild != null && dqa.firstChild.nodeType == 3 && dqa.tagName.toLowerCase() != "textarea") { var hqa = dqa.firstChild.nodeValue; if(hqa.trimTH().length > 0) { dqa = dqa.firstChild; } } } } } } else { if(evt.explicitOriginalTarget.nodeValue != null) { if(evt.target.tagName.toLowerCase() == "textarea") { dqa = evt.target; } else { dqa = evt.explicitOriginalTarget; var zua = window.getSelection(); if(zua.anchorNode == null || zua.anchorNode != dqa) { return null; } else { YEb = new THCaret(zua.anchorNode, zua.anchorOffset, true); } } } else { dqa = evt.target; } } if(YEb == null && dqa != null) { YEb = new THCaret(dqa, 0, true); } return YEb;}function kqa(p_theNode){ var uDb = ""; var lqa = 0; var mqa = ""; if (p_theNode != null && p_theNode.ownerDocument != null) { var zqa = false; var yqa = false; var bod = p_theNode.ownerDocument.body; while (p_theNode != null && p_theNode != bod) { if(ema(p_theNode)) { uDb = ""; } zqa = (p_theNode.nodeType == 3) || (p_theNode.nodeType == 1 && p_theNode.tagName == "FONT"); var Nsa = p_theNode.previousSibling; while (Nsa != null) { yqa = (Nsa.nodeType == 3) || (Nsa.nodeType == 1 && Nsa.tagName == "FONT"); if(zqa && yqa) { } else { ++lqa; } Nsa = Nsa.previousSibling; zqa = yqa; } uDb = uDb + lqa + "~"; lqa = 0; p_theNode = p_theNode.parentNode; if (p_theNode != null && p_theNode.getAttribute != null && p_theNode.tagName != null) { var qqa = p_theNode.getAttribute("chunk"); if (p_theNode.tagName.toLowerCase() == "span" && qqa == "1") { var rqa = kqa(p_theNode); mqa = "#^th*" + rqa + "#^th*"; } } } } return mqa + uDb;};function tqa(p_theBody, p_strPath){ var ADb = p_theBody; if (p_strPath.lastIndexOf("*") > -1) { var dEb = p_strPath.lastIndexOf("*"); p_strPath = p_strPath.substring(dEb + 1); } var vqa = p_strPath.split("~"); var IEb = vqa.length; var i; for (i = IEb - 2; i > -1; i--) { ADb = ADb.firstChild; if(ADb == null) { return null; } var yEb; if (vqa[i].length == 0) { yEb = 0; } else { yEb = parseInt(vqa[i]); } var yqa = false; var zqa = ADb.nodeType == 3 || (ADb.nodeType == 1 && ADb.tagName == "FONT"); while (yEb > 0) { ADb = ADb.nextSibling; if(ADb == null) { return null; } yqa = (ADb.nodeType == 3) || (ADb.nodeType == 1 && ADb.tagName == "FONT"); if(yqa && zqa) { } else { --yEb; zqa = yqa; } } } return ADb;}function Jra(p_theBody, p_strPath, p_nPos, p_bForwardBias){ try { if(p_theBody == null) { return null; } var ADb = tqa(p_theBody, p_strPath); if(ema(ADb)) { if(ima(ADb)) { if(p_bForwardBias) { var ZBb = fna(ADb, false); if(ZBb != null) { return new THCaret(ZBb, 0, p_bForwardBias); } else { return new THCaret(ADb, 0, p_bForwardBias); } } else { var aBb = hna(ADb, false); if(aBb != null) { if(aBb.nodeType == 3) { return new THCaret(aBb, aBb.length, p_bForwardBias); } else { return new THCaret(aBb, 0, p_bForwardBias); } } else { return new THCaret(ADb, 0, p_bForwardBias); } } } else { return new THCaret(ADb, 0, p_bForwardBias); } } var XEb = 0; if(p_bForwardBias == false) { ++XEb; } if(p_nPos > -1) { if(ADb == null) { return null; } var Era = false; var aBb = ADb.parentNode; var Gra = ADb; var qua; while (Era == false) { if (ADb.nodeType == 3) { qua = ADb.nodeValue; if (p_nPos < (XEb + qua.length)) { Era = true; break; } Gra = ADb; XEb += ADb.nodeValue.length; ADb = Xna(ADb, false, aBb); } else if(ADb.nodeType == 1) { if(ema(ADb)) { var Ira = p_nPos - XEb; if(Ira > 0) { XEb += 1; } else { Era = true; break; } ADb = ena(ADb, false, aBb); } else { ADb = Xna(ADb, false, aBb); } } if (ADb == null || ADb == aBb) { if(Gra != null) { ADb = Gra; if (ADb.nodeType == 3) { XEb = p_nPos - ADb.nodeValue.length; } else { XEb = 0; } if(!p_bForwardBias) { ++XEb; } break; } else { return null; } } } if(p_bForwardBias) { return new THCaret(ADb, p_nPos - XEb, p_bForwardBias); } else { return new THCaret(ADb, p_nPos - (XEb - 1), p_bForwardBias); } } else { return new THCaret(ADb, p_nPos, p_bForwardBias); } } catch(err) { Iva("getCaretFromDomPosition error"); return null; }}function Mra(p_theBody, p_strPathLeft, p_nPosLeft, p_strPathRight, p_nPosRight){ var eBb = Jra(p_theBody, p_strPathLeft, p_nPosLeft, true); var fBb; if(p_strPathLeft == p_strPathRight && p_nPosLeft >= p_nPosRight) { fBb = eBb; } else { fBb = Jra(p_theBody, p_strPathRight, p_nPosRight, false); } return new cja(eBb, fBb);}function rw_getDisplayWidth(){ var nW = (window.innerWidth) ? window.innerWidth : document.body.offsetWidth; return nW;}function rw_getDisplayWidthAdjusted(){ var nW = ((window.innerWidth) ? window.innerWidth : document.body.offsetWidth) - rw_getScrollBarWidth(); return nW;}function rw_getDocumentDisplayWidth(){ var nW = (window.innerWidth) ? window.innerWidth : document.documentElement.offsetWidth; return nW;}function rw_getDocumentDisplayWidthAdjusted(){ var nW = ((window.innerWidth) ? window.innerWidth : document.documentElement.offsetWidth) - rw_getScrollBarWidth(); return nW;}function rw_getDisplayHeight(){ if(nea) { return rw_getDocumentDisplayHeight(); } else { var nH = (window.innerHeight) ? window.innerHeight : document.body.offsetHeight; return nH; }}function rw_getDisplayHeightAdjusted(){ if(nea) { return rw_getDocumentDisplayHeightAdjusted(); } else { var nH = ((window.innerHeight) ? window.innerHeight : document.body.offsetHeight ) - rw_getScrollBarHeight(); return nH; }}function rw_getDocumentDisplayHeight(){ var nH = (window.innerHeight) ? window.innerHeight : document.documentElement.offsetHeight; return nH;}function rw_getDocumentDisplayHeightAdjusted(){ var nH = ((window.innerHeight) ? window.innerHeight : document.documentElement.offsetHeight) - rw_getScrollBarHeight(); return nH;}function rw_getScreenOffsetLeft(){ var n = (window.pageXOffset) ? window.pageXOffset : (document.body.scrollLeft) ? document.body.scrollLeft : (document.documentElement.scrollLeft)? document.documentElement.scrollLeft:0; return n;}function rw_getScreenOffsetTop(){ var n = (window.pageYOffset) ? window.pageYOffset : (document.body.scrollTop) ? document.body.scrollTop : (document.documentElement.scrollTop)? document.documentElement.scrollTop:0; return n;}function rw_getScrollBarWidth(){ if(Wea) { if(nea) { return 20; } else { if(document.compatMode.equalsTH("CSS1Compat")) { return (document.documentElement.offsetWidth - document.documentElement.clientWidth); } else { return (document.body.offsetWidth - document.body.clientWidth); } } } else { if(window.scrollMaxY > 0 || Yea) { return 18; } else { return 4; } }}function rw_getScrollBarHeight(){ if(Wea) { if(nea) { return 20; } else { if(document.compatMode.equalsTH("CSS1Compat")) { return (document.documentElement.offsetWidth - document.documentElement.clientWidth); } else { return (document.body.offsetWidth - document.body.clientWidth); } } } else { if(window.scrollMaxX > 0) { return 18; } else { return 4; } }}function bra(){ var Zra = null; var xua = null; if(window.getSelection) {  var zua = window.getSelection(); var Ava = null; if(zua.isCollapsed == false) { Zra = window; Ava = zua; } else { if(jha && jha.selectionStart != jha.selectionEnd) { return {frame:window, range:new String(xka + "0" + yka + jha.value.substring( jha.selectionStart, jha.selectionEnd) + xka + "1" + yka)}; } if(top.window.frames.length>0) { var i=0; var IEb = top.window.frames.length; for(i = 0; i<IEb; i++) { var fra = top.window.frames[i].getSelection(); if(fra != null && fra.isCollapsed == false) { Zra = top.window.frames[i]; Ava = fra; break; } } } } if(Ava == null) { return null; } var gra = null; if(Ava.getRangeAt) { gra = Ava.getRangeAt(0); } else { var range = Gva(); if(range != null) { if( Ava.anchorNode == Ava.focusNode && Ava.anchorOffset == Ava.focusOffset) { range = nua(Ava); } else { range.setStart(Ava.anchorNode, Ava.anchorOffset); range.setEnd(Ava.focusNode, Ava.focusOffset); if(range.toString().length == 0) { range.setStart(Ava.focusNode, Ava.focusOffset); range.setEnd(Ava.anchorNode, Ava.anchorOffset); } } gra = range; } } if(gra != null) { var hra = gra.startContainer; var ira = gra.startOffset; var jra = gra.endContainer; var kra = gra.endOffset; if(hra.nodeType != 3) { if(hra.nodeType != 1) { return null; } else { if(ira > 0) { if(hra.hasChildNodes() && hra.childNodes.length > ira) { hra = hra.childNodes[ira]; if(hra.nodeType == 3) { ira = 0; } else { ira = 0; } } } } } if(jra.nodeType != 3) { if(jra.nodeType != 1) { return null; } else { if(kra > 0) { if(jra.hasChildNodes() && jra.childNodes.length >= kra) { jra = jra.childNodes[kra - 1]; if(jra.nodeType == 3) { kra = jra.nodeValue.length; } else { kra = 0; } } } } } xua = new oja(hra, ira, jra, kra); } else { return null; } } else if (document.selection) { var range = document.selection.createRange(); if(range.text.length > 0) { Zra = window; xua = range; } else { if(top.window.frames.length>0) { var i=0; var IEb = top.window.frames.length; for(i = 0; i<IEb; i++) { var QAb = top.window.frames[i]; range = QAb.document.selection.createRange(); if(range.text.length > 0) { Zra = QAb; xua = range; break; } } } } if(xua != null && xua.parentElement() != null && xua.parentElement().tagName.toLowerCase() == "input") { xua = new String(xua.text); } } if(Zra != null && xua != null) { return {frame:Zra, range:xua}; } else { return null; }}function nra(){ var sel = bra(); if(sel != null && sel.range != null && !(sel.range instanceof String)) { if(Wea) { sel.range = lsa(sel.frame.document.body, sel.range); } else if(sel.range instanceof oja) { sel.range = wsa(sel.range); } } return sel;}function ora(){ var obj = bra(); if(obj != null) { var sel = obj.range; if(sel instanceof String) { return sel; } else if(sel instanceof Bka) { return sel.toString(); } else { return range.text; } } return "";}function rra(p_window, p_node){ try { if(window == null || p_node == null || p_node.parentNode == null) { return; } var x = 0; var y = 0; var obj = p_node; if(obj.nodeType == 3) { obj = obj.parentNode; } var pra = obj; var qra = document.body; while(pra != null && pra != qra) { if(pra.tagName.toLowerCase() == "div") { if(pra.scrollHeight > pra.clientHeight || pra.scrollWidth > pra.clientWidth) { var sra; var tra; if(Wea) { sra = obj.offsetTop; tra = obj.offsetLeft; } else { sra = obj.offsetTop - pra.offsetTop; tra = obj.offsetLeft - pra.offsetLeft; } if(pra.scrollTop > sra || (pra.scrollTop + pra.clientHeight) < (sra + 20)) { pra.scrollTop = sra; } if(pra.scrollLeft > tra || (pra.scrollLeft + pra.clientWidth) < (tra + 20)) { pra.scrollLeft = tra; } break; } } pra = pra.parentNode; } while (obj != null) { x += obj.offsetLeft; y += obj.offsetTop; obj = obj.offsetParent; } var ura; var vra; var wra; var xra; var yra = 30; if (p_node.nodeType == 3) { yra = 10 + 5 * p_node.nodeValue.length; if (yra > 60) { yra = 60; } } ura = rw_getScreenOffsetLeft(); vra = rw_getScreenOffsetTop(); if(typeof( p_window.innerWidth ) == 'number') { wra = p_window.innerWidth; xra = p_window.innerHeight; } else if(document.documentElement.clientHeight > 0 && document.documentElement.clientWidth > 0) { wra = document.documentElement.clientWidth; xra = document.documentElement.clientHeight; } else { wra = document.body.clientWidth; xra = document.body.clientHeight; } wra = wra - yra; xra = xra - 20; var zra; var Asa; zra = (x < ura || x > (ura + wra)); Asa = (y < vra || y > (vra + xra)); if (zra || Asa && (x != 0 || y != 0)) { if (x > (ura + wra)) { x = (x + ura) / 2; } if (y > (vra + xra)) { y = (y + vra) / 2; } var Bsa = $g_bMouseSpeech; if($g_bMouseSpeech == true) { $g_bMouseSpeech = false; } p_window.scrollTo((zra?x:ura), (Asa?y:vra)); if(Bsa) { var Csa = setTimeout("$g_bMouseSpeech = true;", 500); } } } catch(ignore) { } g_bDidScroll = false;}function Dsa(){ var str = "" + "rw_getDisplayWidth=" + rw_getDisplayWidth() + "  rw_getDisplayWidthAdjusted=" + rw_getDisplayWidthAdjusted() + "  rw_getDocumentDisplayWidth=" + rw_getDocumentDisplayWidth() + "  rw_getDocumentDisplayWidthAdjusted=" + rw_getDocumentDisplayWidthAdjusted() + "  rw_getDisplayHeight=" + rw_getDisplayHeight() + "  rw_getDisplayHeightAdjusted=" + rw_getDisplayHeightAdjusted() + "  rw_getDocumentDisplayHeight=" + rw_getDocumentDisplayHeight() + "  rw_getDocumentDisplayHeightAdjusted=" + rw_getDocumentDisplayHeightAdjusted() + "  rw_getScreenOffsetLeft=" + rw_getScreenOffsetLeft() + "  rw_getScreenOffsetTop=" + rw_getScreenOffsetTop() + "  rw_getScrollBarWidth=" + rw_getScrollBarWidth() + "  rw_getScrollBarHeight=" + rw_getScrollBarHeight(); Bwa(str);}function Hsa(){ var Esa = bra(); var Fsa = nra(); var Gsa = ora();}function Isa(p_strId){ rra(window, document.getElementById(p_strId));}function rw_getTargetNodeAsCaretIE(evt){ try { var Jsa = Cia(evt); var Ksa = Gva(); Ksa.moveToPoint(Jsa.x, Jsa.y); var Ssa = Gva(); var Msa = Gva(); var Nsa = evt.srcElement.firstChild; while((Nsa != null)) { if(Nsa.nodeType == 3 && Nsa.nodeValue.trimTH().length > 0) { var JDb = Nsa.previousSibling; while(JDb != null && JDb.nodeType != 1) { JDb = JDb.previousSibling; } if(JDb != null) { Ssa.moveToElementText(JDb); Ssa.collapse(false); } else { Ssa.moveToElementText(Nsa.parentNode); } var Psa = Nsa.nextSibling; while(Psa != null && Psa.nodeType != 1) { Psa = Psa.nextSibling; } if(Psa != null) { Msa.moveToElementText(Psa); Ssa.setEndPoint("EndToStart", Msa); } else { Msa.moveToElementText(Nsa.parentNode); Ssa.setEndPoint("EndToEnd", Msa); } if(Ssa.inRange(Ksa)) { var XEb = Xsa(Nsa, Ssa, Ksa); return new THCaret(Nsa, XEb, true); } } Nsa = Nsa.nextSibling; } } catch(exc) { Iva("rw_getTargetNodeAsCaretIE error:"+ exc.message); } return null;}function rw_getTextRangeAsRefPtIE(p_textRange){ try { var Ssa = Gva(); var parentNode = p_textRange.parentElement(); Ssa.moveToElementText(parentNode); var XEb = Xsa(parentNode, Ssa, p_textRange); var Usa = Jka(parentNode, XEb); return Usa; } catch(exc) { Iva("rw_getTextRangeAsRefPtIE error:"+ exc.message); } return null;}function Xsa(p_aNode, p_range, p_evtRange){ try { var XEb = 0; var range = p_range.duplicate(); range.collapse(); range.move("character", 1); range.move("character", -1); var Ysa = 0; var Zsa = 0; while(range.compareEndPoints("EndToEnd", p_evtRange) == -1) { range.moveEnd("character", 1); Ysa = range.text.length; if(Ysa > Zsa) { ++XEb; Zsa = Ysa; } } return XEb; } catch(err) { return 0; }}function lsa(p_body, p_textRange){ var bAb = p_textRange.duplicate(); bAb.collapse(true); var bsa = rw_getTextRangeAsRefPtIE(bAb); bAb = p_textRange.duplicate(); bAb.collapse(false); var csa = rw_getTextRangeAsRefPtIE(bAb); return new Bka(p_body, bsa, csa);}function rw_getAsTextRange(p_body, p_strLeftPath, p_nLeftOffset, p_strRightPath, p_nRightOffset){ var range = Gva(); var ECb = Mra(p_body, p_strLeftPath, -1, p_strRightPath, -1); var eBb = ECb.eBb; var fBb = ECb.fBb; if(eBb != null && fBb != null) { var gsa = eBb.node; if(gsa.nodeType == 3) { var XEb = Vka(gsa); gsa = gsa.parentNode; p_nLeftOffset += XEb; } var isa = fBb.node; if(isa.nodeType == 3) { var XEb = Vka(isa); isa = isa.parentNode; p_nRightOffset += XEb; } range.moveToElementText(gsa); range.collapse(); qsa(range, p_nLeftOffset); range.collapse(false); range.select(); var ksa = Gva(); ksa.moveToElementText(isa); ksa.collapse(); qsa(ksa, p_nRightOffset); ksa.collapse(false); range.setEndPoint("EndToEnd", ksa); } else { range = null; Iva("Error with rw_getAsTextRange."); } return range;}function qsa(p_range, p_nVal){ var IEb; var osa; var psa; IEb = p_range.text.length; while(p_nVal != 0) { psa = p_range.moveEnd("character", p_nVal); if(psa == 0) { return; } osa = p_range.text.length; p_nVal -= (osa - IEb); IEb = osa; }}function vsa(p_caretRange){ if(p_caretRange == null || p_caretRange.eBb == null || p_caretRange.fBb == null) { return null; } return new Bka(p_caretRange.eBb.node.ownerDocument.body, Jka(p_caretRange.eBb.node, p_caretRange.eBb.offset), Jka(p_caretRange.fBb.node, p_caretRange.fBb.offset));}function wsa(p_domRange){ if(p_domRange == null || p_domRange.WBb == null || p_domRange.XBb == null) { return null; } else { return new Bka(p_domRange.body, p_domRange.WBb, p_domRange.XBb); }}function xsa(p_domRange){ if(p_domRange == null || p_domRange.WBb == null || p_domRange.XBb == null) { return null; } else { var eBb = Jra( p_domRange.body, p_domRange.WBb.path, p_domRange.WBb.offset, true); var fBb = Jra( p_domRange.body, p_domRange.XBb.path, p_domRange.XBb.offset, false); if(eBb != null && fBb != null) { return new cja(p_domRange.body, eBb, fBb); } else { return null; } }}function ysa(p_range){ if(p_range == null || p_range.WBb == null || p_range.XBb == null) { return null; } else { var eBb = Jra( p_range.body, p_range.WBb.path, p_range.WBb.offset, true); var fBb = Jra( p_range.body, p_range.XBb.path, p_range.XBb.offset, false); if(eBb != null && fBb != null) { return new cja(eBb, fBb); } else { return null; } }}var zsa = null;var Ata = null;function Dta(p_nPos){ var flash = null; var Cta; if (window.document.WebToSpeech) { Cta = window.document; } else {  Cta = window; } switch(p_nPos) { case 1: flash = Cta.SWA1; break; case 2: flash = Cta.SWA2; break; case 3: flash = Cta.SWA3; break; case 4: flash = Cta.SWA4; break; case 5: flash = Cta.SWA5; break; case 6: flash = Cta.SWA6; break; case 7: flash = Cta.SWA7; break; case 8: flash = Cta.SWA8; break; case 9: flash = Cta.SWA9; break; case 10: flash = Cta.SWA10; break; default: flash = Cta.SWA1; } return flash;}function $rw_event_click(event, i){ return $rw_event_hover(event, i);}function $rw_event_hover(event, i){ if(!sda) { return; } if(!cca) { if(Fca) { throw "The page has not fully loaded, click and speak is not available yet."; } else { Bwa("The page has not fully loaded, click and speak is not available yet."); } return; } $g_bMouseSpeech = !$g_bMouseSpeech; if(i > -1) { g_toggleIcons[i][8] = !g_toggleIcons[i][8]; if(Yea) { document.images[g_toggleIcons[i][0]].src = g_toggleIcons[i][zea].src; } else { Ufa(g_toggleIcons[i][0], "toggleOn", true); } } if(pea && $g_bMouseSpeech) { if(Yca > -1 && typeof($rw_event_sticky) != "undefined") { $rw_event_sticky(event, Yca); var Eta = Dea; Dea = 0; rw_mouseOffIcon("sticky"); Dea = Eta; } } if(!$g_bMouseSpeech) { $rw_event_stop(); Lia(false); } else { Lia(true); } try { var flash = Dta(eea); if(flash != null) { flash.setClickToSpeakFlag($g_bMouseSpeech); } } catch(err) { Iva("call to flash click to speak failed."); }}function $rw_event_play(){ if(sda) { try { if(g_speakableTextAreaTarget != null) { if(g_nSpeakableTextAreaTimerId != 0) { clearTimeout(g_nSpeakableTextAreaTimerId); g_nSpeakableTextAreaTimerId = 0; if(g_speakableTextAreaTarget == null) { $rw_event_play(); return; } } var Gta = g_speakableTextAreaTarget; Gta.focus(); g_speakableTextAreaTarget = null; var target = new THHoverTarget(document.body, kqa(Gta), null); rw_speakHoverTarget(target); } else if(gea) { var flash = Dta(eea); hea = true; flash.clickOnPlay(); flash.focus(); } else { var Ita = nra(); if(Ita != null && Ita.range != null) { var wya = Ita.range; if(wya instanceof String) { rw_speakHoverTarget(wya); } else { if(Wea) { var range = yua(); range.collapse(); range.select(); } var target = new THHoverTarget(null, null, wya); rw_speakHoverTarget(target); } } } } catch(err) { Iva("Caught error " + err); } }}function $rw_event_funplay(){ $rw_event_play();}var g_tmpLastTargetForCache = null;function $rw_speakText(txt){ Lta(txt);}function Lta(p_strText){ if(typeof(eba_no_flash) == "boolean" && eba_no_flash == true) { THSendSocketMessage("THStart" + p_strText + "THEnd"); return; } if(p_strText == null && p_strText.length == 0) { $rw_doSelection(-1); return; } if(!sda) { $rw_doSelection(-1); return; } try { var flash = rw_getWebToSpeech(); if(flash != null) { Lia(true); $rw_doSelection(0); if(Gca) { yEb = $rw_getFlashVersion(); if(yEb > 141) { flash.startSpeechFromCache(Rya(p_strText), p_strText); } else { flash.startSpeechFromCache(Rya(p_strText)); } } else if(Fca) { g_tmpLastTargetForCache = g_lastTarget; g_lastTarget = null; var Jya = Fya(p_strText); var Kya = Sya(); if(1==0 ) { flash.startSpeechCacheGenerationWithPronunciation(txt, pba, "" + Bca, Kya, Jya, rba, sba, tba ); } else { flash.startSpeechCacheGeneration(p_strText, pba, "" + Bca, Kya, Jya); } var mBb = Rya(p_strText); uta.push("g_lastTarget = g_tmpLastTargetForCache; g_nLastNodePosition = 0;"+ "var flash = rw_getWebToSpeech(); flash.startSpeechFromCacheGenerator('" + mBb + "');"); } else { flash.startSpeech(p_strText); } }  } catch(err) { Iva("Caught error " + err); }}function Rta(p_strText, p_strUrl){ if(p_strText == null && p_strText.length == 0) { $rw_doSelection(-1); return; } if(!sda) { $rw_doSelection(-1); return; } try { var flash = rw_getWebToSpeech(); if(flash != null) { Lia(true); $rw_doSelection(0); flash.startSpeechFromFile(p_strText, p_strUrl); } } catch(err) { Iva("Caught error " + err); }}function Tta(p_strText){ if(p_strText == null && p_strText.length == 0) { $rw_doSelection(-1); return; } if(!sda) { $rw_doSelection(-1); return; } try { var flash = rw_getWebToSpeech(); if(flash != null) { Lia(true); $rw_doSelection(0); flash.startHighlighting(p_strText); } } catch(err) { Iva("Caught error " + err); }}function $rw_event_pause(){ if($rw_isSpeaking()) { var Uta = (new Date).getTime(); if((Uta - mca) < tca ) { return; } g_nNavDoubleClick = Uta; var flash = rw_getWebToSpeech(); if(flash != null) { if(flash.isPaused()) { flash.resume(); } else { flash.pause(); } } }}function $rw_event_funstop(){ $rw_event_stop();}function $rw_event_stop(){ if(!sda) { return; } try { if(hca) { Hga(); } uta.length = 0; gca = null; if(yla > 0) { clearTimeout(yla); yla = 0; } wla.length = 0; if(ula) { setTimeout("$rw_event_stop()", 100); return; } if(Bla > 0) { clearTimeout(Bla); Bla = 0; } if(Cla > 0) { clearTimeout(Cla); Cla = 0; } if(gea) { var flash = Dta(eea); hea = true; flash.clickOnStop(); flash.focus(); } else { Lia(false); var flash = rw_getWebToSpeech(); if(flash != null) { var RCb = flash.stopSpeechAlt(); } } zka = null; } catch(err) { Iva("Caught error " + err); }}function $rw_event_stop_limited(){ if(!sda) { return; } try { uta.length = 0; gca = null; if(gea) { var flash = Dta(eea); hea = true; flash.clickOnStop(); flash.focus(); } else { Lia(false); var flash = rw_getWebToSpeech(); if(flash != null) { var RCb = flash.stopSpeechAlt(); } } } catch(err) { Iva("Caught error " + err); }}function $rw_event_mp3(){ try { var sEb = qta(); sEb = sEb.trimTH(); if (sEb.length > 0) { var flash = rw_getWebToSpeech(); if(flash != null) { var eta = flash.getMP3File(sEb); } } } catch(err) { Iva("Caught error " + err); }}function $rw_mp3reply(txt){ try { if(txt.length > 0) { var fta = "Save Target As..."; if(!Wea) { if(Yea) { fta = "Download Linked File"; } else { fta = "Save Link As..."; } } var d = new Date(); var YFb = (d.getTime() - 1164713747000); txt = "<br></br>Right click on the link below and select " + "'" + fta + "' to save the mp3 file to your hard drive.<p></p>" + "<a type='application/octet-stream' href=\"" + txt + "\">speech" + YFb + ".mp3</a><p></p>"; Yia(Oea, txt); bia(true, Oea); } } catch(err) { Iva("Caught error " + err); }}function $rw_event_spell(event, i){ try { if(gea) { g_toggleIcons[i][8] = !g_toggleIcons[i][8]; if(Yea) { document.images[g_toggleIcons[i][0]].src = g_toggleIcons[i][zea].src; } else { Ufa(g_toggleIcons[i][0], "toggleOn", true); } var flash = Dta(eea); hea = true; flash.setSpelling(g_toggleIcons[i][8]); flash.focus(); } } catch(err) { Iva(err.message); }}function $rw_event_homophone(event, i){ try { if(gea) { g_toggleIcons[i][8] = !g_toggleIcons[i][8]; if(Yea) { document.images[g_toggleIcons[i][0]].src = g_toggleIcons[i][zea].src; } else { Ufa(g_toggleIcons[i][0], "toggleOn", true); } var flash = Dta(eea); hea = true; flash.setHomophone(g_toggleIcons[i][8]); flash.focus(); } } catch(err) { Iva(err.message); }}function $rw_event_pred(event, i){ try { if(gea) { g_toggleIcons[i][8] = !g_toggleIcons[i][8]; if(Yea) { document.images[g_toggleIcons[i][0]].src = g_toggleIcons[i][zea].src; } else { Ufa(g_toggleIcons[i][0], "toggleOn", true); } var flash = Dta(eea); hea = true; flash.setPrediction(g_toggleIcons[i][8]); flash.focus(); } } catch(err) { Iva(err.message); }}function $rw_event_submit(){ try { Cea = true; lm_doSubmit(); Cea = false; } catch(err) { Iva("Caught error " + err); }}var kta = "setWarning";function setWarning(){ $rw_lexiSubmitEvent();}function $rw_lexiSubmitEvent(){ Cea = true;}function mta(){ var txt = ''; if (window.getSelection) {  if (window.getSelection() != null && !window.getSelection().isCollapsed) { return true; } if (top.window.frames.length > 0) { var i = 0; var IEb = top.window.frames.length; for (i = 0; i < IEb; i++) { if (top.window.frames[i].getSelection() != null && !top.window.frames[i].getSelection().isCollapsed) { return true; } } } } else if (document.selection) { var range = document.selection.createRange(); if (range.text.length > 0) { return true; } if (top.window.frames.length > 0) { var i = 0; var IEb = top.window.frames.length; for (i = 0; i < IEb; i++) { var QAb = top.window.frames[i]; range = QAb.document.selection.createRange(); if (range.text != null && range.text.length > 0) { return true; } } } } return false;}function qta(){ var txt = ''; if (window.getSelection) { txt = new String(window.getSelection()); } else if (document.getSelection) { txt = new String(document.getSelection()); } else if (document.selection) { var range = document.selection.createRange(); if (range.text == null || range.text.length == 0) { if (top.window.frames.length > 0) { var i = 0; var IEb = top.window.frames.length; for (i = 0; i < IEb; i++) { var QAb = top.window.frames[i]; range = QAb.document.selection.createRange(); if (range.text != null && range.text.length > 0) { break; } } } } txt = range.text; } else { return; } return txt;}var g_nLastNodePosition = -1;var uta = new Array();var vta = false;function $rw_doSelection(p_nPosition){ if (p_nPosition < 0) { Lia(false); Mia(false); if(hca) { Hga(); } } else { Mia(true); } if(g_lastTarget && g_lastTarget.isRange()) { if(p_nPosition != g_nLastNodePosition) { if (p_nPosition == -1 || p_nPosition == -2) { if (g_nLastNodePosition > -1 && g_lastTarget.Dua != null) { try { var Dua = g_lastTarget.Dua; var IEb = Dua.length; if (g_nLastNodePosition < IEb) { var wya = Dua[g_nLastNodePosition].range; if(Wea && vta) { var Mua = rw_getAsTextRange(wya.body, wya.WBb.path, wya.WBb.offset, wya.XBb.path, wya.XBb.offset); if(Mua != null) { Mua.collapse();Mua.select(); } } else { var ECb = Mra(wya.body, wya.WBb.path, wya.WBb.offset, wya.XBb.path, wya.XBb.offset); var eBb = ECb.eBb; var fBb = ECb.fBb; if(eBb != null && fBb != null) { rw_removeSpeechHighlight(twa(eBb, fBb), true); } else { Iva("Cannot determine valid range to remove speech highlight from. " + eBb + " " + fBb); } } } } catch(err) { Iva("$rw_doSelection:clear last speech:" + err.toString()); } } g_nLastNodePosition = -1; try { g_lastTarget.unhighlightRange(); } catch(err){Iva("$rw_doSelection:unhighlightRange:" + err.message);} } else if(g_lastTarget.Dua != null) { if (g_nLastNodePosition == p_nPosition) { return; } var Dua = g_lastTarget.Dua; var IEb = Dua.length; try { if (g_nLastNodePosition > -1 && g_nLastNodePosition < IEb) { var wya = Dua[g_nLastNodePosition].range; if(Wea && vta) { var Mua = rw_getAsTextRange(wya.body, wya.WBb.path, wya.WBb.offset, wya.XBb.path, wya.XBb.offset); if(Mua != null) { Mua.collapse();Mua.select(); } } else { var ECb = Mra(wya.body, wya.WBb.path, wya.WBb.offset, wya.XBb.path, wya.XBb.offset); var eBb = ECb.eBb; var fBb = ECb.fBb; if(eBb != null && fBb != null) { rw_removeSpeechHighlight(twa(eBb, fBb), true); } else { Iva("Cannot determine valid range to remove speech highlight from. " + eBb + " " + fBb); } } } } catch(err) { Iva(" **** " + err.toString()); } if (p_nPosition < 0 || p_nPosition >= IEb) { return; } g_nLastNodePosition = p_nPosition; var wya = Dua[p_nPosition].range; var SEb = Dua[p_nPosition].word; try { if(Wea && vta) { var Mua = rw_getAsTextRange(wya.body, wya.WBb.path, wya.WBb.offset, wya.XBb.path, wya.XBb.offset); if(wya != null) { Mua.select(); } } else { var ECb = Mra(wya.body, wya.WBb.path, wya.WBb.offset, wya.XBb.path, wya.XBb.offset); var eBb = ECb.eBb; var fBb = ECb.fBb; if(eBb != null && fBb != null) { var result = rw_setSpeechRangeImpl(eBb.node, eBb.offset, fBb.node, fBb.offset, "csp"); if(result != null && result.node != null) { rra(window, result.node); } else { rra(window, eBb.node); } } else { Iva("Cannot determine valid range to add speech highlight from. " + eBb + " " + fBb); } } } catch(err) { Iva("error with highlight speech range in rw_doSelection:" + err.message); } } } } if (p_nPosition == -1 || p_nPosition == -2) { g_nLastNodePosition = -1; g_lastTarget = null; if(p_nPosition == -1) { if(uta.length > 0) { var Rua = uta.shift(); eval(Rua); } } }}function $displayMe(txt){ alert(txt);}function Vua(a_str_windowURL, a_str_windowName, a_int_windowWidth, a_int_windowHeight, a_bool_scrollbars, a_bool_resizable, a_bool_menubar, a_bool_toolbar, a_bool_addressbar, a_bool_statusbar, a_bool_fullscreen){ var Sua = (screen.width - a_int_windowWidth) / 2; var Tua = (screen.height - a_int_windowHeight) / 2; var Uua = 'height=' + a_int_windowHeight + ',width=' + a_int_windowWidth + ',top=' + Tua + ',left=' + Sua + ',scrollbars=' + a_bool_scrollbars + ',resizable=' + a_bool_resizable + ',menubar=' + a_bool_menubar + ',toolbar=' + a_bool_toolbar + ',location=' + a_bool_addressbar + ',statusbar=' + a_bool_statusbar + ',fullscreen=' + a_bool_fullscreen + ''; var Wua = window.open(a_str_windowURL, a_str_windowName, Uua); if (parseInt(navigator.appVersion) >= 4) { Wua.window.focus(); }}function Yua(p_name){ var start = document.cookie.indexOf(p_name + "="); var len = start + p_name.length + 1; if (( !start ) && ( p_name != document.cookie.substring(0, p_name.length) )) { return null; } if (start == -1) { return null; } var end = document.cookie.indexOf(";", len); if (end == -1) { end = document.cookie.length; } return unescape(document.cookie.substring(len, end));}function bua(p_name, p_value, p_expires, p_path, p_domain, p_secure){ var Zua = new Date(); Zua.setTime(Zua.getTime()); if (p_expires) { p_expires = p_expires * 1000 * 60 * 60 * 24; } var aua = new Date(Zua.getTime() + (p_expires)); document.cookie = p_name + "=" + escape(p_value) + ( ( p_expires ) ? ";expires=" + aua.toGMTString() : "" ) + ( ( p_path ) ? ";path=" + p_path : "" ) + ( ( p_domain ) ? ";domain=" + p_domain : "" ) + ( ( p_secure ) ? ";secure" : "" );}function cua(p_name, p_path, p_domain){ if (Yua(p_name)) { document.cookie = p_name + "=" + ( ( p_path ) ? ";path=" + p_path : "") + ( ( p_domain ) ? ";domain=" + p_domain : "" ) + ";expires=Thu, 01-Jan-1970 00:00:01 GMT"; }}function fua(){ if(FBb()) { var SEb = kAb(); Yia(Sea, SEb); bia(true, Sea); var eua = hia("rwcollatewrapper"); var gua = document.getElementById("rwCollect"); if(gua != null) { if(parseInt(eua.scrollHeight) >= 380) {  var rwTextCollect = hia("rwTextCollect"); rwTextCollect.style.height = (360); } else {  var rwTextCollect = hia("rwTextCollect"); rwTextCollect.style.height = (eua.scrollHeight + 24); } }  }}function $rw_event_axendolink(event){ document.location = "http://www.browsealoud.info";}function dis(node){ Bwa(node.tagName + "|" + node.nodeValue + "|" + kqa(node));}function $rw_event_test(event){ }function mua(p_node){ var doc = p_node.ownerDocument; var Zxa = p_node.parentNode; if(Zxa != null && p_node.nodeType == 3) { while(p_node.previousSibling != null && p_node.previousSibling.nodeType == 3) { var txt = p_node.previousSibling.nodeValue + p_node.nodeValue; var lxa = doc.createTextNode(txt); Zxa.removeChild(p_node.previousSibling); Zxa.replaceChild(lxa, p_node); p_node = lxa; } while(p_node.nextSibling != null && p_node.nextSibling.nodeType == 3) { var txt = p_node.nodeValue + p_node.nextSibling.nodeValue; var lxa = doc.createTextNode(txt); Zxa.removeChild(p_node.nextSibling); Zxa.replaceChild(lxa, p_node); p_node = lxa; } } return p_node;}function nua(p_sel){ try { var txt = p_sel + ""; txt = txt.trimTH(); p_sel.collapseToStart(); var ZBb = p_sel.anchorNode; var Lxa = p_sel.anchorOffset; if(ZBb.nodeType != 3) { ZBb = Zoa(ZBb, false, null); Lxa = 0; } else if(Lxa == ZBb.nodeValue.length) { ZBb = Zoa(ZBb, false, null); Lxa = 0; } if(ZBb != null && ZBb.nodeType == 3) { var qua = ZBb.nodeValue.substring(Lxa); var rua = qua.trimStartTH(); while(qua.length > rua.length) { if(rua.length == 0) { ZBb = Zoa(ZBb, false, null); Lxa = 0; if(ZBb == null || ZBb.nodeType != 3) { break; } } else { Lxa += qua.length - rua.length; } qua = ZBb.nodeValue.substring(Lxa); rua = qua.trimStartTH(); } } var range = Gva(); if(ZBb == null) { range.setStart(p_sel.anchorNode, p_sel.anchorOffset); range.setEnd(p_sel.anchorNode, p_sel.anchorOffset); } else { if(ZBb.nodeType != 3) { range = wua(ZBb, Lxa, txt); } else { if((Lxa + txt.length) < ZBb.nodeValue.length) { range.setStart(ZBb, Lxa); range.setEnd(ZBb, Lxa + txt.length); } else { range = wua(ZBb, Lxa, txt); } } } return range; } catch(ignore) { var range = Gva(); range.setStart(p_sel.anchorNode, p_sel.anchorOffset); range.setEnd(p_sel.anchorNode, p_sel.anchorOffset); return range; }}function wua(p_startNode, p_nOffset, p_txt){ var range = Gva(); range.setStart(p_startNode, p_nOffset); range.setEnd(p_startNode, p_nOffset); var IEb = 0; var tua = p_txt.length + p_nOffset; var gBb = p_startNode; while(gBb != null && IEb < tua) { if(gBb.nodeType == 3) { var txt = gBb.nodeValue; IEb += txt.length; } if(IEb < tua) { gBb = Zoa(gBb, false, null); } else { var vua = IEb - tua; range.setEnd(gBb, gBb.nodeValue.length - vua); } } return range;}function yua(){ var xua = null; if(window.getSelection) {  var zua = window.getSelection(); var Ava = null; if(zua.isCollapsed == false) { Ava = zua; } else { if(top.window.frames.length > 0) { var i = 0; var IEb = top.window.frames.length; for(i = 0; i < IEb; i++) { if(top.window.frames[i].getSelection() != null && top.window.frames[i].getSelection().isCollapsed == false) { Ava = top.window.frames[i].getSelection(); break; } } } } if(Ava == null) { return null; } xua = Ava; } else if(document.selection) { var range = document.selection.createRange(); if(range.text.length > 0) { Zra = window; xua = range; } else { if(top.window.frames.length > 0) { var i = 0; var IEb = top.window.frames.length; for(i = 0; i < IEb; i++) { var QAb = top.window.frames[i]; range = QAb.document.selection.createRange(); if(range.text.length > 0) { Zra = QAb; xua = range; break; } } } } } return xua;}function Eva(){ var txt = ""; if(document.body.createTextRange) { var range = document.body.createTextRange(); range.expand("textedit"); txt = range.text; } else if(document.createRange) { var range = document.createRange(); range.setStartBefore(document.body); range.setEndAfter(document.body); txt = range.toString(); } return txt;}function Fva(p_node){ if(p_node.innerText) { return p_node.innerText; } else if(p_node.textContent) { return p_node.textContent; } else { return ""; }}function Gva(){ if(document.body.createTextRange) { return document.body.createTextRange(); } else if(document.createRange) { return document.createRange(); } else { return null; }}function Hva(p_node){ if(p_node.document) { return p_node.document.body; } else { return p_node.ownerDocument.body; }}function Iva(qka){ if(window.console && window.console.log) { window.console.log(qka); } else if(typeof(dump) != 'undefined') { dump(qka + "\n"); }}function Jva(txt){ if(txt == null) { return ""; } txt = txt.trimTH(); var Kva = ""; var i = 0; var n = txt.length; var Lva = -1; var Mva = -1; for(i = 0; i < n; i++) { var yEb = txt.charCodeAt(i); if((yEb > 64 && yEb < 91) || (yEb > 96 && yEb < 123 )) { if(Lva == -1) { Lva = i; } } else if(yEb == 39) { if(i < (n - 1)) { nValNext = txt.charCodeAt(i + 1); if((nValNext > 64 && nValNext < 91) || (nValNext > 96 && nValNext < 123 )) { ++i; } else { Mva = i; break; } } else { Mva = i; break; } } else { Mva = i; break; } } if(Lva > -1) { if(Mva > -1) { Kva = txt.substring(Lva, Mva); } else { Kva = txt.substring(Lva); } } return Kva;}function Ova(p_nCode){ return (p_nCode > 64 && p_nCode < 91) || (p_nCode > 96 && p_nCode < 123);}function Pva(p_nCode){ return (p_nCode > 47 && p_nCode < 58);}function Qva(p_nCode){ return (p_nCode > 47 && p_nCode < 58) || (p_nCode > 63 && p_nCode < 91) || (p_nCode > 94 && p_nCode < 123);}function Vva(p_txt){ var Rva = false; if (p_txt.length > 0) { if (p_txt.length > 2) { Rva = true; } if (p_txt.length == 2) { var Uva = p_txt.charCodeAt(0); var Tva = p_txt.charCodeAt(1); if (Uva > 32 && Uva < 127 && Tva > 32 && Tva < 127) { Rva = true; } } else { var Uva = p_txt.charCodeAt(0); if (Uva > 32 && Uva < 127) { Rva = true; } } } return Rva;}function Xva(txt){ if(txt == null) { return false; } for(var i = 0; i < txt.length; i++) { var yEb = txt.charCodeAt(i); if(yEb == 39 || (yEb > 47 && yEb < 58) || (yEb > 64 && yEb < 91) || yEb == 96 || (yEb > 96 && yEb < 123)) { return true; } } return false;}function ava(p_strPhrase){ if(p_strPhrase == null || p_strPhrase.length == 0) { return p_strPhrase; } var IEb = p_strPhrase.length; for(var i = 0; i < IEb; i++) { var yEb = p_strPhrase.charCodeAt(i); if(! (yEb == 39 || yEb == 44 || yEb == 46 || (yEb > 47 && yEb < 58) || (yEb > 63 && yEb < 91) || (yEb > 94 && yEb < 123))) { p_strPhrase = p_strPhrase.replace(p_strPhrase.charAt(i), ' '); } } return p_strPhrase.trimTH();}function bva(range){ var txt = ""; if(range.text) { txt = range.text; } else { txt = range.toString(); } return txt;}function cva(){ var sel = yua(); if(sel == null) { return; } if(sel.collapseToStart) { sel.collapseToStart(); } else if(sel.execCommand) { sel.execCommand("UnSelect", false, null); }}function hva(p_node){ if(p_node != null) { if(Wea) { var range = Gva(); range.moveToElementText(p_node) ; range.select(); } else { var gBb = ena(p_node, false, null); if(gBb != null) { var range = new oja(p_node, 0, gBb, 0); iva(range); } } }}function iva(p_range){ if(Wea) { p_range.select(); } else { var start = p_range.FCb; var end = p_range.GCb; if(!Yea) { var VBb = window.getSelection(); VBb.collapse(start.node, start.offset); VBb.extend(end.node, end.offset); } else { window.getSelection().setBaseAndExtent(start.node, start.offset, end.node, end.offset); } }}function jva(p_char){ return (p_char.search(/[\s\xa0]/) > -1);}function kva(obj){ var lva = obj + "  "; for(prop in obj) { lva += prop + "  " + " | "; } alert(lva);}function mva(obj){ var lva = obj + "  "; for(prop in obj) { lva += prop + "  " + " | "; } return lva;}function $rw_inputFieldFilter(p_str){ if(p_str == null || p_str.length == 0) { return p_str; } var i; var IEb = p_str.length; for(i = IEb - 1; i >= 0; i--) { var c = p_str.charCodeAt(i); if((c < 44 && c != 39) || c == 47 || (c > 57 && c < 65) || (c > 90 && c < 97 && c != 95) || (c > 122 && c < 128)) { p_str = p_str.substring(0, i) + p_str.substr(i + 1); } } return p_str;}function $rw_handleFieldInput(p_obj){ var pre = p_obj.value; var ova = $rw_inputFieldFilter(pre); if(pre != ova) { p_obj.value = ova; }}function $rw_handleFieldKeyDownInput(evt){ if(!evt.ctrlKey) { var c = evt.keyCode; if((c > 32 && c < 44 && c != 39) || c == 47 || (c > 57 && c < 65) || (c > 90 && c < 97 && c != 95) || (c > 122 && c < 128)) { return false; } } return true;}function qva(p_strText){ p_strText = p_strText.trimTH(); var IEb = p_strText.length; var i; for(i=0; i<IEb; i++) { var c = p_strText.charCodeAt(i); if((c > 47 && c < 58) || (c >63 && c<91) || (c>96 && c<123) || c==38 || c==39) { return p_strText; } } return "";}function tva(p_strWord){ var IEb = p_strWord.length; var i = 0; var yEb; for(i=0; i<IEb; i++) { yEb = p_strWord.charCodeAt(i); if((yEb > 63 && yEb < 91) || (yEb > 96 && yEb < 123) || (yEb > 127 && yEb != 160)) { return true; } else if(yEb > 46 && yEb < 58) { return true; } else if((yEb > 35 && yEb < 39) || yEb == 43 || yEb == 61) { return true; } else if(yEb == 39 || yEb == 42 || yEb == 45 || yEb == 92 || (yEb > 93 && yEb < 97)) { if(zba != null) { if(zba != "VW Kate") { return true; } } else { if(pba != "VW Kate") { return true; } } } } return false;}function Awa(p_thCaretRange){ try { if(p_thCaretRange == null || p_thCaretRange.eBb == null || p_thCaretRange.fBb == null) { return false; } var eBb = p_thCaretRange.eBb; var fBb = p_thCaretRange.fBb; var wva = eBb.node; var xva = fBb.node; var yva = false; var wxa = wva; var txt = ""; while(wxa != null) { yva = ema(wxa); if(yva || wxa.nodeType == 3) { var tmp = upa(wxa); if(tmp != null && tmp != "") { if(wxa == xva) { tmp = tmp.substring(0, fBb.offset); } if(wxa == wva) { tmp = tmp.substring(eBb.offset); } if(tva(tmp)) { return true; } } } if(yva) { wxa = ena(wxa, false, xva); } else { wxa = Xna(wxa, false, xva); } } } catch(err) { } return false;}function d2h(d){ return d.toString(16);}function h2d(h){ return parseInt(h,16);}function Bwa(p_str){ if(dba) { alert(p_str); } else { Iva(p_str); }}function $rw_uriEncode(p_str){ return encodeURIComponent(p_str);}function Cwa(Nsa){ var txt = ""; if (Nsa.nodeType == 3) { txt = Nsa.nodeValue; } else if (Nsa.nodeType == 1) { var Dwa = Nsa.firstChild; while (Dwa != null) { if (Dwa.nodeType == 3) { txt += Dwa.nodeValue; } else if (Dwa.nodeType == 1) { txt += Cwa(Dwa); } Dwa = Dwa.nextSibling; } } return txt;};function Hwa(Nsa){ var Ewa = null; var Fwa = Nsa.tagName.toLowerCase(); var uDb = kqa(Nsa); if (Fwa == "input") { var Iwa = Nsa.getAttribute("type"); if (Iwa != null) { Iwa = Iwa.toLowerCase(); } var Pwa = ""; if (Iwa == null || Iwa.equalsTH("") || Iwa.equalsTH("text")) { Pwa = Nsa.value; } else if (Iwa.equalsTH("password")) { Pwa = "Masked password field"; } else if (Iwa.equalsTH("image")) { Pwa = ""; } else if (Iwa.equalsTH("button") || Iwa.equalsTH("submit") || Iwa.equalsTH("reset")) { Pwa = Nsa.getAttribute("value"); } if (Pwa.equalsTH("") == false) { Ewa = "form:" + uDb + ";" + Pwa; } } else if (Fwa == "select") { var Pwa = ""; var Lwa = Nsa.selectedIndex; var Mwa = ""; for (var yAb = 0; yAb < Nsa.options.length; yAb++) { Mwa += Nsa.options[yAb].text + " "; } if (Mwa.equalsTH("") == false) { if (Lwa > -1) { Pwa = Nsa.options[Lwa].text; Pwa += " selected from the list " + Mwa; } else { Pwa = "No selection from the list " + Mwa; } Ewa = "form" + uDb + ";" + Pwa; } } else if (Fwa == "textarea") { var Pwa = Nsa.value; Ewa = "form" + uDb + ";" + Pwa; } else if (Fwa == "option") { var Pwa = Nsa.value; Ewa = "form" + uDb + ";" + Pwa; } return Ewa;}var Qwa = null;function Rwa(Qwa){ Qwa.setAttribute("onMouseOver", "top.doMouseOverTH(event)");}function Swa(Nsa){ hwa(); if (document.getElementsByTagName("frameset").item(0) != null) { var Twa = document.getElementsByTagName("frameset").item(0); Twa.removeAttribute("thSafariReaderDetails"); Twa.removeAttribute("thSafariReaderAutoDetails"); Twa.removeAttribute("thSafariReaderFlag"); } else { document.body.removeAttribute("thSafariReaderDetails"); document.body.removeAttribute("thSafariReaderAutoDetails"); document.body.removeAttribute("thSafariReaderFlag"); }};function Uwa(theFrameSet, strLoc){ var doc = theFrameSet.document; if (doc != null) { var bod = doc.body; if (bod != null) { Ywa(theFrameSet, strLoc + "."); } } var cwa; var size = theFrameSet.frames.length; for (var i = 0; i < size; i += 1) { var jwa = theFrameSet.frames[i]; cwa = strLoc + ".frames[" + i + "]"; Uwa(jwa, cwa); }};function Ywa(aWindow, baseLoc){ aWindow.String.prototype.trimTH = function() { return this.replace(/^[\s\xA0]+/, "").replace(/[\s\xA0]+$/, ""); }; aWindow.String.prototype.equalsTH = function(s) { if (this.length != s.length) { return false; } for (var i = 0; i < this.length; i += 1) { if (this.charAt(i) != s.charAt(i)) { return false; } } return true; }; var bod = aWindow.document.body; var Zwa = bod.getAttribute("onMouseOver"); var awa = bod.getAttribute("onClick"); var bwa = bod.getAttribute("onUnload"); if (typeof Zwa == 'function') { aWindow.onmouseover = function(event) { Zwa(event); top.doMouseOverTH(event); }; } else { aWindow.onmouseover = function(event) { top.doMouseOverTH(event); }; } if (typeof awa == 'function') { aWindow.onclick = function(event) { awa(event); top.doMouseClickTH(event); }; } else { aWindow.onclick = function(event) { top.doMouseClickTH(event); }; } if (typeof bwa == 'function') { aWindow.onunload = function() { bwa(); top.Swa(); }; } else { aWindow.onunload = function() { top.Swa(); }; } var cwa = baseLoc + "document.body"; bod.setAttribute("body_loc", cwa);};function fwa(obj){ var dwa = 0; if (obj) { if (obj.offsetParent) { while (obj.offsetParent) { dwa += obj.offsetLeft; obj = obj.offsetParent; if (obj.offsetParent == null) { dwa += obj.offsetLeft; } } } else if (obj.offsetLeft) { dwa += obj.offsetLeft; } } return dwa;};function gwa(obj){ var ewa = 0; if (obj) { if (obj.offsetParent) { while (obj.offsetParent) { ewa += obj.offsetTop; obj = obj.offsetParent; if (obj.offsetParent == null) { ewa += obj.offsetTop; } } } else if (obj.offsetTop) { ewa += obj.offsetTop; } } return ewa;};function hwa(){ setSpeechDetailsTH(""); setSpeechAutoDetailsTH(""); if (document.getElementsByTagName("frameset").item(0) != null) { kwa(top); } else { var bod = document.body; lwa(bod); }};function kwa(theFrameSet){ var size = theFrameSet.frames.length; for (var i = 0; i < size; i += 1) { var jwa = theFrameSet.frames[i]; if (jwa.length == 0) { lwa(jwa.document.body); jwa.String.prototype.trimTH = function() { return this.replace(/^[\s\xA0]+/, "").replace(/[\s\xA0]+$/, ""); }; jwa.String.prototype.equalsTH = function(s) { if (this.length != s.length) { return false; } for (i = 0; i < this.length; i += 1) { if (this.charAt(i) != s.charAt(i)) { return false; } } return true; }; } else { Uwa(jwa); } }};function lwa(Nsa){ if (Nsa == null) { return; } if (Nsa.nodeType == 1) { if (Nsa.tagName.toLowerCase() == ("font") && Nsa.getAttribute("started") == "1") { var txt = Cwa(Nsa); var doc = Nsa.ownerDocument; var lxa = doc.createTextNode(txt); Nsa.parentNode.replaceChild(lxa, Nsa); } else { var nwa = Nsa.firstChild; while (nwa != null) { var owa = nwa; nwa = nwa.nextSibling; lwa(owa); } } }};function aa(a){};function pwa(str){ var nn = 150; if (str.length > nn) { while (str.length > nn) { var sss = str.substring(0, nn); str = str.substring(nn); Iva(sss); } } else { Iva(str); }};String.prototype.trimTH = function(){ return this.replace(/^[\s\xA0]+/, "").replace(/[\s\xA0]+$/, "");};String.prototype.trimStartTH = function(){ return this.replace(/^[\s\xA0]+/, "");};String.prototype.trimEndTH = function(){ return this.replace(/[\s\xA0]+$/, "");};String.prototype.equalsTH = function(s){ if (this.length != s.length) { return false; } for (var i = 0; i < this.length; i += 1) { if (this.charAt(i) != s.charAt(i)) { return false; } } return true;};function twa(p_startCaret, p_endCaret){ var arr = new Array(); var ZBb = p_startCaret.node; var aBb = p_endCaret.node; if(ZBb.nodeType != 3) { ZBb = fna(ZBb, false); if(ZBb == null) { return arr; } } if(ZBb == aBb) { if(ZBb.nodeType == 3) { var txt = ZBb.nodeValue; if(txt.length > 0 && p_startCaret.offset < txt.length && p_endCaret.offset > 0 && p_endCaret.offset > p_startCaret.offset) { arr.push(ZBb); } } } else { if(ZBb.nodeType == 3) { var txt = ZBb.nodeValue; if(txt.length > 0 && p_startCaret.offset < txt.length) { arr.push(ZBb); } } var gBb = boa(ZBb, false, aBb, true); while (gBb != null) { if (gBb == aBb) { if(aBb.nodeType == 3) { var txt = aBb.nodeValue; if(txt.length > 0 && p_endCaret.offset > 0) { arr.push(aBb); } } break; } else { arr.push(gBb); } gBb = boa(gBb, false, aBb, true); } } return arr;}function uwa(p_range){ p_range.refresh(); var arr = twa(p_range.FCb, p_range.GCb); var str = ""; for (var i = 0; i < arr.length; i++) { str += arr[i].nodeValue; } return str;}var vwa = false;function rw_setHighlight(p_startNode, p_startOffset, p_endNode, p_endOffset, p_strColour){ var wwa = p_startNode; var xwa = p_endNode; try { var result = null; if (p_endNode == p_startNode) { result = rw_setNodeBackground(p_startNode, p_startOffset, p_endOffset, "ss", p_strColour); wwa = result.node; xwa = result.node; } else { if (p_startOffset > 0) { result = rw_setNodeBackground(p_startNode, p_startOffset, p_startNode.nodeValue.length, "ss", p_strColour); } else { result = rw_setNodeBackground(p_startNode, -1, -1, "ss", p_strColour); } wwa = result.node; var gBb = boa(result.node, false, p_endNode, true); while (gBb != null) { if (gBb == p_endNode) { result = rw_setNodeBackground(gBb, 0, p_endOffset, "ss", p_strColour); gBb = result.node; xwa = gBb; break; } else { result = rw_setNodeBackground(gBb, -1, -1, "ss", p_strColour); gBb = result.node; } xwa = gBb; gBb = boa(gBb, false, p_endNode, true); } } } catch(err){Iva("rw_setHighlight error:" + err.message); } return {start: wwa, end: xwa};}function Hxa(p_arr){ try { if (p_arr == null || (p_arr instanceof Array) == false || p_arr.length == 0) { return; } var Lxa = 0; var ZBb = p_arr[0]; var Nxa = 0; var aBb = p_arr[p_arr.length - 1]; for (var i = 0; i < p_arr.length; i++) { var tmp = p_arr[i]; if (Jxa(tmp)) { var Zxa = tmp.parentNode; var Qxa = Zxa.parentNode; Qxa.replaceChild(tmp, Zxa); p_arr[i] = tmp; } } } catch(err){Iva("rw_setHighlight error:" + err.message);}}function Jxa(p_node){ if (p_node.nodeType != 3 || p_node.parentNode == null || p_node.parentNode.parentNode == null) { return false; } var parent = p_node.parentNode; var Rxa = parent.getAttribute("rwstate"); if (parent.tagName.toLowerCase() != "font" || Rxa == null || Rxa != "ss") { return false; } return true;} function rw_removeSpeechHighlight(p_arr, p_bWord){ try { if(typeof(p_bWord) == "undefined") { p_bWord=false; } if (p_arr == null || (p_arr instanceof Array) == false || p_arr.length == 0) { return; } var Lxa = 0; var ZBb = p_arr[0]; var Nxa = 0; var aBb = p_arr[p_arr.length - 1]; for (var i = 0; i < p_arr.length; i++) { var tmp = p_arr[i]; if (Sxa(tmp, p_bWord)) { var Zxa = tmp.parentNode; if(tmp.nextSibling != null || tmp.previousSibling != null) { var txt = Cwa(Zxa); var doc = Zxa.ownerDocument; tmp = doc.createTextNode(txt); } var Qxa = Zxa.parentNode; Qxa.replaceChild(tmp, Zxa); } } } catch(err) { Iva("rw_removeSpeechHighlight failed error:" + err.message); }}function Sxa(p_node, p_bWord){ if (p_node.nodeType != 3 || p_node.parentNode == null || p_node.parentNode.parentNode == null) { return false; } var parent = p_node.parentNode; var Rxa = parent.getAttribute("rwstate"); if (parent.tagName.toLowerCase() == "font" && Rxa != null) { if((p_bWord == false && Rxa == "sp") || Rxa == "csp") { return true; } } return false;}function rw_setSpeechRangeImpl(p_startNode, p_startOffset, p_endNode, p_endOffset, p_strState){ var result = null; try { if (p_endNode == p_startNode) { result = rw_setNodeBackground(p_startNode, p_startOffset, p_endOffset, p_strState, ""); return result; } if (p_startOffset > 0) { result = rw_setNodeBackground(p_startNode, p_startOffset, p_startNode.nodeValue.length, p_strState, ""); } else { result = rw_setNodeBackground(p_startNode, -1, -1, p_strState, ""); } var gBb = boa(result.node, false, p_endNode, true); while (gBb != null) { if (gBb == p_endNode) { result = rw_setNodeBackground(gBb, 0, p_endOffset, p_strState, ""); gBb = result.node; break; } else { result = rw_setNodeBackground(gBb, -1, -1, p_strState, ""); gBb = result.node; } gBb = boa(gBb, false, p_endNode, true); } } catch(err) { Iva("rw_setSpeechRangeImpl error:"+ err.message); } return result;}function Wxa(){ this.node = null; this.offset = 0;}function rw_setNodeBackground(p_textNode, p_nStartPt, p_nEndPt, p_state, p_strCol){ var res = new Wxa(); res.node = p_textNode; res.offset = p_nStartPt; if (p_textNode.nodeType != 3) { if(p_textNode.nodeType == 1 && ima(p_textNode)) { var Xxa = fna(p_textNode, false); var Yxa = hna(p_textNode, false); if(Xxa != null && Xxa.nodeType == 3 && Yxa != null && Yxa.nodeType == 3) { rw_setSpeechRangeImpl(Xxa, 0, Yxa, Yxa.nodeValue.length, p_state); res.node = Xxa; res.offset = 0; return res; } else { return res; } } else { return res; } } var doc = p_textNode.ownerDocument; var Zxa = p_textNode.parentNode; var axa = null; if (Zxa.tagName.toLowerCase() == "font") { axa = Zxa.getAttribute("rwstate"); } if (p_state == "ss") { if(axa == null || axa == "") { res = cxa(Zxa, p_textNode, p_nStartPt, p_nEndPt, p_state, p_strCol); } else if (axa == "ss") { return res; } else { return res; } } else if (p_state == "sp") { if (axa == "csp") { Iva("fail in rw_setNodeBackground setting sp to csp"); return res; } if (axa == "sp") { Iva("fail in rw_setNodeBackground setting sp to sp"); return res; } res = cxa(Zxa, p_textNode, p_nStartPt, p_nEndPt, p_state, ""); } else if (p_state == "csp") { if (axa == "csp") { Iva("fail parent is csp for csp"); return res; } if (axa == "sp") { res = cxa(Zxa, p_textNode, p_nStartPt, p_nEndPt, p_state, ""); } else { } } else { } return res;}function cxa(p_parentNode, p_textNode, p_nStartPt, p_nEndPt, p_state, p_strCol){  if(p_textNode.nodeType == 3 && (p_nEndPt == -1 || p_nEndPt > p_nStartPt)) { var doc = p_parentNode.ownerDocument; var dxa = false; if (p_nStartPt == -1 && p_nEndPt == -1) { dxa = true; } else if (p_nEndPt == -1) { p_nEndPt = p_textNode.nodeValue.length; } if (p_nStartPt == 0 && p_nEndPt >= p_textNode.nodeValue.length) { dxa = true; } var exa; if (p_state == "ss") { exa = "background:" + p_strCol; } else if (p_state == "sp") { exa = "color:#000000; background:#FFFF00"; } else if (p_state == "csp") { exa = "color:#FFFFFF; background:#0000FF"; } else { exa = "color:#ff000; background:#00ff00"; } if (dxa) { var jxa = doc.createElement("font"); if(Wea) { jxa.style.setAttribute("cssText", exa, 0); jxa.setAttribute("rwstate", p_state); if(p_state != "ss") { jxa.setAttribute("started", "1"); } } else { jxa.setAttribute("STYLE", exa); jxa.setAttribute("rwstate", p_state); if(p_state != "ss") { jxa.setAttribute("started", "1"); } } p_parentNode.replaceChild(jxa, p_textNode); jxa.appendChild(p_textNode); } else { var txt = p_textNode.nodeValue; var gxa; var hxa; var ixa; if (p_parentNode.tagName.toLowerCase() == "span" && p_parentNode.getAttribute("pron") != null) { gxa = ""; hxa = txt; ixa = ""; } else { gxa = txt.substring(0, p_nStartPt); hxa = txt.substring(p_nStartPt, p_nEndPt); ixa = txt.substring(p_nEndPt); } var jxa = doc.createElement("font"); if(Wea) { jxa.style.setAttribute("cssText", exa, 0); jxa.setAttribute("rwstate", p_state); if(p_state != "ss") { jxa.setAttribute("started", "1"); } } else { jxa.setAttribute("STYLE", exa); jxa.setAttribute("rwstate", p_state); if(p_state != "ss") { jxa.setAttribute("started", "1"); } } var kxa = null; var lxa = null; var mxa = null; if (gxa.length > 0) { kxa = doc.createTextNode(gxa); } lxa = doc.createTextNode(hxa); if (ixa.length > 0) { mxa = doc.createTextNode(ixa); } jxa.appendChild(lxa); p_parentNode.replaceChild(jxa, p_textNode); if (kxa != null) { p_parentNode.insertBefore(kxa, jxa); } if (mxa != null) { if (jxa.nextSibling == null) { p_parentNode.insertBefore(mxa, null); } else { p_parentNode.insertBefore(mxa, jxa.nextSibling); } } p_textNode = lxa; } } var res = new Wxa(); res.node = p_textNode; if (p_nStartPt < 0) { res.offset = 0; } else { res.offset = p_nStartPt; } return res;}function pxa(p_firstNode, p_secondNode){ if (p_firstNode == p_secondNode) { return 0; } var nxa = Gva(); nxa.setStart(p_firstNode, 0); nxa.setEnd(p_firstNode, 0); var oxa = Gva(); oxa.setStart(p_secondNode, 0); oxa.setEnd(p_secondNode, 0); return (nxa.compareBoundaryPoints("START_TO_START", oxa));}function qxa(){ this.txt = ""; this.voice = null; this.ECb = null; };function rxa(p_node){ return Bya(vxa(p_node));}function sxa(p_node){ if(p_node != null && p_node.nodeType == 1) { return Bya(p_node.getAttribute("lang")); } return null;}function vxa(p_node){ var wxa = p_node; while(wxa != null) { if(wxa.nodeType == 1) { var uxa = wxa.getAttribute("lang"); if(uxa != null) { return uxa; } } wxa = wxa.parentNode; } return null;}function zxa(wva, xva, p_strOrigVoice){ var wxa = wva; wxa = ana(wxa, false, xva); while(wxa != null) { var xxa = rxa(wxa); if(xxa != p_strOrigVoice) { var yxa = Qoa(wxa, false, wva); if(yxa.nodeType == 3) { return new THCaret(yxa, yxa.nodeValue.length, false); } else { return new THCaret(yxa, 0, true); } } wxa = Xna(wxa, false, xva); } return null;}function Bya(p_strLang){ if(p_strLang != null) { var str = p_strLang.toLowerCase(); var Aya; if(str == "en" || str=="en-uk") { Aya = ENGLISH; } else if(str == "en-us") { Aya = ENGLISH_US; } else if(str == "es-us") { Aya = SPANISH; } else if(str == "es" || str=="es-es") { Aya = ESPANOL; } else if(str == "fr" || str == "fr-fr") { Aya = FRENCH; } else if(str == "fr-ca") { Aya = FRENCH_CN; } else { return null; } return xaa[Aya]; } else { return null; }}function Eya(p_strVoice){ if(p_strVoice != null) { if(p_strVoice != zba) { zba = p_strVoice; var flash = rw_getWebToSpeech(); flash.setVoiceName(zba); } } else { if(zba != null) { zba = null; var flash = rw_getWebToSpeech(); flash.setVoiceName(pba); } }}function Fya(p_str){ if(uba == 200) { p_str = p_str.replace(/\s+/g, " "); } else { p_str = p_str.replace(/(\x3cbookmark\x20mark\x3d\x22(\d)+\x22\x2f\x3e)/g, ""); p_str = p_str.replace(/[\s\xA0]+/g, " "); } return aya(p_str);}function $rw_scholasticHashShort(p_asset){ var txt = p_asset.replace(/^0+|[^0-9]/g, ""); return "0001".substring(0, 4-txt.length) + txt.substring(0, 4);}function $rw_scholasticHash(p_asset){ var txt = p_asset.replace(/^0+|[^0-9]/g, ""); if(txt.length < 4) { txt = "0001".substring(0, 4-txt.length) + txt; } else { txt = txt.substring(0, 4); } return txt;}var Gya = null; 
function $rw_cachePage(p_strVoice, p_strSpeed, p_strBookName) { try { if(eca) { eba_cacheResult = "failure: The embedded speech toolbar cannot be added due to invalid html tag markup in this page."; window.external.completed(eba_cacheResult); return eba_cacheResult; } if(uba == 300) { if(typeof(p_strBookName) == "string" && p_strBookName != null && p_strBookName.length > 0) { sba = p_strBookName; } else { sba = "1"; } tba = "1"; } if(Fca) { if(p_strSpeed != null) { $rw_setSpeedValue(parseInt(p_strSpeed)); } if(p_strVoice != null) { $rw_setVoice(p_strVoice); } var Hya = ioa(document.body); $rw_doSelection(-2); Mya(Hya); } } catch(err) { if(err.message != null) { eba_cacheResult = "failure:" + err.message; } else { eba_cacheResult = "failure:" + err; } window.external.completed(eba_cacheResult); return eba_cacheResult; } eba_cacheResult = "success"; window.external.completed(eba_cacheResult); return "success";}function Mya(p_sent){ while(p_sent != null) { Gya = p_sent; var Iya = ama(p_sent, new Array()); var txt = Iya.txt; if(txt == null || txt.trimTH().length == 0) { Oya(); return; } var Jya = Fya(txt); var Kya = Sya(); var flash = rw_getWebToSpeech(); if(1==0 ) { flash.startSpeechCacheGenerationWithPronunciation(txt, pba, "" + Bca, Kya, Jya, rba, sba, tba ); } else { window.external.Generate(txt, Kya, Jya); p_sent = toa(p_sent); 
 } } }function Oya(){ if(Gya != null) { var Nya = toa(Gya); if(Nya != null) { Mya(Nya); } else { Qya(); } } else { Qya(); }}function Qya(){ var Wya = document.getElementById("pageComplete"); if(Wya != null) { Wya.click(); }}function Rya(p_strText){ return Tya() + "/" + Fya(p_strText);}function Sya(){ var str = pba.replace(" ", "_"); if(dca) { return Uya(rba + "\\" + sba + "\\" + $rw_scholasticHash(tba) + "\\" + tba + "\\" + str + (Bca)); } else { return Uya(rba + "\\" + sba + "\\" + tba + "\\" + str + Bca); }}function Tya(){ var str = pba.replace(" ", "_"); if(dca) { return Uya(rba + "/" + sba + "/" + $rw_scholasticHash(tba) + "/" + tba + "/" + str + Bca); } else { return Uya(rba + "/" + sba + "/" + tba + "/" + str + Bca); }}function Uya(p_str){ return p_str.replace(/[\x3a\x2a\x3f\x22<>\x7c]/g, ""); }var Vya = "";function $rw_speechCacheGenErrorHandler(p_strMsg){ Vya = p_strMsg; var Wya = document.getElementById("pageFailed"); if(Wya != null) { Wya.click(); }}function $rw_getLastError(){ return Vya;}/* The following code is derived from MD5 hash functions (c) Paul Johnston, http://pajhome.org.uk/crypt/md5/. */var Xya = 0; var Yya = ""; var Zya = 8; 
function aya(s){ return qya(bya(oya(s), s.length * Zya));}function bya(x, len){  x[len >> 5] |= 0x80 << ((len) % 32); x[(((len + 64) >>> 9) << 4) + 14] = len; var a = 1732584193; var b = -271733879; var c = -1732584194; var d = 271733878; for(var i = 0; i < x.length; i += 16) { var cya = a; var dya = b; var eya = c; var fya = d; a = hya(a, b, c, d, x[i+ 0], 7 , -680876936); d = hya(d, a, b, c, x[i+ 1], 12, -389564586); c = hya(c, d, a, b, x[i+ 2], 17, 606105819); b = hya(b, c, d, a, x[i+ 3], 22, -1044525330); a = hya(a, b, c, d, x[i+ 4], 7 , -176418897); d = hya(d, a, b, c, x[i+ 5], 12, 1200080426); c = hya(c, d, a, b, x[i+ 6], 17, -1473231341); b = hya(b, c, d, a, x[i+ 7], 22, -45705983); a = hya(a, b, c, d, x[i+ 8], 7 , 1770035416); d = hya(d, a, b, c, x[i+ 9], 12, -1958414417); c = hya(c, d, a, b, x[i+10], 17, -42063); b = hya(b, c, d, a, x[i+11], 22, -1990404162); a = hya(a, b, c, d, x[i+12], 7 , 1804603682); d = hya(d, a, b, c, x[i+13], 12, -40341101); c = hya(c, d, a, b, x[i+14], 17, -1502002290); b = hya(b, c, d, a, x[i+15], 22, 1236535329); a = iya(a, b, c, d, x[i+ 1], 5 , -165796510); d = iya(d, a, b, c, x[i+ 6], 9 , -1069501632); c = iya(c, d, a, b, x[i+11], 14, 643717713); b = iya(b, c, d, a, x[i+ 0], 20, -373897302); a = iya(a, b, c, d, x[i+ 5], 5 , -701558691); d = iya(d, a, b, c, x[i+10], 9 , 38016083); c = iya(c, d, a, b, x[i+15], 14, -660478335); b = iya(b, c, d, a, x[i+ 4], 20, -405537848); a = iya(a, b, c, d, x[i+ 9], 5 , 568446438); d = iya(d, a, b, c, x[i+14], 9 , -1019803690); c = iya(c, d, a, b, x[i+ 3], 14, -187363961); b = iya(b, c, d, a, x[i+ 8], 20, 1163531501); a = iya(a, b, c, d, x[i+13], 5 , -1444681467); d = iya(d, a, b, c, x[i+ 2], 9 , -51403784); c = iya(c, d, a, b, x[i+ 7], 14, 1735328473); b = iya(b, c, d, a, x[i+12], 20, -1926607734); a = jya(a, b, c, d, x[i+ 5], 4 , -378558); d = jya(d, a, b, c, x[i+ 8], 11, -2022574463); c = jya(c, d, a, b, x[i+11], 16, 1839030562); b = jya(b, c, d, a, x[i+14], 23, -35309556); a = jya(a, b, c, d, x[i+ 1], 4 , -1530992060); d = jya(d, a, b, c, x[i+ 4], 11, 1272893353); c = jya(c, d, a, b, x[i+ 7], 16, -155497632); b = jya(b, c, d, a, x[i+10], 23, -1094730640); a = jya(a, b, c, d, x[i+13], 4 , 681279174); d = jya(d, a, b, c, x[i+ 0], 11, -358537222); c = jya(c, d, a, b, x[i+ 3], 16, -722521979); b = jya(b, c, d, a, x[i+ 6], 23, 76029189); a = jya(a, b, c, d, x[i+ 9], 4 , -640364487); d = jya(d, a, b, c, x[i+12], 11, -421815835); c = jya(c, d, a, b, x[i+15], 16, 530742520); b = jya(b, c, d, a, x[i+ 2], 23, -995338651); a = kya(a, b, c, d, x[i+ 0], 6 , -198630844); d = kya(d, a, b, c, x[i+ 7], 10, 1126891415); c = kya(c, d, a, b, x[i+14], 15, -1416354905); b = kya(b, c, d, a, x[i+ 5], 21, -57434055); a = kya(a, b, c, d, x[i+12], 6 , 1700485571); d = kya(d, a, b, c, x[i+ 3], 10, -1894986606); c = kya(c, d, a, b, x[i+10], 15, -1051523); b = kya(b, c, d, a, x[i+ 1], 21, -2054922799); a = kya(a, b, c, d, x[i+ 8], 6 , 1873313359); d = kya(d, a, b, c, x[i+15], 10, -30611744); c = kya(c, d, a, b, x[i+ 6], 15, -1560198380); b = kya(b, c, d, a, x[i+13], 21, 1309151649); a = kya(a, b, c, d, x[i+ 4], 6 , -145523070); d = kya(d, a, b, c, x[i+11], 10, -1120210379); c = kya(c, d, a, b, x[i+ 2], 15, 718787259); b = kya(b, c, d, a, x[i+ 9], 21, -343485551); a = lya(a, cya); b = lya(b, dya); c = lya(c, eya); d = lya(d, fya); } return Array(a, b, c, d);}function gya(q, a, b, x, s, t){ return lya(mya(lya(lya(a, q), lya(x, t)), s),b);}function hya(a, b, c, d, x, s, t){ return gya((b & c) | ((~b) & d), a, b, x, s, t);}function iya(a, b, c, d, x, s, t){ return gya((b & d) | (c & (~d)), a, b, x, s, t);}function jya(a, b, c, d, x, s, t){ return gya(b ^ c ^ d, a, b, x, s, t);}function kya(a, b, c, d, x, s, t){ return gya(c ^ (b | (~d)), a, b, x, s, t);}function lya(x, y){ var lsw = (x & 0xFFFF) + (y & 0xFFFF); var msw = (x >> 16) + (y >> 16) + (lsw >> 16); return (msw << 16) | (lsw & 0xFFFF);}function mya(num, cnt){ return (num << cnt) | (num >>> (32 - cnt));}function oya(str){ var bin = Array(); var mask = (1 << Zya) - 1; for(var i = 0; i < str.length * Zya; i += Zya) { bin[i>>5] |= (str.charCodeAt(i / Zya) & mask) << (i%32); } return bin;}function qya(binarray){ var pya = Xya ? "0123456789ABCDEF" : "0123456789abcdef"; var str = ""; for(var i = 0; i < binarray.length * 4; i++) { str += pya.charAt((binarray[i>>2] >> ((i%4)*8+4)) & 0xF) + pya.charAt((binarray[i>>2] >> ((i%4)*8 )) & 0xF); } return str;}$endmainflag$$startspeechflag$$endspeechflag$$startssflag$function $rw_barSSInit(){ if(Wea) { document.writeln("<link href=\"" + $g_strFileLoc + "rwssIE.css\" type=\"text/css\" rel=\"stylesheet\">"); } else { document.writeln("<link href=\"" + $g_strFileLoc + "rwssSFF.css\" type=\"text/css\" rel=\"stylesheet\">"); } var gEb = ""; gEb += '<div id="rwCollect" rwTHcomp="1" texthelpStopContinuous>'; gEb += ' <div id="rwToolbarOutlineCollect" >'; if(xba == ENG_UK || xba == ENG_US) { gEb += '  <div id="rwDragMeCollect" class="rwToolbarCaptionCollect" style="width:600px">'; } else { gEb += '  <div id="rwDragMeCollect" class="rwToolbarSpanCaptionCollect" style="width:600px">'; } gEb += '    <img name="collectImg" align="right" src="' + $g_strFileLoc + 'rwimgs/thex.bmp" ' + 'onMouseOver="$rw_divOver(4)" onMouseOut="$rw_divOut(4)" ' + 'onMouseUp="$rw_divPress(4)" />'; gEb += '  </div>'; gEb += '  <div id="rwToolbarBarCollectBorder" >'; gEb += '   <div id="rwTextCollect" class="rwToolbarBarCollect">'; gEb += '    <span id="rwpopupcollect"></span>'; gEb += '   </div>'; gEb += '   <input class=rwSSbutton type=\'button\' onclick=\'rw_selectCollateText();\'' + 'value=\'' + Bba[Qba][xba] + '\'></input>'; gEb += '  </div>'; gEb += ' </div>'; gEb += '</div>'; document.writeln(gEb);}$rw_barSSInit();var sya = new Array();var tya = new Array();function Bza(p_strColour){ try { var VBb = bra(); if (VBb == null || VBb.range == null || VBb.range instanceof String) { return false; } var JAb = VBb.range; if(Wea) { var wya = lsa(document.body, JAb); if(wya == null) { return false; } var ECb = Mra(document.body, wya.WBb.path, wya.WBb.offset, wya.XBb.path, wya.XBb.offset); var FCb = ECb.eBb; var GCb = ECb.fBb; if(FCb == null || GCb == null) { return false; } var Aza = new oja(FCb.node, FCb.offset, GCb.node, GCb.offset); if(Aza == null) { return null; } Aza = Nza(Aza); if(Aza == null) { return null; } JAb = rw_getAsTextRange(document.body, Aza.WBb.path, Aza.WBb.offset, Aza.XBb.path, Aza.XBb.offset ); } else { JAb = Nza(JAb); } if(JAb == null) { Bwa("Failed to do the highlight, possibly due to selection going into a non textual part of the page."); return false; } Oza(JAb, p_strColour); cva(); if(Nca && Tca && typeof(ICb) != "undefined") { ICb(); } return true; } catch (exc) { return false; }}function Nza(p_range){ var FCb = p_range.FCb; var GCb = p_range.GCb; var Eza = false; var Fza = FCb.node.nodeType != 3 || (FCb.node.nodeType == 3 && FCb.node.nodeValue.trimTH().length == 0); if(Fza) { Eza = true; while(Fza) { if(FCb.node == GCb.node) { return null; } FCb.node = Zoa(FCb.node, false, GCb.node); if(FCb.node == null) { return null; } Fza = FCb.node.nodeType != 3 || (FCb.node.nodeType == 3 && FCb.node.nodeValue.trimTH().length == 0); } FCb.offset = 0; } Fza = GCb.node.nodeType != 3 || (GCb.node.nodeType == 3 && GCb.node.nodeValue.trimTH().length == 0); if(Fza) { Eza = true; while(Fza) { if(FCb.node == GCb.node) { return null; } GCb.node = Soa(GCb.node, false, FCb.node, false); if(GCb.node == null) { return null; } Fza = GCb.node.nodeType != 3 || (GCb.node.nodeType == 3 && GCb.node.nodeValue.trimTH().length == 0); } if(GCb.nodeType == 3) { GCb.offset = GCb.node.nodeValue.length; } } if(FCb.node == null || GCb.node == null) { return null; } if(Eza) { p_range = new oja(FCb.node, FCb.offset, GCb.node, GCb.offset); } return p_range;}function Oza(p_range, p_strColour){ try { var Gza = null; var Hza = true; if (p_range == null || p_range instanceof String) { return; } if (document.selection) { Gza = bva(p_range); if (Gza.length == 0) { return; } JBb(); for (var MBb = 0; MBb < sya.length; MBb++) { var Jza = sya[MBb]; var Kza = p_range.duplicate(); Kza.collapse(true); var Lza = Jza.inRange(Kza); Kza = p_range.duplicate(); Kza.collapse(false); var hAb = Jza.inRange(Kza); if (Lza && hAb) { if(tya[MBb] == p_strColour) { Hza = false; } else { Xza(MBb, p_range); } } else if (!Lza && hAb) { Zza(MBb, p_range); } else if (Lza && !hAb) { bza(MBb, p_range); } else if (p_range.inRange(Jza)) { sya.splice(MBb, 1); tya.splice(MBb, 1); MBb--; } } } else if (p_range.toString) { if (p_range == null || p_range.toString() == null || p_range.toString() == "") { return; } for (var MBb = 0; MBb < sya.length; MBb++) { var dAb = sya[MBb]; var eAb = p_range.compareRange(dAb); switch(eAb) { case eja: window.status = "Error occurred when trying to add a highlight."; break; case fja: if(tya[MBb] == p_strColour) { Hza = false; break; } case ija: dAb.refresh(); Hxa(twa(dAb.FCb, dAb.GCb)); sya.splice(MBb, 1); tya.splice(MBb, 1); --MBb; p_range.refresh(); break; case jja: case mja: case nja: if(tya[MBb] == p_strColour) { Hza = false; } else { EAb(MBb, p_range, eAb); ++MBb; } break; case lja: FAb(MBb, p_range); break; case kja: GAb(MBb, p_range); break; case gja: break; case hja: break; default : } } } else { return; } if (Hza) { if (p_range.execCommand) { p_range.execCommand("backcolor", false, "clear"); p_range.execCommand("backcolor", false, p_strColour); } else { var FCb = p_range.FCb; var GCb = p_range.GCb; var result = rw_setHighlight(FCb.node, FCb.offset, GCb.node, GCb.offset, p_strColour); } sya.push(p_range); tya.push(p_strColour); } cva(); return true; } catch (exc) { return false; }}function Xza(dEb, JAb){ var XAb = sya[dEb].duplicate(); var YAb = sya[dEb].duplicate(); XAb.collapse(true); YAb.collapse(false); while (XAb.compareEndPoints("EndToStart", JAb) < 0) { XAb.moveEnd("character", 1); } while (YAb.compareEndPoints("StartToEnd", JAb) > 0) { YAb.moveStart("character", -1); } sya[dEb].execCommand("backcolor", false, "clear"); if(XAb.text.length == 0) { sya[dEb] = YAb; sya[dEb].execCommand("backcolor", false, tya[dEb]); } else { sya[dEb] = XAb; sya[dEb].execCommand("backcolor", false, tya[dEb]); if(YAb.text.length > 0) { sya.push(YAb); tya.push(tya[dEb]); YAb.execCommand("backcolor", false, tya[dEb]); } }}function Zza(dEb, JAb){ var YAb = sya[dEb].duplicate(); YAb.collapse(false); while (YAb.compareEndPoints("StartToEnd", JAb) > 0) { YAb.moveStart("character", -1); } sya[dEb] = YAb;}function bza(dEb, JAb){ var XAb = sya[dEb].duplicate(); XAb.collapse(true); while (XAb.compareEndPoints("EndToStart", JAb) < 0) { XAb.moveEnd("character", 1); } sya[dEb] = XAb;}function EAb(p_nPos, p_selectionRange, p_thDomRangeType){ var vza = tya[p_nPos]; var wza = sya[p_nPos]; wza.refresh(); var xza = wza.WBb; var yza = p_selectionRange.WBb; var oza = p_selectionRange.XBb; var pza = wza.XBb; Hxa(twa(wza.FCb, wza.GCb)); sya.splice(p_nPos, 1); tya.splice(p_nPos, 1); var FCb; var GCb; var result; var dAb; if(p_thDomRangeType != mja) { ECb = Mra(document.body, xza.path, xza.offset, yza.path, yza.offset); FCb = ECb.eBb; GCb = ECb.fBb; result = rw_setHighlight(FCb.node, FCb.offset, GCb.node, GCb.offset, vza); dAb = new oja(result.start, 0, result.end, result.end.nodeValue.length); sya.push(dAb); tya.push(vza); } if(p_thDomRangeType != nja) { ECb = Mra(document.body, oza.path, oza.offset, pza.path, pza.offset); FCb = ECb.eBb; GCb = ECb.fBb; result = rw_setHighlight(FCb.node, FCb.offset, GCb.node, GCb.offset, vza); dAb = new oja(result.start, 0, result.end, result.end.nodeValue.length); sya.push(dAb); tya.push(vza); } p_selectionRange.refresh(); }function FAb(dEb, JAb){ var vza = tya[dEb]; var wza = sya[dEb]; wza.refresh(); var oza = JAb.XBb; var pza = wza.XBb; Hxa(twa(wza.FCb, wza.GCb)); sya.splice(dEb, 1); tya.splice(dEb, 1); var ECb = Mra(document.body, oza.path, oza.offset, pza.path, pza.offset); var FCb = ECb.eBb; var GCb = ECb.fBb; var result = rw_setHighlight(FCb.node, FCb.offset, GCb.node, GCb.offset, vza); var dAb = new oja(result.start, 0, result.end, result.end.nodeValue.length); sya.push(dAb); tya.push(vza); JAb.refresh(); }function GAb(dEb, JAb){ var vza = tya[dEb]; var wza = sya[dEb]; wza.refresh(); var xza = wza.WBb; var yza = JAb.WBb; Hxa(twa(wza.FCb, wza.GCb)); sya.splice(dEb, 1); tya.splice(dEb, 1); var ECb = Mra(document.body, xza.path, xza.offset, yza.path, yza.offset); var FCb = ECb.eBb; var GCb = ECb.fBb; var result = rw_setHighlight(FCb.node, FCb.offset, GCb.node, GCb.offset, vza); var dAb = new oja(result.start, 0, result.end, result.end.nodeValue.length); sya.push(dAb); tya.push(vza); JAb.refresh(); }function HAb(range){ var str = "";str += "range.collapse=" + range.collapse + "\n";str += "range.duplicate=" + range.duplicate + "\n";str += "range.inRange=" + range.inRange + "\n";str += "range.text=" + range.text + "\n";str += "range.compareEndPoints=" + range.compareEndPoints + "\n";Bwa(str);}function MAb(){ try { var VBb = bra(); var JAb = null; var KAb = null; if (VBb != null && VBb.range != null) { JAb = VBb.range; KAb = VBb.frame; } if(JAb != null && JAb instanceof String) { if(jha != null) { jha.selectionStart = 0; jha.selectionEnd = 0; } jha = null; return; } if (document.selection) { if (JAb == null || JAb.length == 0 || JAb.text.length == 0) { var ZAb = confirm("Remove all highlights?"); if(!ZAb) { return; } var IEb = sya.length; for (var MBb = 0; MBb < IEb; MBb++) { var range = sya[MBb]; range.execCommand("backcolor", false, "clear"); sya[MBb] = null; tya[MBb] = null; } sya = new Array(); tya = new Array(); if(!document.compatMode.equalsTH("CSS1Compat")) { if (top.window.frames.length > 0) { var i = 0; var PAb = top.window.frames.length; for (i = 0; i < PAb; i++) { var QAb = top.window.frames[i]; JAb = QAb.document.selection.createRange(); JAb.expand("textedit"); JAb.execCommand("backcolor", false, "clear"); } } else { JAb = document.selection.createRange(); JAb.expand("textedit"); JAb.execCommand("backcolor", false, "clear"); } } if(Nca && Tca && typeof(ICb) != "undefined") { ICb(); } return; } JAb.execCommand("backcolor", false, "clear"); JBb(); var IEb = sya.length; var MBb = 0; var bAb = null; var UAb = null; for (MBb = 0; MBb < IEb; MBb++) { bAb = sya[MBb]; if (bAb != null) { if (JAb.inRange(bAb)) { bAb = null; sya.splice(MBb, 1); tya.splice(MBb, 1); MBb--; continue; } UAb = bAb.duplicate(); UAb.collapse(true); if (JAb.inRange(UAb)) { var YAb = bAb.duplicate(); YAb.collapse(false); while (YAb.compareEndPoints("StartToEnd", JAb) > 0) { YAb.moveStart("character", -1); } sya[MBb].execCommand("backcolor", false, "clear"); sya[MBb] = YAb; sya[MBb].execCommand("backcolor", false, tya[MBb]); } else { UAb = bAb.duplicate(); UAb.collapse(false); if (JAb.inRange(UAb)) { var XAb = bAb.duplicate(); XAb.collapse(true); while (XAb.compareEndPoints("EndToStart", JAb) < 0) { XAb.moveEnd("character", 1); } sya[MBb].execCommand("backcolor", false, "clear"); sya[MBb] = XAb; sya[MBb].execCommand("backcolor", false, tya[MBb]); } } if (bAb.inRange(JAb)) { bAb.execCommand("backcolor", false, "clear"); var XAb = bAb.duplicate(); var YAb = bAb.duplicate(); XAb.collapse(true); YAb.collapse(false); while (XAb.compareEndPoints("EndToStart", JAb) < 0) { XAb.moveEnd("character", 1); } while (YAb.compareEndPoints("StartToEnd", JAb) > 0) { YAb.moveStart("character", -1); } sya[MBb].execCommand("backcolor", false, "clear"); sya[MBb] = XAb; sya.push(YAb); tya.push(tya[MBb]); XAb.execCommand("backcolor", false, tya[MBb]); YAb.execCommand("backcolor", false, tya[MBb]); } } } JAb.execCommand("UnSelect", false, null); } else { if (JAb == null) { var ZAb = confirm("Remove all highlights?"); if(!ZAb) { return; } var aAb = sya; sya = new Array(); tya = new Array(); for (var i = 0; i < aAb.length; i++) { var bAb = aAb[i]; bAb.refresh(); Hxa(twa(bAb.FCb, bAb.GCb)); } } else { JAb.refresh(); for (var MBb = 0; MBb < sya.length; MBb++) { var dAb = sya[MBb]; var eAb = JAb.compareRange(dAb); switch(eAb) { case eja: window.status = "Error occurred when trying to remove a highlight."; break; case fja: case ija: dAb.refresh(); Hxa(twa(dAb.FCb, dAb.GCb)); sya.splice(MBb, 1); tya.splice(MBb, 1); --MBb; JAb.refresh(); break; case jja: case mja: case nja: EAb(MBb, JAb, eAb); ++MBb; break; case lja: FAb(MBb, JAb); break; case kja: GAb(MBb, JAb); break; case gja: break; case hja: break; default : } } } cva(); } if(Nca && Tca && typeof(ICb) != "undefined") { ICb(); } } catch(exc) { Iva("Error in method: " + exc.name + " " + exc.message + " " + exc.description + " " + exc.toString()); }}function fAb(a, b){ try { return a.compareEndPoints("EndToEnd", b); } catch(exc) { Iva("sortby " + exc.message); return 0; }}function sortBySFF(a, b){ try { if(a.equals(b)) { return 0; } a.refresh(); b.refresh(); var gAb = a.getEndAsRange(); var hAb = b.getEndAsRange(); return gAb.compareBoundaryPoints("END_TO_END", hAb); } catch(exc) { Iva("sortBySFF " + exc.message); return 0; }}function kAb(){ try { var jAb = "<div id='rwcollatewrapper' >"; var lAb = wAb("cyan"); var mAb = wAb("magenta"); if(lAb.length > 0 && mAb.length > 0) { mAb = "<br>" + mAb; } var nAb = wAb("yellow"); if((lAb.length > 0 || mAb.length > 0) && nAb.length > 0) { nAb = "<br>" + nAb; } var oAb = wAb("lightgreen"); if((lAb.length > 0 || mAb.length > 0 || nAb.length > 0) && oAb.length > 0) { oAb = "<br>" + oAb; } jAb += lAb + mAb + nAb + oAb + '</div>'; 
 return jAb; } catch (exc) { Iva("Error in method: " + exc.name + " " + exc.message + " " + exc.toString()); return ""; } }function rw_selectCollateText(){ var vEb = document.getElementById("rwcollatewrapper"); if(Wea) { var range = Gva(); range.moveToElementText(vEb) ; range.select(); } else { var gBb = ena(vEb, false, null); if(gBb != null) { var range = new oja(vEb, 0, gBb, 0); iva(range); } } try { var flash = rw_getWebToSpeech(); if(flash != null) { var txt = qta(); if(!(txt == null || txt.length == 0)) { flash.setToClipboard(txt.valueOf()); } } } catch(ignore) { }}function $rw_getHighlights(p_strColour){ p_strColour = p_strColour.toLowerCase(); if(p_strColour == "blue") { p_strColour = "cyan"; } else if(p_strColour == "red") { p_strColour = "magenta"; } if(p_strColour == "green") { p_strColour = "lightgreen"; } return wAb(p_strColour);}function wAb(p_strColour){ var tAb = new Array(); var IEb = sya.length; var vAb = ""; var xAb = ''; var yAb = 0; for (var TBb = 0; TBb < IEb; TBb++) { var LDb = tya[TBb]; if (LDb == p_strColour) { tAb.push(sya.slice(TBb, TBb + 1).pop()); } } if (Wea) { tAb.sort(fAb); } else { tAb.sort(sortBySFF); } var BBb = tAb.length; var KEb; for (var TBb = 0; TBb < BBb; TBb++) { if (Wea) { var EBb = tAb.slice(TBb, TBb + 1).pop(); KEb = tAb.slice(TBb, TBb + 1).pop().text; } else { KEb = tAb[TBb].toString(); } if (KEb.length > 0) { if(yAb > 0){xAb += '<br>';} yAb++; xAb += '' + yAb + ': ' + KEb + '<br>'; } } if(yAb > 0) { vAb += '<p></p>'; vAb += '<div style="background:' + p_strColour + '">'; vAb += xAb; vAb += '</div><p></p>'; } return vAb;}function FBb(){ return (sya != null && sya.length > 0);}function $rw_event_cyan(){ try { Bza('cyan'); } catch(err) { Iva("Caught error " + err); }}function $rw_event_magenta(){ try { Bza('magenta'); } catch(err) { Iva("Caught error " + err); }}function $rw_event_yellow(){ try { Bza('yellow'); } catch(err) { Iva("Caught error " + err); }}function $rw_event_green(){ try { Bza('lightgreen'); } catch(err) { Iva("Caught error " + err); }}function $rw_event_clear(){ try { MAb(); } catch(err) { Iva("Caught error " + err); }}function $rw_event_collect(){ try { fua(); } catch(err) { Iva("Caught error " + err); }}function JBb(){ try { var KBb = null; var LBb = false; var MBb = 0; for (MBb = 0; MBb < sya.length; MBb++) { KBb = sya[MBb]; try { if (KBb.text == null || KBb.text == "") { KBb = null; } } catch(exe) { Iva(exe); KBb = null; } if (KBb == null) { sya.splice(MBb, 1); tya.splice(MBb, 1); LBb = true; MBb--; } } return LBb; } catch (exc) { Iva("Error in method: " + exc.toString()); return false; }}function NBb(range){ try { var KBb = null; var LBb = false; var MBb = 0; for (MBb = 0; MBb < sya.length; MBb++) { KBb = sya[MBb]; try { if (KBb.text == null || KBb.text == "") { KBb = null; } } catch(exe) { Iva(exe); KBb = null; } if (KBb == null) { sya.splice(MBb, 1); tya.splice(MBb, 1); LBb = true; MBb--; } else { var OBb = range.compareEndPoints("StartToEnd", KBb); var PBb = range.compareEndPoints("EndToStart", KBb); if(OBb == -1 && PBb == 1) { KBb.execCommand("backcolor", false, tya[MBb]); } } } } catch (exc) { Iva(exc); }}function SBb(){ var IEb = sya.length; var aCb = ""; try { for (var TBb = 0; TBb < IEb; TBb++) { aCb += "|"; var LDb = tya[TBb]; aCb += LDb + "|"; var VBb = sya.slice(TBb, TBb + 1).pop(); var WBb; var XBb; if(Wea) { var YBb = lsa(document.body, VBb); WBb = YBb.WBb; XBb = YBb.XBb; } else { VBb.refresh(); var ZBb = VBb.FCb.node; var startOffset = VBb.FCb.offset; var aBb = VBb.GCb.node; var endOffset = VBb.GCb.offset; if(ZBb.nodeType == 3 && ZBb.nodeValue.trimTH().length == 0) { ZBb = Xna(ZBb, false, aBb); startOffset = 0; while(ZBb != null && ZBb.nodeType == 3 && ZBb.nodeValue.trimTH().length == 0) { ZBb = Xna(ZBb, false, aBb); } if(ZBb == null) { ZBb = aBb; } } var bBb = Jka(ZBb, startOffset); if(aBb.nodeType == 3 && aBb.nodeValue.trimTH().length == 0) { endOffset = 0; while(ZBb != aBb && aBb != null && aBb.nodeType == 3 && aBb.nodeValue.trimTH().length == 0) { aBb = Una(aBb, false, ZBb); } if(aBb != null && aBb.nodeType == 3 && aBb.nodeValue.trimTH().length > 0) { endOffset = aBb.nodeValue.length; } } var cBb = Jka(aBb, endOffset); WBb = bBb; XBb = cBb; } if(WBb != null && XBb != null) { var ECb = Mra(document.body, WBb.path, WBb.offset, XBb.path, XBb.offset); var eBb = ECb.eBb; var fBb = ECb.fBb; aCb += kBb(eBb) + "|" + kBb(fBb); } } if(aCb.length > 0) { aCb += "|"; } } catch(ignore) { } return aCb;}function kBb(p_caret){ var gBb = p_caret.node; var XEb = p_caret.offset; XEb += Vka(gBb); var AEb = gBb.parentNode; var BEb = AEb.getAttribute("id"); while((BEb == null || BEb.length == 0) && AEb != document.body) { XEb += Vka(AEb); AEb = AEb.parentNode; BEb = AEb.getAttribute("id"); } if(BEb != null && BEb.length > 0) { uDb = "idx" + BEb; } else { uDb = kqa(gBb.parentNode); XEb = Vka(gBb); } return uDb + "|" + XEb;}function nBb(p_strIdx, p_nOffset, p_bForwardBias){ var lBb = document.getElementById(p_strIdx.substr(3)); var mBb = kqa(lBb); return new THDomRefPt(mBb, p_nOffset);}function wBb(p_strData){ var oBb; var pBb; var qBb; var rBb; var sBb; var tBb; var uBb; var TEb = p_strData.indexOf('|'); var UEb = p_strData.indexOf('|', TEb + 1); var yBb = p_strData.indexOf('|', UEb + 1); var zBb = p_strData.indexOf('|', yBb + 1); var ACb = p_strData.indexOf('|', zBb + 1); var BCb = p_strData.indexOf('|', ACb + 1); while(TEb > -1 && UEb > -1 && yBb > -1 && zBb > -1 && ACb > -1 && BCb > -1) { oBb = p_strData.substring(TEb + 1, UEb); pBb = p_strData.substring(UEb + 1, yBb); qBb = p_strData.substring(yBb + 1, zBb); sBb = p_strData.substring(zBb + 1, ACb); tBb = p_strData.substring(ACb + 1, BCb); rBb = parseInt(qBb); uBb = parseInt(tBb); if(pBb.length > 3 && pBb.substring(0, 3) == "idx") { var DCb = nBb(pBb, rBb, true); pBb = DCb.path; rBb = DCb.offset; } if(sBb.length > 3 && sBb.substring(0, 3) == "idx") { var DCb = nBb(sBb, uBb, false); sBb = DCb.path; uBb = DCb.offset; } var range = null; if(Wea) { range = rw_getAsTextRange(document.body, pBb, rBb, sBb, uBb); } else { var ECb = Mra(document.body, pBb, rBb, sBb, uBb); var FCb = ECb.eBb; var GCb = ECb.fBb; if(FCb != null && GCb != null) { range = new oja(FCb.node, FCb.offset, GCb.node, GCb.offset); } } if(range != null) { Oza(range, oBb); } TEb = BCb; UEb = p_strData.indexOf('|', TEb + 1); yBb = p_strData.indexOf('|', UEb + 1); zBb = p_strData.indexOf('|', yBb + 1); ACb = p_strData.indexOf('|', zBb + 1); BCb = p_strData.indexOf('|', ACb + 1); }}function ICb(){ var MEb = "http://" + Uca + "/stickynoteserver/?" + jCb + "=" + nCb; if(!Mca) { MEb += "&custid=" + HEb(rba); } MEb += "&titleid=" + HEb(sba); MEb += "&pageid=" + HEb(tba); MEb += "&teacherid=" + HEb(Rca); MEb += "&studentid=" + HEb(Pca); MEb += "&ssdata=" + HEb(SBb()); var OEb = document.createElement("script"); OEb.type = "text/javascript"; OEb.src = MEb; document.body.appendChild(OEb);}function LCb(){ var MEb = "http://" + Uca + "/stickynoteserver/?" + jCb + "=" + oCb; if(!Mca) { MEb += "&custid=" + HEb(rba); } MEb += "&titleid=" + HEb(sba); MEb += "&pageid=" + HEb(tba); MEb += "&teacherid=" + HEb(Rca); MEb += "&studentid=" + HEb(Pca); var OEb = document.createElement("script"); OEb.type = "text/javascript"; OEb.src = MEb; document.body.appendChild(OEb);}function $rw_retrieveHighlightDataForPKTReply(p_strText){ wBb(p_strText); if(Oca != "*" && typeof(NEb) != "undefined") { NEb(); }} $endssflag$$startsearchflag$function $rw_event_trans(){ try { var sEb; if(gea) { var flash = Dta(eea); hea = true; if(flash == null) { return; } sEb = flash.clickOnDictionary(); flash.focus(); } else { sEb = qta(); } sEb = Jva(sEb); if (sEb.length > 0) { var flash = rw_getWebToSpeech(); if(flash != null) { if($rw_getFlashVersion() > 142) { var RCb = flash.getTranslationPage(sEb); } else { var RCb = flash.getTransPage(sEb); } } } else { var aCb = "<style type=\"text/css\">" + "div.rwTranWordHeader{"+ "font-size:150%;"+ "font-weight: bold;"+ "padding-bottom: 3px;"+ "border-bottom: 1px solid #666666;"+ "margin-bottom: 10px;}"+ "span.rwMeaningNum{padding-left: 10px;"+ "padding-right: 10px;"+ "font-weight: bold;}"+ "span.rwMeaning{padding-right:10px}"+ "</style>"+ "<div class=\"rwTranWordHeader\">No valid word selected</div>"; $rw_transReply(aCb); } } catch(err) { Iva("Caught error " + err); }}function $rw_transReply(p_str){ try { if(typeof(p_str) == "string" && p_str.length > 0) { var cCb; if($rw_getFlashVersion() > 142) { cCb = "<html><body>" + p_str + "</body></html>"; } else { cCb = "<html><body>" + p_str.substring(7) + "</body></html>"; } Yia(Pea, cCb); bia(true, Pea); } } catch(err) { Iva("Caught error " + err); }}function $rw_event_ffinder(){ try { var UCb; if(gea) { var flash = Dta(eea); hea = true; if(flash == null) { return; } UCb = flash.clickOnDictionary(); flash.focus(); } else { UCb = qta(); } UCb = ava(UCb); if(UCb.length > 0) {  var txt = "http://www.google.com/search?q=" + UCb; Vua(txt, 'popup', 700, 500, 1, 1, 0, 0, 0, 0, 0); } } catch(err) { Iva("Caught error " + err); }}function $rw_ffReply(p_str){ }function $rw_event_dict(){ try { var sEb; if(gea) { var flash = Dta(eea); hea = true; if(flash == null) { return; } sEb = flash.clickOnDictionary(); flash.focus(); } else { sEb = qta(); } sEb = Jva(sEb); if(dca) { if(typeof(displayDictionaryTerm) == "function") { displayDictionaryTerm(sEb); } return; } if(sEb.length > 0) { var flash = rw_getWebToSpeech(); if(flash != null) { var ZCb; if(typeof(eba_custom_dictionary_url) != "undefined" && eba_custom_dictionary_url != null && eba_custom_dictionary_url.length > 0) { ZCb = flash.getCustomDictionaryPage(sEb, eba_custom_dictionary_url); } else if(typeof(eba_alt_dictionary_url) != "undefined" && eba_alt_dictionary_url != null && eba_alt_dictionary_url.length > 0) { var txt = eba_alt_dictionary_url + sEb; Vua(txt, 'popup', 700, 500, 1, 1, 0, 0, 0, 0, 0); } else { ZCb = flash.getDictionaryPage(sEb); } } } else { if(typeof(eba_alt_dictionary_url) != "undefined" && eba_alt_dictionary_url != null && eba_alt_dictionary_url.length > 0) { Bwa("No valid word selected"); } var aCb = "result=<div class=\"rwDictWordHeader\">No valid word selected</div>"; $rw_dictionaryReply(aCb); } } catch(err) { Iva("Caught error " + err); }}function $rw_dictionaryReply(p_str){ try { var dEb = p_str.indexOf("result="); if(dEb > -1) { var cCb = p_str.substring(7); Yia(Rea, cCb); bia(true, Rea); } } catch(err) { Iva("Caught error " + err); }}function $rw_barSearchInit(){ if(Wea) { document.writeln("<link href=\"" + $g_strFileLoc + "rwsearch.css\" type=\"text/css\" rel=\"stylesheet\">"); } else { document.writeln("<link href=\"" + $g_strFileLoc + "rwsearchSFF.css\" type=\"text/css\" rel=\"stylesheet\">"); } var gEb = ""; gEb += '<div id="rwDisplay" rwTHcomp="1">'; gEb += '<div class="rwPopupOutline">'; gEb += '<div id="rwDragMeDisplay" class="rwToolbarCaptionDisplay" >'; gEb += '<img name="transImg" align="right" src="' + $g_strFileLoc + 'rwimgs/thex.bmp" onMouseOver="$rw_divOver(1)" onMouseOut="$rw_divOut(1)" ' + 'onMouseUp="$rw_divPress(1)" />'; gEb += '</div>'; gEb += '<div class="rwPopupContent">'; gEb += '<span id="rwpopupdisplay"></span>'; gEb += '</div>'; gEb += '</div>'; gEb += '</div>'; gEb += ' <div id="rwTrans" rwTHcomp="1" texthelpStopContinuous>'; gEb += ' <div class="rwPopupOutline">'; if(xba == ENG_UK || xba == ENG_US) { gEb += '  <div id="rwDragMeTrans" class="rwToolbarCaptionTrans" >'; } else { gEb += '  <div id="rwDragMeTrans" class="rwToolbarSpanCaptionTrans" >'; } gEb += '    <img name="transImg" align="right" src="' + $g_strFileLoc + 'rwimgs/thex.bmp" onMouseOver="$rw_divOver(1)" onMouseOut="$rw_divOut(1)" ' + 'onMouseUp="$rw_divPress(1)" /></div>'; gEb += '  <div class="rwPopupContent">'; gEb += '<span id="rwpopuptrans"></span></div>'; gEb += '</div></div>'; 
 gEb += '<div id="rwDict" rwTHcomp="1" texthelpStopContinuous>'; gEb += ' <div class="rwPopupOutline">'; if(xba == ENG_UK || xba == ENG_US) { gEb += '  <div id="rwDragMeDict" class="rwToolbarCaptionDict" >'; } else { gEb += '  <div id="rwDragMeDict" class="rwToolbarSpanCaptionDict" >'; } gEb += '    <img name="dictImg" align="right" src="' + $g_strFileLoc + 'rwimgs/thex.bmp" onMouseOver="$rw_divOver(3)" onMouseOut="$rw_divOut(3)" '+ 'onMouseUp="$rw_divPress(3)" /></div>'; gEb += '  <div class="rwPopupContent">  '; gEb += '<span id="rwpopupdict"></span></div>'; gEb += '</div></div>'; document.writeln(gEb);}$rw_barSearchInit();$endsearchflag$$startstickyflag$function $rw_barStickyInit(){ var eCb = 500; if(Wea) { if(mea == "xtran") { document.writeln("<link href=\"" + $g_strFileLoc + "rwstickyxtranie.css\" type=\"text/css\" rel=\"stylesheet\">"); } else { document.writeln("<link href=\"" + $g_strFileLoc + "rwstickyie.css\" type=\"text/css\" rel=\"stylesheet\">"); } } else if(Yea) { if(mea == "xtran") { document.writeln("<link href=\"" + $g_strFileLoc + "rwstickyxtrans.css\" type=\"text/css\" rel=\"stylesheet\">"); } else { document.writeln("<link href=\"" + $g_strFileLoc + "rwstickys.css\" type=\"text/css\" rel=\"stylesheet\">"); } } else { if(mea == "xtran") { document.writeln("<link href=\"" + $g_strFileLoc + "rwstickyxtranff.css\" type=\"text/css\" rel=\"stylesheet\">"); } else { document.writeln("<link href=\"" + $g_strFileLoc + "rwstickyff.css\" type=\"text/css\" rel=\"stylesheet\">"); } } var gEb = ""; gEb += "<div id=\"rwSticky\" " + baa + "=\"1\" style=\"visibility:hidden;\">" + "    <div id='rwDragMeStickyNoteTop' class='sticky_bar_top'>"; if(Sca) { } else { gEb += "        <A HREF=\"link: close\"" + "                onMouseDown=\"if (document.images) " + "{ rw_stickyNoteCloseImg.src = $rw_stickyNoteCloseImg2.src; }\"" + "                onMouseOut=\"if (document.images) " + "{ rw_stickyNoteCloseImg.src = $rw_stickyNoteCloseImg1.src; }\"" + "                onclick=\"$rw_closeStickyNote(event);return false;\">" + "           <IMG style=\"margin:1px;border:0px none;\" ID=\"closeStickyNote\" SRC=\"" + $g_strFileLoc + "rwimgs/close_off.gif\"" + "                alt=\"Close note\" title=\"Close note\" ignore=\"1\" name=\"rw_stickyNoteCloseImg\" />"; } gEb += "        </A>" + "    </div>" + "    <div id=\"innerStickyNote\" align=\"center\">" + "        <textarea id=\"stickyNoteText\" cols=\"1\" rows=\"1\" "; if(Sca) { gEb += "                  onKeyPress=\"var c =event.keyCode;limitText(this," + eCb + ");\"" + "                  onKeyUp=\"limitText(this," + eCb + ");\"" + "                  onMousePress=\"limitText(this, " + eCb + ");\"" + "                  onChange=\"limitText(this, " + eCb + ");\"" + "                  onBlur=\"g_speakableTextAreaTarget = this; " + "if(g_nSpeakableTextAreaTimerId != 0)" + "{" + "clearTimeout(g_nSpeakableTextAreaTimerId);" + "}" + "g_nSpeakableTextAreaTimerId = setTimeout('" + "g_speakableTextAreaTarget = null; " + "g_nSpeakableTextAreaTimerId = 0;', " + wda + "); " + "limitText(this, "+ eCb +");\""; } else { gEb += "readonly=\"readonly\"" + "                  onBlur=\"g_speakableTextAreaTarget = this; " + "if(g_nSpeakableTextAreaTimerId != 0)" + "{" + "clearTimeout(g_nSpeakableTextAreaTimerId);" + "}" + "g_nSpeakableTextAreaTimerId = setTimeout('" + "g_speakableTextAreaTarget = null; " + "g_nSpeakableTextAreaTimerId = 0;', " + wda + "); " + "\""; } gEb += ">" + "        </textarea>" + "    </div>" + "    <div id='rwDragMeStickyNoteBot' class='sticky_bar'>"; if(Sca) { gEb += "      &nbsp;<img src=\"" + $g_strFileLoc + "rwimgs/delete.gif\" " + "id=\"removebuttonimg\" alt=\"\" " + "name=rw_stickyNoteRemoveImg " + "        onMouseDown=\"if (document.images) " + "{ rw_stickyNoteRemoveImg.src = $rw_stickyNoteRemoveImg2.src; }\"" + "        onMouseUp=\"if (document.images) " + "{ rw_stickyNoteRemoveImg.src = $rw_stickyNoteRemoveImg1.src; }\"" + "        onMouseOut=\"if (document.images) " + "{ rw_stickyNoteRemoveImg.src = $rw_stickyNoteRemoveImg1.src; }\"" + "        onclick=\"$rw_removeStickyNote(event);return false;\"" + "      />"; gEb += "<img src=\"" + $g_strFileLoc + "rwimgs/spacer.gif\" width=\"110px\" height=\"10px;\" />"; gEb += "      <img  src=\"" + $g_strFileLoc + "rwimgs/save.gif\" " + "id=\"saveclosebuttonimg\" alt=\"\" " + "name=rw_stickyNoteSaveCloseImg " + "        onMouseDown=\"if (document.images) " + "{ rw_stickyNoteSaveCloseImg.src = $rw_stickyNoteSaveCloseImg2.src; }\"" + "        onMouseUp=\"if (document.images) " + "{ rw_stickyNoteSaveCloseImg.src = $rw_stickyNoteSaveCloseImg1.src; }\"" + "        onMouseOut=\"if (document.images) " + "{ rw_stickyNoteSaveCloseImg.src = $rw_stickyNoteSaveCloseImg1.src; }\"" + "        onclick=\"$rw_closeStickyNote(event);return false;\"" + "      />"; } else { } gEb += "    </div>" + "</div>"; document.writeln(gEb);}$rw_barStickyInit();var gCb = "texthelpnote";var hCb = "texthelpnoteid";var iCb = 20;var jCb = "cmd";var kCb = "add";var lCb = "delete";var mCb = "retrieve";var nCb = "addss";var oCb = "retrievess";var pCb = 0;var qCb = -1;var rCb = null;function tCb(event){ var YEb = fqa(event); vCb(YEb, -1, null, true);}; function vCb(p_thCaret, p_nDefaultId, p_strDefaultText, p_bAutoOpen){ if(p_thCaret != null && p_thCaret.node != null && p_thCaret.node.parentNode != null) { if(KDb(p_thCaret.node)) { var uCb = document.getElementsByName(gCb); if(uCb.length > iCb) { Bwa("The limit of " + iCb + " notes per page has been reached."); return; } var nId; if(p_nDefaultId == -1) { ++pCb; nId = pCb; } else { nId = p_nDefaultId; if(pCb< nId) { pCb = nId + 1; } } HDb = IDb(p_strDefaultText, nId); if(p_thCaret.node.nodeType == 1) { var span = document.createElement("span"); span.setAttribute(caa, "1"); var ADb = p_thCaret.node; var dDb = ADb.parentNode; dDb.insertBefore(span, ADb); span.appendChild(HDb); span.appendChild(ADb); } else if(p_thCaret.node.nodeType == 3) { var dEb = p_thCaret.offset; var ADb = p_thCaret.node; var dDb = ADb.parentNode; var txt = ADb.nodeValue; if(dEb != 0) { if(dEb > 0 && dEb == txt.length) { --dEb; } while(dEb > 0 && txt.charCodeAt(dEb) == 32) { --dEb; } while(dEb > 0) { tna = txt.charCodeAt(dEb - 1); if((tna > 63 && tna < 91) || (tna > 94 && tna < 123) || (tna > 44 && tna < 58) || tna == 34 || tna == 39) { --dEb; } else { break; } } } if(dEb == 0 && txt.charCodeAt(0) == 32) { var CDb = 1; while(CDb < txt.length && txt.charCodeAt(CDb) == 32 ) { ++CDb; } if(CDb < txt.length) { dEb = CDb; } else { var DDb = ADb.parentNode.previousSibling; if(DDb != null && DDb.tagName.toLowerCase() == "img" && DDb.getAttribute(hCb) != null) { return; } var EDb = ADb.parentNode.nextSibling; if(EDb != null && EDb.tagName.toLowerCase() == "img" && EDb.getAttribute(hCb) != null) { return; } } } var FDb = Upa(ADb, dEb); var GDb = FDb.parentNode.previousSibling; if(GDb != null && GDb.tagName.toLowerCase() == "img" && GDb.getAttribute(hCb) != null) { return; } FDb.parentNode.parentNode.insertBefore(HDb, FDb.parentNode); } if(p_bAutoOpen) { RDb(HDb); } } }};function IDb(p_strDefaultText, p_nId){ var HDb = null; if(Wea) { try { HDb = document.createElement("<img name='" + gCb + "'>"); } catch(err) { HDb = null; } } if(HDb == null) { HDb = document.createElement("img"); HDb.name = gCb; } HDb.setAttribute("src", $g_strFileLoc + "rwimgs/stickyicon.gif"); HDb.setAttribute("alt", ""); HDb.style.width = 27; HDb.style.height = 27; if(Wea && p_strDefaultText == null) { HDb.setAttribute("rwths", "0"); } if(p_strDefaultText != null) { HDb.setAttribute("title", p_strDefaultText); } HDb.setAttribute(baa, "1"); if(Wea) { lha(HDb, 'click', $rw_clickOnStickyNote); } else { HDb.setAttribute("onclick", "$rw_clickOnStickyNote(event);"); } HDb.setAttribute(hCb, "" + p_nId ); HDb.id = gCb + p_nId; HDb.className = "sticky_icon_unselected"; return HDb;}function KDb(p_node){ var JDb = p_node.previousSibling; if(JDb != null && JDb.nodeType == 1 && JDb.tagName.toLowerCase() == "img" && JDb.getAttribute(hCb) != null) { return false; } if(p_node.nodeType == 1) { if(p_node.getAttribute(hCb) != null) { return false; } var LDb = p_node.tagName.toLowerCase(); if(LDb == "input" || LDb == "textarea" || LDb == "img" || LDb == "label" || LDb == "button" || LDb == "nobr") { } else { if(LDb == "span") { var lDb = p_node.getAttribute("pron"); if(lDb != null) { } else { return false; } } else if(LDb == "acronym" || LDb == "abbr") { var lDb = p_node.getAttribute("title"); if(lDb != null) { } else { return false; } } else { return false; } } } var bod = document.body; while(p_node != null && p_node != bod) { if(p_node.nodeType == 1) { var lDb = p_node.getAttribute(baa); if(lDb != null && lDb == "1") { return false; } } p_node = p_node.parentNode; } return true;}function $rw_clickOnStickyNote(evt){ var target = bqa(evt); RDb(target);};function RDb(p_obj){ if(p_obj.nodeType == 1 && p_obj.getAttribute(hCb) != null) { var QEb = p_obj.getAttribute(hCb); var nId = parseInt(QEb); if(qCb > -1) { if(qCb == nId) { var UDb = document.getElementById("stickyNoteText"); UDb.focus(); return; } else { VDb(qCb); } } qCb = nId; var lDb = p_obj.getAttribute("title"); rCb = lDb; if(lDb == null) { lDb = ""; } var UDb = document.getElementById("stickyNoteText"); UDb.value = lDb; p_obj.className = "sticky_icon_selected"; bia(true, Tea); UDb.focus(); }}function VDb(p_nVal){ try { bia(false, Tea); var UDb = document.getElementById("stickyNoteText"); var lDb = UDb.value; var vEb = document.getElementById(gCb + p_nVal); if(vEb != null) { vEb.setAttribute("title", lDb); vEb.className = "sticky_icon_unselected"; if(lDb != rCb) { nDb(p_nVal); } else if(Wea) { var YDb = vEb.getAttribute("rwths"); if(YDb != null) { vEb.removeAttribute("rwths"); nDb(p_nVal); } } } } finally { qCb = -1; }};function eDb(qCb){ var ZDb = 0; var aDb = false; var QEb = gCb + qCb; try { var vEb = document.getElementById(QEb); if(vEb != null && vEb.parentNode != null) { var dDb = vEb.parentNode; dDb.removeChild(vEb); aDb = true; if(dDb.getAttribute(caa) && dDb.tagName.toLowerCase() == "span") { var fDb = dDb.firstChild; if(fDb != null && fDb.nextSibling == null) { if(fDb.nodeType == 3 || ( fDb.getAttribute(caa) == null && fDb.getAttribute(baa) == null) ) { var gDb = dDb.parentNode; gDb.insertBefore(fDb, dDb); gDb.removeChild(dDb); } } } } } catch(err) { ZDb += 1; } try { if(aDb) { var MEb = "http://" + Uca + "/stickynoteserver/?" + jCb + "=" + lCb; if(!Mca) { MEb += "&custid=" + HEb(rba); } MEb += "&titleid=" + HEb(sba); MEb += "&pageid=" + HEb(tba); MEb += "&teacherid=" + HEb(Oca); MEb += "&studentid=" + HEb(Qca); MEb += "&noteid=" + qCb; var OEb = document.createElement("script"); OEb.type = "text/javascript"; OEb.src = MEb; document.body.appendChild(OEb); qCb = -1; } } catch(err) { ZDb += 2; } if(ZDb > 0) { if(ZDb == 1) { Bwa("An error occurred while removing the note from the page."); } else if(ZDb == 2) { Bwa("An error occurred while sending the remove request to the server."); } else { Bwa("An error occurred while removing the note from the page and sending the remove request to the server."); } } bia(false, Tea);}function nDb(p_nVal){ if(p_nVal == -1) { var jDb = document.getElementsByName(gCb); var i=0; for(i=0;i<jDb.length;i++) { var vEb = jDb[i]; var lDb = vEb.getAttribute(hCb); if(lDb != null) { var mDb = parseInt(lDb); qDb(mDb); } } } else { qDb(p_nVal); }};function qDb(p_nVal){ var QEb = gCb + p_nVal; var vEb = document.getElementById(QEb); if(vEb != null) { if(vEb.tagName.toLowerCase() == "img" && vEb.getAttribute(baa) != null) { var rDb = vEb.getAttribute(hCb); if(QEb != null) { var SEb = vEb.title; var tDb = parseInt(rDb); var uDb; var XEb; if(vEb.nextSibling != null) { var wDb = vEb.nextSibling; if(wDb.nodeType == 1 && wDb.tagName.toLowerCase() != "span") { var BEb = wDb.getAttribute("id"); if(BEb == null || BEb.length == 0) { uDb = kqa(vEb.parentNode); } else { uDb = "idx" + BEb; } XEb = -1; } else { XEb = 0; XEb += Vka(vEb); var AEb = vEb.parentNode; var BEb = AEb.getAttribute("id"); while((BEb == null || BEb.length == 0) && AEb != document.body) { XEb += Vka(AEb); AEb = AEb.parentNode; BEb = AEb.getAttribute("id"); } if(BEb != null && BEb.length > 0) { uDb = "idx" + BEb; } else { uDb = kqa(vEb.parentNode); XEb = Vka(vEb); } } } else { XEb = 0; XEb += Vka(vEb); var AEb = vEb.parentNode; var BEb = AEb.getAttribute("id"); while((BEb == null || BEb.length == 0) && AEb != document.body) { XEb += Vka(AEb); AEb = AEb.parentNode; BEb = AEb.getAttribute("id"); } if(BEb != null && BEb.length > 0) { uDb = "idx" + BEb; } else { uDb = kqa(vEb.parentNode); XEb = Vka(vEb); } } var MEb = "http://" + Uca + "/stickynoteserver/?" + jCb + "=" + kCb; if(!Mca) { MEb += "&custid=" + HEb(rba); } MEb += "&titleid=" + HEb(sba); MEb += "&pageid=" + HEb(tba); MEb += "&teacherid=" + HEb(Oca); MEb += "&studentid=" + HEb(Qca); MEb += "&noteid=" + (rDb); MEb += "&notetext=" + HEb(SEb); MEb += "&position=" + (uDb + "-" + XEb); var OEb = document.createElement("script"); OEb.type = "text/javascript"; OEb.src = MEb; document.body.appendChild(OEb); } } }};function HEb(p_text){ var IEb = p_text.length; var i; var code; for(i=0; i<IEb; i++) { code = p_text.charCodeAt(i); if(code > 1023 || code == 91 || code == 93 || code == 37 || code == 38 || code == 61 || code == 35 || code == 47 || code == 92 || code == 10 || code == 13) { var GEb = "[" + d2h(code) + "]"; p_text = p_text.substr(0, i) + GEb + p_text.substr(i + 1); i += GEb.length - 1; IEb = p_text.length; } } return p_text;}function LEb(p_text){ var IEb = p_text.length; var i; var j; var code; var KEb; for(i=0; i<IEb; i++) { code = p_text.charCodeAt(i); if(code == 91) { j = i + 1; KEb = ""; while(j < IEb && code != 93) { KEb += p_text.charAt(j); j++; if(j < IEb) { code = p_text.charCodeAt(j); } } try { code = h2d(KEb); if(j<IEb) { p_text = p_text.substr(0, i) + String.fromCharCode(code) + p_text.substr(j + 1); } else { p_text = p_text.substr(0, i) + String.fromCharCode(code); } } catch(err) { } } } return p_text;}function NEb(){ var MEb = "http://" + Uca + "/stickynoteserver/?" + jCb + "=" + mCb; if(!Mca) { MEb += "&custid=" + HEb(rba); } MEb += "&titleid=" + HEb(sba); MEb += "&pageid=" + HEb(tba); MEb += "&teacherid=" + HEb(Oca); MEb += "&studentid=" + HEb(Qca); var OEb = document.createElement("script"); OEb.type = "text/javascript"; OEb.src = MEb; document.body.appendChild(OEb);};function $rw_unserialiseStickyNotesImpl(p_strText){ var PEb = " ^ "; var QEb = ""; var REb = ""; var SEb = ""; var TEb = 0; var UEb = 0; while(TEb > -1 && UEb > -1) { UEb = p_strText.indexOf(PEb, TEb); if(UEb > -1) { QEb = p_strText.substring(TEb, UEb); TEb = UEb + 3; UEb = p_strText.indexOf(PEb, TEb); if(UEb > -1) { REb = p_strText.substring(TEb, UEb); TEb = UEb + 3; UEb = p_strText.indexOf(PEb, TEb); if(UEb > -1) { SEb = p_strText.substring(TEb, UEb); var dEb = REb.indexOf("-"); if(dEb > -1 && dEb < REb.length -1) { var WEb = REb.substr(dEb + 1); var XEb = parseInt(WEb); REb = REb.substring(0, dEb); var YEb; if(REb.substr(0, 3) == "idx") { var ZEb = REb.substr(3); var vEb = document.getElementById(ZEb); if(vEb != null) { YEb = Jra(document.body, kqa(vEb), XEb, true); } } else { YEb = Jra(document.body, REb, XEb, false); } dEb = SEb.indexOf("^^"); if(dEb > -1) { while(dEb > -1) { SEb = SEb.substr(0, dEb) + SEb.substr(dEb + 1); dEb = SEb.indexOf("^^", dEb + 1); } } SEb = LEb(SEb); vCb(YEb, parseInt(QEb), SEb, false); } TEb = UEb + 3; UEb = p_strText.indexOf(PEb, TEb); } } } }};function bEb(){ document.getElementById("floater").style.display = "block";};function cEb(){ document.getElementById("floater").style.display = "none";};function $rw_event_sticky(event, i){ pea = !pea; g_toggleIcons[i][8] = !g_toggleIcons[i][8]; if(pea) { if(Yea) { document.images[g_toggleIcons[i][0]].src = g_toggleIcons[i][zea].src; } else { Ufa(g_toggleIcons[i][0], "toggleOn", true); } } if(pea && $g_bMouseSpeech) { $rw_enableClickToSpeak(false); }}function eEb(){ var dEb = -1; var i; for(i=0; i<g_toggleIcons.length;i++) { if(g_toggleIcons[i][0] == "sticky") { dEb = i; } } if(dEb > -1) { $rw_event_sticky(null, i); }}if(document.images){ var $rw_stickyNoteCloseImg1 = new Image(); $rw_stickyNoteCloseImg1.src = $g_strFileLoc + "rwimgs/close_off.gif"; var $rw_stickyNoteCloseImg2 = new Image(); $rw_stickyNoteCloseImg2.src = $g_strFileLoc + "rwimgs/close_on.gif"; var $rw_stickyNoteSaveCloseImg1 = new Image(); $rw_stickyNoteSaveCloseImg1.src = $g_strFileLoc + "rwimgs/save.gif"; var $rw_stickyNoteSaveCloseImg2 = new Image(); $rw_stickyNoteSaveCloseImg2.src = $g_strFileLoc + "rwimgs/save_on.gif"; var $rw_stickyNoteRemoveImg1 = new Image(); $rw_stickyNoteRemoveImg1.src = $g_strFileLoc + "rwimgs/delete.gif"; var $rw_stickyNoteRemoveImg2 = new Image(); $rw_stickyNoteRemoveImg2.src = $g_strFileLoc + "rwimgs/delete_on.gif";}function $rw_closeStickyNote(event){ VDb(qCb); event.returnValue=false; return false;}function $rw_removeStickyNote(event){ if(!Wca || confirm("Are you sure you want to remove this note?  Click OK to proceed.")) { eDb(qCb); } event.returnValue=false; return false;}function limitText(textArea, length){ if(textArea.value.length > length) { textArea.value = textArea.value.substr(0, length); Bwa("The sticky note is limited to " + length + " characters."); }}$endstickyflag$$startpronflag$function $rw_barPronInit(p_strCustId, p_strBookId, p_strPageId){ if(Wea) { document.writeln("<link href=\"" + $g_strFileLoc + "VLEpronIE.css\" type=\"text/css\" rel=\"stylesheet\">"); } else if(Yea) { document.writeln("<link href=\"" + $g_strFileLoc + "VLEpronS.css\" type=\"text/css\" rel=\"stylesheet\">"); } else { document.writeln("<link href=\"" + $g_strFileLoc + "VLEpronFF.css\" type=\"text/css\" rel=\"stylesheet\">"); } var gEb = ""; gEb += "<form class=\"rwPrScreen\" rwTHcomp=\"1\" >" + " <input TYPE=\"hidden\" id=\"createCustId\" VALUE=\"" + p_strCustId + "\">" + " <input TYPE=\"hidden\" id=\"createBookId\" VALUE=\"" + p_strBookId + "\">" + " <input TYPE=\"hidden\" id=\"createPageId\" VALUE=\"" + p_strPageId + "\">" + " <div id=\"rwPronCreate\" class=\"rwPronContent\" style=\"visibility:hidden\" texthelpStopContinuous>" + "  <div id=\"rwDragMePronCreate\" style='cursor:move'>" + "   <a href=\"javascript:void(0)\" onmouseover = \"if (document.images) { rwCloseCreate.src = close2.src } \"" + "       onmouseout = \"if (document.images) { rwCloseCreate.src = close1.src }\" " + "       onclick=\"$rw_closePronCreate();return false\">" + "    <img ignore id=\"rwCloseCreate\" src=\"" + $g_strFileLoc + "vleimgs/close_off.gif\" " + "        style=\"margin:0;border:0;position:relative;top:0px;right:-1px;\" " + "        alt=\"Close button\" title=\"Close Create Pronunciation Form\" name=\"rwCloseCreate\" align=\"right\" />" + "   </a>" + "  </div>" + "  <table width=\"220\" cellspacing=\"8\" " + "      cellpadding=\"0\">" + "   <tr>" + "    <td width=\"167\">" + "     <span>Say this:</span>" + "     <input TYPE=\"text\" id=\"createSayThis\" size=\"28\">" + "    </td>" + "    <td valign=\"bottom\"><img ignore border=\"0\" " + "        onClick=\"callFlashSpeechNoPron(document.getElementById('createSayThis').value);\" alt=\"Speaker\" title=\"Click To Speak Pronunciation\"" + "        src=\"" + $g_strFileLoc + "vleimgs/speaker.gif\" onmouseover=\"roll(this, '" + $g_strFileLoc + "/vleimgs/speaker_on.gif')\" " + "        onmouseout=\"roll(this, '" + $g_strFileLoc + "vleimgs/speaker.gif')\" />" + "    </td>" + "   </tr>" + "   <tr>" + "    <td width=\"167\"><span>Like this:</span><input id=\"createLikeThis\" size=\"28\">" + "    </td>" + "    <td valign=\"bottom\">" + "     <img ignore border=\"0\" " + "         onClick=\"callFlashSpeechNoPron(document.getElementById('createLikeThis').value);\" " + "         alt=\"Speaker\" title=\"Click To Speak Pronunciation\" " + "         src=\"" + $g_strFileLoc + "vleimgs/speaker.gif\" " + "         onmouseover=\"roll(this, '" + $g_strFileLoc + "vleimgs/speaker_on.gif')\" " + "         onmouseout=\"roll(this, '" + $g_strFileLoc + "vleimgs/speaker.gif')\" />" + "    </td>" + "   </tr>" + "   <tr>" + "    <td><input type=\"checkbox\" id=\"createAllPages\" value=\"true\"><span>All pages in book</span>" + "    </td>" + "    <td></td>" + "   </tr>" + "   <tr>" + "    <td colspan=\"2\">" + "     <table>" + "      <tr>" + "       <td width=150 class=\"message\">" + "        <div id=\"confirmPageMsg\">" + "        </div>" + "       </td>" + "       <td>" + "        <img ignore src=\"" + $g_strFileLoc + "vleimgs/insert.gif\" border=\"0\" " + "            alt=\"Create pronunciation button\" title=\"Create Pronunciation\" " + "            onClick=\"createPron(document.getElementById('createCustId').value, " + "document.getElementById('createBookId').value, " + "document.getElementById('createPageId').value, " + "document.getElementById('createSayThis').value, " + "document.getElementById('createLikeThis').value, " + "document.getElementById('createAllPages').checked);\" " + "            onmouseover=\"roll(this, '" + $g_strFileLoc + "vleimgs/insert_on.gif')\" " + "            onmouseout=\"roll(this, '" + $g_strFileLoc + "vleimgs/insert.gif')\" />" + "       </td>" + "      </tr>" + "     </table>" + "    </td>" + "   </tr>" + "  </table>   " + " </div>" + "</form>"; document.writeln(gEb); var hEb; var iEb = false; try { var jEb = parseInt(p_strCustId); iEb = Wea && (jEb >= 100 && jEb < 200); } catch(err) { iEb = false; } if(iEb) { hEb = 28; } else { hEb = Wea?29:28; } gEb = "<FORM class=\"rwPrScreen\" rwTHcomp=\"1\" id=\"theEditform\" style=\"visible:hidden\">" + " <input TYPE=\"hidden\" id=\"editCustId\" VALUE=\"" + p_strCustId + "\">" + " <input TYPE=\"hidden\" id=\"editBookId\" VALUE=\"" + p_strBookId + "\">" + " <input TYPE=\"hidden\" id=\"editPageId\" VALUE=\"" + p_strPageId + "\">" + " <div id=\"rwPronEdit\" class=\"" + (iEb?"create_edit_nimas":"rwPronContent") + "\" style=\"visibility:hidden\" texthelpStopContinuous>" + "  <div id=\"rwDragMePronEdit\" style='cursor:move'>" + "   <a href=\"javascript:void(0)\" onmouseover=\"if (document.images) { rwCloseEdit.src = close2.src; } \"" + "       onmouseout=\"if (document.images) { rwCloseEdit.src = close1.src; }\"" + "       onclick=\"$rw_closePronEdit();return false;\">" + "    <img ignore id=\"rwCloseEdit\" src=\"" + $g_strFileLoc + "vleimgs/close_off.gif\" " + "        style=\"margin:0;border:0;position:relative;top:0px;right:-1px;\"" + "        alt=\"Close button\" title=\"Close Edit Pronunciation Form\" name=\"rwCloseEdit\" align=\"right\"/>" + "   </a>" + "  </div>" + "  <table border=0 cellspacing=\"0\" bgcolor=\"#ECE9D8\" height=\"100%\" cellpadding=\"0\">" + "   <tr>" + "    <td valign=TOP>" + "     <table width=\"212\" cellspacing=\"8\" "+ "         bgcolor=\"#ECE9D8\" cellpadding=\"0\">" + "      <tr>" + "       <td width=\"212\">" + "        <span>Say this (Read only):</span>" + "        <span style=\"font-size: 9pt\">" + "         <input class=\"input\" id=\"editSayThis\" " + "             onKeyUp=\"OnChangedURL();\" DISABLED" + "             size=\"" + hEb + "\">" + "        </span>" + "       </td>" + "       <td valign=\"bottom\">" + "        <img ignore border=\"0\" " + "            alt=\"Speaker\" title=\"Speak Pronunciation\" src=\"" + $g_strFileLoc + "vleimgs/speaker.gif\"" + "            onclick=\"callFlashSpeechNoPron(document.getElementById('editSayThis').value);\"" + "            onmouseover=\"roll(this, '" + $g_strFileLoc + "vleimgs/speaker_on.gif');\"" + "            onmouseout=\"roll(this, '" + $g_strFileLoc + "vleimgs/speaker.gif');\" />" + "       </td>" + "      </tr>" + "      <tr>" + "       <td width=\"212\">" + "        <span>Like this:</span>" + "        <input id=\"editLikeThis\" class=\"input\" size=\"" + hEb + "\">" + "       </td>" + "       <td valign=\"bottom\">" + "        <p align=\"center\">" + "         <img ignore border=\"0\" alt=\"Speaker\" title=\"Speak Pronunciation\" src=\"" + $g_strFileLoc + "vleimgs/speaker.gif\"" + "             onclick=\"callFlashSpeechNoPron(document.getElementById('editLikeThis').value);\"" + "             onmouseover=\"roll(this, '" + $g_strFileLoc + "vleimgs/speaker_on.gif');\"" + "             onmouseout=\"roll(this, '" + $g_strFileLoc + "vleimgs/speaker.gif');\" />" + "        </p>"+ "       </td>" + "      </tr>" + "      <tr>" + "       <td><input type=\"checkbox\" id=\"editAllPages\" value=\"false\" DISABLED>All pages in book" + "       </td>" + "       <td></td>" + "      </tr>" + "      <tr>" + "       <td colspan=2>" + "        <table>" + "         <tr>" + "          <td width=150 class=\"message\">" + "           <div id=\"editPageMsg\"></div>" + "          </td>" + "          <td>" + "           <div ID=\"updateButton\" style=\"display:none\">" + "            <img ignore src=\"" + $g_strFileLoc + "vleimgs/update.gif\" border=0 " + "                alt=\"Update pronunciation button\" title=\"Update Pronunciation\" " + "                onClick=\"updatePron(document.getElementById('editSayThis').value, " + "document.getElementById('editLikeThis').value, " + "document.getElementById('editCustId').value, " + "document.getElementById('editBookId').value, " + "document.getElementById('editPageId').value, " + "document.getElementById('editAllPages').checked);\"" + "                onmouseover=\"roll(this, '" + $g_strFileLoc + "vleimgs/update_on.gif');\"" + "                onmouseout=\"roll(this, '" + $g_strFileLoc + "vleimgs/update.gif');\" />" + "           </div>" + "          </td>" + "         </tr>" + "        </table>" + "       </td>" + "      </tr>" + "     </table>" + "    </td>" + "    <td>" + "     <table id=\"proneditlist\" border=0 height=\"160\" cellspacing=\"1\" width=\"433\" bgcolor=\"#ECE9D8\" cellpadding=\"0\">" + "      <tr>" + "       <td valign align=\"top\">" + "        <TABLE border=\"0\" width=\"433\" cellspacing=\"0\" cellpadding=\"2\" class=\"tblProns\">" + "         <COL WIDTH=164>" + "         <COL WIDTH=164>" + "         <COL WIDTH=48>" + "         <COL WIDTH=60>" + "         <tr height=24>" + "          <td bgcolor=\"#c9c7b8\">&nbsp;Say this</td>" + "          <td bgcolor=\"#c9c7b8\">&nbsp;Like this</td>" + "          <td bgcolor=\"#c9c7b8\">&nbsp;Actions</td>" + "          <td bgcolor=\"#c9c7b8\">&nbsp;All pages</td>" + "         </tr>" + "        </TABLE>" + "       </td>" + "       <td></td>" + "      </tr>" + "      <tr>" + "       <td>" + "        <div class=\"pronList\">" + "         <div id=\"pronsAvail\"></div>" + "        </div>" + "       </td>" + "      </tr>" + "     </table>" + "    </td>" + "   </tr>" + "  </table>" + " </div>" + "</form>"; document.writeln(gEb);}if(rba != null && sba != null && tba != null){ $rw_barPronInit(rba, sba, tba);}function $rw_setCustomerId(p_strVal){ try { rba = p_strVal; var flash = rw_getWebToSpeech(); if(flash != null) { flash.setCustomerId(p_strVal); } var vEb = document.getElementById("createCustId"); if(vEb != null) { vEb.value = "" + p_strVal; } vEb = document.getElementById("editCustId"); if(vEb != null) { vEb.value = "" + p_strVal; } vEb = document.getElementById("editPageMsg"); if(vEb != null) { vEb.innerHTML = ""; } HFb(rba, sba, tba); } catch(ignore) { }}function $rw_setBookId(p_strVal){ try { sba = p_strVal; var flash = rw_getWebToSpeech(); if(flash != null) { flash.setBookId(p_strVal); } var vEb = document.getElementById("createBookId"); if(vEb != null) { vEb.value = "" + p_strVal; } vEb = document.getElementById("editBookId"); if(vEb != null) { vEb.value = "" + p_strVal; } vEb = document.getElementById("editPageMsg"); if(vEb != null) { vEb.innerHTML = ""; } HFb(rba, sba, tba); } catch(ignore) { }}function $rw_setPageId(p_strVal){ try { tba = p_strVal; var flash = rw_getWebToSpeech(); if(flash != null) { flash.setPageId(p_strVal); } var vEb = document.getElementById("createPageId"); if(vEb != null) { vEb.value = "" + p_strVal; } vEb = document.getElementById("editPageId"); if(vEb != null) { vEb.value = "" + p_strVal; } vEb = document.getElementById("editPageMsg"); if(vEb != null) { vEb.innerHTML = ""; } HFb(rba, sba, tba); } catch(ignore) { }}var qEb = false;var rEb = false;function $rw_event_pronCreate(){ if(rEb) { $rw_closePronEdit(); } var sEb; if(gea) { var flash = Dta(eea); hea = true; if(flash == null) { return; } sEb = flash.clickOnDictionary(); flash.focus(); } else { sEb = qta(); } sEb = Jva(sEb); if(sEb.length > 0) { document.getElementById("createSayThis").value = sEb; } bia(true, Uea); qEb = true; }function $rw_event_pronEdit(){ if(qEb) { $rw_closePronCreate(); } bia(true, Vea); rEb = true;}function $rw_closePronCreate(){ try { var vEb = document.getElementById("createSayThis"); if(vEb != null) { vEb.value = ""; } vEb = document.getElementById("createLikeThis"); if(vEb != null) { vEb.value = ""; } document.getElementById("confirmPageMsg").innerHTML = ''; bia(false, Uea); qEb = false; } catch(ignore) { }}function $rw_closePronEdit(){ try { var vEb = document.getElementById("editSayThis"); if(vEb != null) { vEb.value = ""; } vEb = document.getElementById("editLikeThis"); if(vEb != null) { vEb.value = ""; } document.getElementById("editPageMsg").innerHTML = ''; RFb(); bia(false, Vea); rEb = false; } catch(ignore) { }}var wEb = "createPron deletePron editPron updatePron roll callFlashSpeech callFlashSpeechNoPron";if(document.images){ close1 = new Image(); close1.src = $g_strFileLoc + "vleimgs/close_off.gif"; close2 = new Image(); close2.src = $g_strFileLoc + "vleimgs/close_on.gif";}var xEb = false;function BFb(txt){ if(txt == null) { return false; } for(var i = 0; i < txt.length; i++) { var yEb = txt.charCodeAt(i); if(!((yEb > 47 && yEb < 58) || (yEb > 64 && yEb < 91) || (yEb > 96 && yEb < 123) || yEb == 32 || yEb == 39 || yEb == 45 || yEb == 95 || yEb > 127)) { return false; } } return true;}function createPron(p_custID, p_bookID, p_pageID, p_sayThis, p_likeThis, p_allPages){ var LFb = p_sayThis.trimTH(); var NFb = p_likeThis.trimTH(); if(LFb == null || LFb == "") { Bwa('Phrases should have 1 to 3 words, please re-enter a say this phrase.'); document.getElementById('createSayThis').focus(); return; } if(!BFb(LFb)) { Bwa('Your say this entry contains invalid characters, please re-enter.'); document.getElementById('createSayThis').focus(); return; } if(NFb == null || NFb == "") { Bwa('Phrases should have 1 to 3 words, please re-enter a like this phrase.'); document.getElementById('createLikeThis').focus(); return; } if(!BFb(LFb)) { Bwa('Your like this entry contains invalid characters, please re-enter.'); document.getElementById('createLikeThis').focus(); return; } var OFb = LFb.split(/\s+/g); var PFb = NFb.split(/\s+/g); if(OFb.length > 3) { Bwa('Phrases can only have up 3 phonetic words, please re-enter.'); document.getElementById('createSayThis').focus(); return; } if(OFb.length == 1 && PFb.length > 3) { Bwa('Phrases with 1 word can only have up 3 phonetic words, please re-enter.'); document.getElementById('createLikeThis').focus(); return; } if(OFb.length == 2 && (!(PFb.length == 2))) { Bwa('Phrases with 2 words can only have 2 phonetic words, please re-enter.'); document.getElementById('createLikeThis').focus(); return; } if(OFb.length == 3 && (!(PFb.length == 3))) { Bwa('Phrases with 3 words can only have up 3 phonetic words, please re-enter.'); document.getElementById('createLikeThis').focus(); return; } var QFb = document.createElement("script"); QFb.type = "text/javascript"; if(xEb) { QFb.src = "http://www.texthelp.com/RWOnlinePron/vle_create_post.asp?" + "custID=" + p_custID + "&bookID=" +p_bookID + "&pageID=" + p_pageID + "&sayThis=" + escape(document.getElementById('createSayThis').value) + "&likeThis=" + escape(document.getElementById('createLikeThis').value) + "&allPages=" + p_allPages + "&serverName=" + escape(jba); } else { QFb.src = "http://" + iba + "/RWPronServer?" + "cmd=" + "createPron" + "&domain=" + escape(jba) + "&serverName=" + "SpeechNAServer" + "&custID=" + p_custID + "&bookID=" +p_bookID + "&pageID=" + p_pageID + "&sayThis=" + escape(LFb) + "&likeThis=" + escape(NFb) + "&allPages=" + p_allPages; } document.body.appendChild(QFb);}function $vleCreatePostAspReply(p_str){ $vleCreateJSReply(p_str);}function $vleCreateJSReply(p_str){ try { if(p_str == "Pronunciation inserted") { document.getElementById('createSayThis').value = ''; document.getElementById('createLikeThis').value = ''; } document.getElementById("confirmPageMsg").innerHTML = p_str; HFb(rba, sba, tba); } catch(ignore) { }}function HFb(p_custID, p_bookID, p_pageID){ var QFb = document.createElement("script"); QFb.type = "text/javascript"; if(xEb) { QFb.src = "http://www.texthelp.com/RWOnlinePron/vle_edit_list.asp?" + "custID=" + p_custID + "&bookID=" + p_bookID + "&pageID=" + p_pageID + "&serverName=" + escape(jba); document.body.appendChild(QFb); } else { QFb.src = "http://" + iba + "/RWPronServer?" + "cmd=" + "getPron" + "&domain=" + escape(jba) + "&serverName=" + "SpeechNAServer" + "&custID=" + p_custID + "&bookID=" + p_bookID + "&pageID=" + p_pageID + "&imagePath=" + "http://" + iba + "/" + nba + "/v" + eba; document.body.appendChild(QFb); }}function $vleEditListAspReply(p_str){ try { document.getElementById("pronsAvail").innerHTML = p_str; } catch(ignore) { }}function $vleEditListJavaReply(p_str){ try { document.getElementById("pronsAvail").innerHTML = p_str; } catch(ignore) { }}function deletePron(p_custID, p_bookID, p_pageID, p_pron, p_allPages){ document.getElementById('editSayThis').value = ''; document.getElementById('editLikeThis').value = ''; RFb(); var QFb = document.createElement("script"); QFb.type = "text/javascript"; if(xEb) { QFb.src = "http://www.texthelp.com/RWOnlinePron/vle_edit_delete.asp?" + "custID=" + p_custID + "&bookID=" + p_bookID + "&pageID=" + p_pageID + "&sayThis=" + escape(p_pron) + "&allPages=" + p_allPages + "&serverName=" + escape(jba); document.body.appendChild(QFb); } else { QFb.src = "http://" + iba + "/RWPronServer?" + "cmd=" + "deletePron" + "&domain=" + escape(jba) + "&serverName=" + "SpeechNAServer" + "&custID=" + p_custID + "&bookID=" + p_bookID + "&pageID=" + p_pageID + "&sayThis=" + escape(p_pron) + "&allPages=" + p_allPages; document.body.appendChild(QFb); }}function $vleEditDeleteAspReply(p_src){ $vleDeleteJSReply(p_src);}function $vleDeleteJSReply(p_src){ try { document.getElementById("editPageMsg").innerHTML = p_src; HFb(rba, sba, tba); } catch(ignore) { }}function editPron(p_sayThis, p_likeThis, p_allPages){ try { document.getElementById("editPageMsg").innerHTML = ''; document.getElementById('editSayThis').value = p_sayThis; document.getElementById('editLikeThis').value = p_likeThis; document.getElementById('editAllPages').checked = p_allPages; SFb(); } catch(ignore) { }}function updatePron(p_sayThis, p_likeThis, p_custID, p_bookID, p_pageID, p_allPages){ var LFb = p_sayThis.replace(/^\s+|\s+$/g, ""); var NFb = p_likeThis.replace(/^\s+|\s+$/g, ""); if(NFb == null || NFb == "") { Bwa('Phrases should have 1 to 3 words, please re-enter a like this phrase.'); document.getElementById('editLikeThis').focus(); return; } if(!BFb(NFb)) { Bwa('Your like this entry contains invalid characters.'); document.getElementById('editLikeThis').focus(); return; } var OFb = LFb.split(/\s+/g); var PFb = NFb.split(/\s+/g); if(OFb.length > 3) { Bwa('Phrases can only have up 3 phonetic words, please re-enter.'); document.getElementById('editSayThis').focus(); return; } if(OFb.length == 1 && PFb.length > 3) { Bwa('Phrases with 1 word can only have up 3 phonetic words, please re-enter.'); document.getElementById('editLikeThis').focus(); return; } if(OFb.length == 2 && (!(PFb.length == 2))) { Bwa('Phrases with 2 words can only have 2 phonetic words, please re-enter.'); document.getElementById('editLikeThis').focus(); return; } if(OFb.length == 3 && (!(PFb.length == 3))) { Bwa('Phrases with 3 words can only have up 3 phonetic words, please re-enter.'); document.getElementById('editLikeThis').focus(); return; } var QFb = document.createElement("script"); QFb.type = "text/javascript"; if(xEb) { QFb.src = "http://www.texthelp.com/RWOnlinePron/vle_edit_post.asp?" + "custID=" + p_custID + "&bookID=" + p_bookID + "&pageID=" + p_pageID + "&sayThis=" + escape(document.getElementById('editSayThis').value) + "&likeThis=" + escape(document.getElementById('editLikeThis').value) + "&allPages=" + document.getElementById('editAllPages').checked + "&serverName=" + escape(jba); document.body.appendChild(QFb); } else { QFb.src = "http://" + iba + "/RWPronServer?" + "cmd=" + "editPron" + "&domain=" + escape(jba) + "&serverName=" + "SpeechNAServer" + "&custID=" + p_custID + "&bookID=" + p_bookID + "&pageID=" + p_pageID + "&sayThis=" + escape(LFb) + "&likeThis=" + escape(NFb) + "&allPages=" + document.getElementById('editAllPages').checked; document.body.appendChild(QFb); }}function $vleEditPostAspReply(p_str){ try { $vleEditJSReply(p_str); } catch(ignore) { }}function $vleEditJSReply(p_str){ try { document.getElementById("editPageMsg").innerHTML = p_str; HFb(rba, sba, tba); } catch(ignore) { }}function RFb(){ try { if(document.getElementById) { document.getElementById('updateButton').style.display = 'none'; } } catch(ignore) { }}function SFb(){ if(document.getElementById) { document.getElementById('updateButton').style.display = 'inline'; }}function roll(p_img, p_img_src){ p_img.src = p_img_src; }function callFlashSpeech(p_txt){ if(Gca) { Bwa("The pronunciation screen should not be enabled on this page with cached speech.  Changes made to pronunciations here will have no effect."); return; } var d = new Date(); var YFb = d.getTime(); if(YFb < (Tla + 500)) { return; } Tla = YFb; var flash = rw_getWebToSpeech(); if(flash != null) { flash.startSpeech(p_txt); }}function callFlashSpeechNoPron(p_txt){ if(p_txt != null && typeof(p_txt) == "string" && p_txt.length > 0) { var d = new Date(); var YFb = d.getTime(); if(YFb < (Tla + 500)) { return; } Tla = YFb; try { var flash = rw_getWebToSpeech(); if(flash != null) { flash.noPronSpeech(p_txt); } } catch(ignore) { try{window.status = "Speech failed due to the page using an old version of the WebToSpeech swf.";}catch(ignore){} } }}setTimeout("vlepronstart();", 200);function vlepronstart(){ HFb(rba, sba, tba);}$endpronflag$
